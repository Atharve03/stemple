{
  "BackgroundColor": "#000000",
  "AppBarBackColor": "#000000",
  "AppBarIcon": "#000000",
  "PageLayout": [
    {
      "View": "TextView",
      "TextViewData": {
        "Title": "CONTACT TST",
        "Description": "",
        "StyleProperties": {
          "AspectRatio": 1.0,
          "TitleTextColor": "#ffffff",
          "TitleTextFontName": "",
          "TitleTextFontSize": 24.0,
          "TitleTextFontWeight": "",
          "TitleTextNoOfLines": 4,
          "DescriptionTextColor": "#ddddd",
          "DescriptionTextFontName": "",
          "DescriptionTextFontSize": 24.0,
          "DescriptionTextFontWeight": "",
          "DescriptionTextNoOfLines": 4,
          "BackgroundColor": "#171717",
          "Alignment": "",
          "Margin": 15.0,
          "Padding": 15.0,
          "Radius": 15.0,
          "BackgroundMargin": 0.0,
          "BackgroundPadding": 8.0,
          "BackgroundRadius": 15.0,
          "ImageSrc": "https://thesatanictemple.com/cdn/shop/files/effective-banner_2880x1364_10a7b13c-5f7a-49d9-ab9d-32b5e64c6209_1664x512.jpg?v=1694017420"
        }
      }
    },
    {
      "View": "WebView",
      "WebViewData": {
        "ContentType": "html",
        "ScaleSize": 0.8,
        "HtmlContent": "<!DOCTYPE html>
<html lang='en'>

<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>Document</title>
    <style>
        .globo-form-id-57897 .globo-form-app {
            max-width: 1000px;
            width: -webkit-fill-available;


        }

        .globo-form-id-57897 .globo-form-app .globo-heading {
            color: #000
        }

        .globo-form-id-57897 .globo-form-app .globo-description,
        .globo-form-id-57897 .globo-form-app .header .globo-description {
            color: #6c757d
        }

        .globo-form-id-57897 .globo-form-app .globo-label,
        .globo-form-id-57897 .globo-form-app .globo-form-control label.globo-label,
        .globo-form-id-57897 .globo-form-app .globo-form-control label.globo-label span.label-content {
            color: #000;
            text-align: left !important;
        }

        .globo-form-id-57897 .globo-form-app .globo-label.globo-position-label {
            height: 20px !important;
        }

        .globo-form-id-57897 .globo-form-app .globo-form-control .help-text.globo-description {
            color: #6c757d
        }

        .globo-form-id-57897 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,
        .globo-form-id-57897 .globo-form-app .globo-form-control .radio-wrapper .globo-option {
            color: #000
        }

        .globo-form-id-57897 .globo-form-app .footer {
            text-align: center;
        }

        .globo-form-id-57897 .globo-form-app .footer button {
            border: 1px solid rgba(124, 48, 15, 1);

        }

        .globo-form-id-57897 .globo-form-app .footer button.submit,
        .globo-form-id-57897 .globo-form-app .footer button.checkout,
        .globo-form-id-57897 .globo-form-app .footer button.action.loading .spinner {
            background-color: rgba(124, 48, 15, 1);
            color: #ffffff;
        }

        .globo-form-id-57897 .globo-form-app .globo-form-control .star-rating>fieldset:not(:checked)>label:before {
            content: url('data:image/svg+xml; utf8, <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"star\" class=\"svg-inline--fa fa-star fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox='0 0 576 512'><path fill='rgba(124,48,15,1)' d='M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z'></path></svg>');
        }

        .globo-form-id-57897 .globo-form-app .globo-form-control .star-rating>fieldset>input:checked~label:before {
            content: url('data:image/svg+xml; utf8, <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"star\" class=\"svg-inline--fa fa-star fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox='0 0 576 512'><path fill='rgba(124,48,15,1)' d='M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z'></path></svg>');
        }

        .globo-form-id-57897 .globo-form-app .globo-form-control .star-rating>fieldset:not(:checked)>label:hover:before,
        .globo-form-id-57897 .globo-form-app .globo-form-control .star-rating>fieldset:not(:checked)>label:hover~label:before {
            content: url('data:image/svg+xml; utf8, <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"star\" class=\"svg-inline--fa fa-star fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox='0 0 576 512'><path fill='rgba(124,48,15,1)' d='M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z'></path></svg>')
        }

        .globo-form-id-57897 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked~.radio-label:after {
            background: rgba(124, 48, 15, 1);
            background: radial-gradient(rgba(124, 48, 15, 1) 40%, #fff 45%);
        }

        .globo-form-id-57897 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked~.checkbox-label:before {
            border-color: rgba(124, 48, 15, 1);
            box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);
            background-color: rgba(124, 48, 15, 1);
        }

        .globo-form-id-57897 .globo-form-app .step.-completed .step__number,
        .globo-form-id-57897 .globo-form-app .line.-progress,
        .globo-form-id-57897 .globo-form-app .line.-start {
            background-color: rgba(124, 48, 15, 1);
        }

        .globo-form-id-57897 .globo-form-app .checkmark__check,
        .globo-form-id-57897 .globo-form-app .checkmark__circle {
            stroke: rgba(124, 48, 15, 1);
        }

        .globo-form-id-57897 .floating-button {
            background-color: rgba(124, 48, 15, 1);
        }

        .globo-form-id-57897 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input~.checkbox-label:before,
        .globo-form-app .globo-form-control .radio-wrapper .radio-input~.radio-label:after {
            border-color: rgba(124, 48, 15, 1);
        }

        .globo-form-id-57897 .flatpickr-day.selected,
        .globo-form-id-57897 .flatpickr-day.startRange,
        .globo-form-id-57897 .flatpickr-day.endRange,
        .globo-form-id-57897 .flatpickr-day.selected.inRange,
        .globo-form-id-57897 .flatpickr-day.startRange.inRange,
        .globo-form-id-57897 .flatpickr-day.endRange.inRange,
        .globo-form-id-57897 .flatpickr-day.selected:focus,
        .globo-form-id-57897 .flatpickr-day.startRange:focus,
        .globo-form-id-57897 .flatpickr-day.endRange:focus,
        .globo-form-id-57897 .flatpickr-day.selected:hover,
        .globo-form-id-57897 .flatpickr-day.startRange:hover,
        .globo-form-id-57897 .flatpickr-day.endRange:hover,
        .globo-form-id-57897 .flatpickr-day.selected.prevMonthDay,
        .globo-form-id-57897 .flatpickr-day.startRange.prevMonthDay,
        .globo-form-id-57897 .flatpickr-day.endRange.prevMonthDay,
        .globo-form-id-57897 .flatpickr-day.selected.nextMonthDay,
        .globo-form-id-57897 .flatpickr-day.startRange.nextMonthDay,
        .globo-form-id-57897 .flatpickr-day.endRange.nextMonthDay {
            background: rgba(124, 48, 15, 1);
            border-color: rgba(124, 48, 15, 1);
        }

        .globo-form-id-57897 .globo-paragraph,
        .globo-form-id-57897 .globo-paragraph * {
            background: #fff !important;
            color: #000 !important;
            width: 100% !important;
        }
    </style>


    <script type='text/javascript' async=''
        src='https://static.rechargecdn.com/assets/js/widget.min.js?shop=shop-satan.myshopify.com'></script>
    <script type='text/javascript' async=''
        src='//cdn.shopify.com/proxy/c60844388e88000e21e6f9a7a48f2948057451f6077b4caad6311df451e7afb0/static.cdn.printful.com/static/js/external/shopify-product-customizer.js?v=0.28&amp;shop=shop-satan.myshopify.com&amp;sp-cache-control=cHVibGljLCBtYXgtYWdlPTkwMA'></script>
    <script type='text/javascript' async=''
        src='https://chimpstatic.com/mcjs-connected/js/users/43c46880f30ca2d5b901adf24/19285f5861938cb03c40555be.js?shop=shop-satan.myshopify.com'></script>
    <script type='text/javascript' async=''
        src='https://upsell-app.logbase.io/lb-upsell.js?shop=shop-satan.myshopify.com'></script>
    <script type='text/javascript' async=''
        src='https://cdn.shopify.com/shopifycloud/privacy-banner/storefront-banner.js?shop=shop-satan.myshopify.com'></script>
    <script type='text/javascript' async=''
        src='//productreviews.shopifycdn.com/embed/loader.js?shop=shop-satan.myshopify.com'></script>
    <script async='' src='https://s.pinimg.com/ct/lib/main.74d80534.js'></script>
    <script async='' src='https://s.pinimg.com/ct/core.js'></script>
    <script
        src='https://connect.facebook.net/signals/config/242258393750463?v=2.9.138&amp;r=stable&amp;domain=thesatanictemple.com'
        async=''></script>
    <script async='' src='https://connect.facebook.net/en_US/fbevents.js'></script>
    <script type='text/javascript' async=''
        src='https://thesatanictemple.com/cdn/s/trekkie.storefront.7a4225caf9379fe42103e492053220a7195df1ae.min.js'></script>
    <script type='text/javascript' async=''
        src='https://www.googletagmanager.com/gtag/js?id=G-X7S1ZNXFZQ&amp;l=dataLayer&amp;cx=c'></script>
    <script async='' src='https://www.googletagmanager.com/gtm.js?id=GTM-KX4RRB6'></script>
    <script>
        window.Store = window.Store || {};
        window.Store.id = 4280465;
    </script>

    <meta name='msvalidate.01' content='22E750CB2F6871F6D2A6A1F6BE147FF6'>
    <meta name='google-site-verification' content='g2MD2ycKt2VVSPkLr13yOnOA2zm2mjRHyyVoQ4RV9Oo'>
    <!-- Google Tag Manager -->
    <script>(function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-KX4RRB6');</script>
    <!-- End Google Tag Manager -->
    <!-- Google tag (gtag.js) -->
    <script async='' src='https://www.googletagmanager.com/gtag/js?id=AW-11164325863'></script>
    <script> window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag('js', new Date()); gtag('config', 'AW-11164325863'); </script>
    <!-- End Google tag (gtag.js) -->

    <meta charset='utf-8'>
    <style data-styles=''>
        lb-product-page-cross-sell-ew,
        lb-product-card,
        lb-shared-variants,
        lb-tq-page-upsell,
        lb-upsell-addon-popup,
        lb-upsell-modal,
        lb-upsell-product-page-addon,
        ppcse-floting-toast,
        ppcse-modal,
        image-toast,
        plus-minus-stepper,
        lb-upsell-product-preview,
        lb-upsell-timer {
            visibility: hidden
        }

        .hydrated {
            visibility: inherit
        }
    </style>
    <meta http-equiv='cleartype' content='on'>
    <meta name='robots' content='index,follow'>


    <title>
        The Satanic Temple - Contact - TST
    </title>


    <meta name='description'
        content='The mission of The Satanic Temple is to support empathy between people, freedom, unwillingness to tyrannical power, and protest against injustice. Headquarters of The Satanic Temple locations at 64 Bridge Street in Salem, Massachusetts.'>




    <meta name='author' content='TST'>
    <meta property='og:url' content='https://thesatanictemple.com/pages/contact'>
    <meta property='og:site_name' content='TST'>




    <meta property='og:type' content='article'>
    <meta property='og:title' content='Contact'>



    <meta property='og:description'
        content='The mission of The Satanic Temple is to support empathy between people, freedom, unwillingness to tyrannical power, and protest against injustice. Headquarters of The Satanic Temple locations at 64 Bridge Street in Salem, Massachusetts.'>




    <meta name='twitter:site' content='@satanic_temple_'>

    <meta name='twitter:card' content='summary'>






    <meta name='google-site-verification' content='b21VBWD59_tsdsKSQbRa5cFpRglfVL4hiLUL2YNoKhI'>

    <!-- Mobile Specific Metas -->
    <meta name='HandheldFriendly' content=\"true\">
    <meta name='MobileOptimized' content='320'>
    <meta name='viewport' content='width=device-width,initial-scale=1'>
    <meta name='theme-color' content='#ffffff'>

    <!-- Preconnect Domains -->
    <style>
        .ppcse-modal-bg,
        .ppcse-modal-wrap {
            display: none
        }

        .ppcse-modal-bg {
            position: fixed;
            z-index: 999;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            opacity: 0.4;
            background-color: black;
            overflow: hidden
        }

        .ppcse-modal-prod-title {
            margin-top: 0px;
            font-size: min(1.3em, 24px)
        }

        .ppcse-modal-compare-at-price {
            text-decoration: line-through
        }

        .ppcse-modal-wrap {
            position: fixed;
            z-index: 9999;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            min-height: 40vh;
            max-height: 85vh;
            width: 85vw;
            background-color: white;
            color: black;
            border: 1px solid lightgray;
            padding: 0px 10px
        }

        .ppcse-modal-container {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            overflow-y: scroll;
            max-height: calc(85vh - 6em);
            padding-bottom: 10px
        }

        .ppcse-modal-form-label {
            display: inline-block;
            margin-bottom: 5px;
            font-size: 0.875rem;
            font-weight: 700
        }

        .ppcse-modal-form-control {
            display: block;
            width: 100%;
            padding: 10px;
            color: #333;
            border: 1px solid #bbb;
            border-radius: 4px;
            box-sizing: border-box
        }

        .ppcse-modal-prod-img {
            padding-right: 10px
        }

        .ppcse-modal-prod-desc {
            width: 90%
        }

        .ppcse-close {
            display: flex;
            width: 100%;
            justify-content: flex-end;
            color: black;
            font-size: 2em;
            font-weight: bold;
            padding: 10px 0
        }

        .ppcse-close span {
            cursor: pointer
        }

        .ppcse-close-hidden {
            visibility: hidden
        }

        .ppcse-modal-cart-btn {
            margin-bottom: 10px
        }

        .ppcse-modal-prod-thumbnail-cont {
            display: flex;
            align-items: flex-start;
            justify-content: center;
            flex-wrap: wrap;
            width: 112px;
            height: fit-content;
            height: -moz-fit-content;
            margin: 0px 10px
        }

        .ppcse-modal-prod-thumbnail-cont>:first-child {
            margin-top: 0 !important
        }

        .ppcse-modal-prod-thumbnail-img {
            height: 100px;
            width: 100px;
            object-fit: contain;
            margin: 5px;
            cursor: pointer;
            padding: 5px;
            border: 1px solid white
        }

        .ppcse-modal-prod-thumbnail-img-border {
            border: 1px solid #0000EE;
            border-radius: 5px
        }

        .ppcse-modal-prod-lt {
            display: flex;
            width: calc(100% - 132px)
        }

        .ppcse-modal-prod-lt-img {
            flex: 55%;
            display: flex;
            justify-content: center;
            align-items: flex-start
        }

        .ppcse-modal-prod-lt-details {
            flex: 45%;
            padding-right: 3%
        }

        .ppcse-modal-prod-lt-full-width {
            width: 100%
        }

        .popup-unit-price-cont {
            font-style: italic;
            margin-top: 2px;
            font-weight: normal
        }

        @media (max-width:480px) {
            .ppcse-modal-container {
                max-height: calc(85vh - 6em);
                overflow-x: hidden
            }

            .ppcse-modal-wrap {
                max-height: 85vh;
                width: 90vw
            }

            .ppcse-modal-prod-desc {
                width: 100%
            }

            .ppcse-modal-form-control {
                width: 100%
            }

            .ppcse-modal-prod-img {
                width: 100%;
                padding: 0px
            }

            .ppcse-modal-prod-thumbnail-img {
                height: 50px;
                width: 50px
            }

            .ppcse-modal-prod-thumbnail-cont {
                width: 62px;
                position: fixed;
                margin: 0px
            }

            .ppcse-modal-prod-lt {
                margin-left: 70px;
                width: calc(100% - 72px);
                flex-direction: column
            }

            .ppcse-modal-prod-lt-details {
                padding: 0%
            }

            .ppcse-modal-prod-title {
                margin-top: 10px
            }

            .ppcse-modal-prod-lt-full-width {
                width: 100%;
                margin-left: 0px
            }
        }

        @media (max-width:961px) {
            .ppcse-modal-wrap {
                min-height: 80vh
            }

            .ppcse-modal-prod-thumbnail-img {
                height: 60px;
                width: 60px
            }

            .ppcse-modal-prod-thumbnail-cont {
                width: 72px;
                position: fixed;
                margin: 0px
            }

            .ppcse-modal-prod-lt {
                margin-left: 80px;
                width: calc(100% - 82px);
                flex-direction: column
            }

            .ppcse-modal-prod-lt-details {
                padding: 0%
            }

            .ppcse-modal-prod-title {
                margin-top: 10px
            }

            .ppcse-modal-prod-lt-full-width {
                width: 100%;
                margin-left: 0px
            }
        }

        @media (min-width:1281px) {
            .ppcse-modal-wrap {
                max-width: 65vw;
                min-height: 60vh
            }
        }
    </style>
    <style>
        :root {
            --lb-spc-border-radius: 6px
        }

        .lb-upsell-modal-bg,
        .lb-upsell-modal-container {
            display: none
        }

        :root {
            --lb-addon-popup-border-radius: 8px
        }

        .lb-upsell-modal-bg {
            position: fixed;
            z-index: 999;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            opacity: 0.4;
            background-color: black;
            overflow: hidden
        }

        .lb-upsell-modal-offer-name {
            padding: 6px 0px
        }

        .lb-upsell-modal-container {
            position: fixed;
            z-index: 9999;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            min-height: 250px;
            max-height: 60vh;
            width: 550px;
            background-color: white;
            color: black;
            border-radius: 6px
        }

        .lb-upsell-modal-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            overflow-y: scroll;
            max-height: calc(60vh - 100px);
            margin: 0px 15px;
            -ms-overflow-style: none;
            scrollbar-width: none;
            overflow-y: scroll;
            opacity: 0
        }

        .lb-upsell-modal-content-fadein {
            animation: fadeInOut 500ms ease-in forwards
        }

        @keyframes fadeInOut {
            0% {
                opacity: 0
            }

            100% {
                opacity: 1
            }
        }

        .lb-upsell-modal-product-details-quantity {
            margin: 20px 0px
        }

        .lb-upsell-modal-product-details-quantity-input {
            width: 100%;
            padding: 6px;
            margin-top: 5px
        }

        .lb-upsell-modal-content::-webkit-scrollbar {
            display: none
        }

        .lb-upsell-modal-product {
            display: flex;
            flex: 1 0 auto
        }

        .lb-upsell-modal-product-primary {
            margin: 0px;
            width: 100%;
            padding: 15px;
            color: var(--lb-upsell-primary-btn-text-color, white);
            background: var(--lb-upsell-primary-btn-bg-color, rgb(24, 169, 94));
            border: none;
            cursor: pointer;
            border-radius: 0px !important
        }

        .lb-upsell-modal-product-secondary {
            border-top-right-radius: 0px !important;
            border-top-left-radius: 0px !important;
            border-bottom-right-radius: 6px !important;
            border-bottom-left-radius: 6px !important;
            width: 100%;
            padding: 15px;
            border: none;
            text-decoration: underline;
            color: var(--lb-upsell-puf-skip-btn-text-color, black);
            cursor: pointer;
            background: var(--lb-upsell-puf-skip-btn-bg-color, #efefef)
        }

        .lb-upsell-modal-product-img {
            height: 275px;
            width: 275px;
            border: 1px solid lightgray;
            object-fit: contain;
            border-radius: 6px
        }

        .lb-upsell-modal-product-img-cont {
            margin-right: 20px
        }

        .lb-upsell-modal-nav {
            width: 275px;
            display: flex;
            justify-content: space-between;
            align-items: baseline;
            position: relative;
            top: -165px
        }

        .lb-upsell-modal-product-desc {
            width: 100%;
            margin: 10px 0px 30px 0px !important
        }

        .lb-upsell-visiblity-none {
            visibility: hidden
        }

        .lb-upsell-error {
            color: red
        }

        .lb-upsell-spinner {
            margin-top: 3px
        }

        .lb-upsell-spinner circle {
            stroke: black !important
        }

        .lb-upsell-primary-spinner {
            margin-top: 3px
        }

        .lb-upsell-secondary-spinner {
            margin-top: 3px
        }

        .lb-upsell-primary-spinner circle {
            stroke: black
        }

        .lb-upsell-secondary-spinner circle {
            stroke: black
        }

        .lb-upsell-modal-nav-prev,
        .lb-upsell-modal-nav-next {
            cursor: pointer;
            width: auto;
            background: lightgray;
            padding: 3px 7px;
            background: rgba(0, 0, 0, 0.3);
            color: white
        }

        .lb-upsell-modal-product-details {
            width: 200px
        }

        .lb-upsell-modal-product-details-title {
            padding: 15px 0px 10px 0px;
            font-size: 21px;
            font-weight: bold;
            color: var(--lb-upsell-primary-text-color)
        }

        .lb-upsell-modal-product-details-price {
            color: var(--lb-upsell-product-price-color)
        }

        .lb-upsell-modal-product-details-variants {
            padding-top: 20px
        }

        .lb-upsell-variants-select {
            width: 100%;
            padding: 6px;
            margin-top: 5px
        }

        .lb-upsell-variants-cont {
            display: inline
        }

        .lb-upsell-modal-timer-container {
            background: rgb(45, 45, 45);
            color: white;
            width: 100%;
            text-align: center;
            padding: 7px;
            margin-bottom: 15px
        }

        .lb-upsell-sale-price {
            color: var(--lb-upsell-product-sale-price-color, #c8493f)
        }

        .lb-upsell-compare-at-price {
            text-decoration: line-through;
            font-size: 85%;
            color: var(--lb-upsell-product-compare-price-color)
        }

        .puf-unit-price-cont {
            font-style: italic;
            margin-top: 2px
        }

        .lb_upsell_close_svg {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            height: 18px;
            width: 18px;
            background: white;
            z-index: 9999;
            fill: #999999
        }

        .lb-upsell-modal-container-new {
            position: fixed;
            z-index: 2147483646;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            min-height: 250px;
            max-height: 80vh;
            width: 548px;
            background-color: white;
            border-radius: var(--lb-addon-popup-border-radius);
            opacity: 1
        }

        .lb-upsell-modal-header {
            border-bottom: 1px solid rgb(84 87 91 / 20%);
            display: flex;
            justify-content: space-between;
            padding: 16px 16px 16px 24px;
            box-shadow: rgb(0 0 0 / 8%) 0px 1px 4px !important
        }

        .lb-upsell-modal-title-cont {
            flex: 0 0 calc(100% - 24px);
            color: var(--lb-upsell-primary-text-color)
        }

        .lb-upsell-modal-title {
            font-size: 20px;
            line-height: 30px
        }

        .lb-upsell-modal-close-icon {
            height: 16px;
            width: 16px;
            cursor: pointer;
            margin-top: 4px;
            margin-right: 4px
        }

        .lb-upsell-modal-close-icon path {
            stroke: gray
        }

        .lb-upsell-modal-close-icon:hover path {
            stroke: black
        }

        .lb-upsell-modal-timer-container-new .lb-upsell-timer-container span {
            margin: 0px !important;
            padding: 2px 3px !important
        }

        .lb-upsell-modal-container-new .stepper-container-minus {
            border-top-left-radius: 8px;
            border-bottom-left-radius: 8px
        }

        .lb-upsell-modal-container-new .stepper-container-plus {
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px
        }

        .lb-upsell-modal-container-new .stepper-container-input {
            border-right: none;
            border-left: none
        }

        .lb-upsell-modal-body {
            overflow-y: scroll;
            max-height: calc(80vh - 160px);
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            -ms-overflow-style: none;
            scrollbar-width: none
        }

        .lb-upsell-modal-product-cont {
            opacity: 0;
            padding: 16px 0
        }

        .lb-upsell-modal-product-desc-new {
            margin: 0 16px;
            width: 100%;
            overflow-x: scroll;
            color: var(--lb-upsell-primary-text-color)
        }

        .lb-upsell-modal-product-desc-new::-webkit-scrollbar {
            width: 0px;
            background: transparent
        }

        .lb-upsell-modal-product-primary-new {
            width: unset !important;
            text-align: center
        }

        .lb-upsell-modal-product-secondary-new {
            width: unset !important;
            text-align: center
        }

        .lb-upsell-modal-body-spinner-opacity {
            opacity: 0.4 !important;
            pointer-events: none;
            overflow: hidden
        }

        .lb-upsell-modal-pointer-events-none {
            pointer-events: none
        }

        .lb-upsell-modal-body::-webkit-scrollbar {
            display: unset !important
        }

        .lb-upsell-modal-body::-webkit-scrollbar-track {
            background-color: #fff
        }

        .lb-upsell-modal-body::-webkit-scrollbar-thumb {
            background-color: #c7c7c7;
            border-radius: 16px;
            border: 4px solid #fff
        }

        .lb-upsell-modal-body::-webkit-scrollbar-thumb:hover {
            background-color: gray
        }

        .lb-upsell-modal-body::-webkit-scrollbar-button {
            display: none
        }

        .lb-upsell-modal-close-cont {
            width: 100%;
            height: 100%;
            position: absolute;
            display: flex;
            justify-content: center;
            align-items: center;
            right: 0;
            top: 0
        }

        .lb-upsell-modal-close-cont svg {
            width: 24px;
            height: 24px
        }

        .lb-upsell-modal-close-cont svg circle {
            stroke: black;
            stroke-width: 12px
        }

        .lb-upsell-overflow-hidden {
            overflow: hidden
        }

        @media (max-width:1440px) {
            .lb-upsell-modal-container {
                max-height: 85vh
            }

            .lb-upsell-modal-content {
                max-height: calc(85vh - 155px)
            }
        }

        @media (max-width:480px) {
            .lb-upsell-modal-container {
                max-height: 100vh;
                width: 100vw
            }

            .lb-upsell-modal-container-new {
                width: 96vw
            }

            .lb-upsell-modal-product {
                flex-direction: column;
                align-items: center;
                justify-content: center
            }

            .lb-upsell-modal-content {
                max-height: calc(90vh - 155px);
                margin: 0px 10px
            }

            .lb-upsell-modal-product,
            .lb-upsell-modal-nav,
            .lb-upsell-modal-product-details {
                width: 80vw
            }

            .lb-upsell-modal-product-details {
                margin-top: -17px
            }

            .lb-upsell-modal-product-img {
                width: 80vw;
                object-fit: contain
            }

            .lb-upsell-modal-product-details-title {
                padding-top: 0px
            }
        }
    </style>
    <style>
        :root {
            --lb-addon-popup-border-radius: 8px
        }

        .lb-addon-popup-bg,
        .lb-addon-popup-container {
            display: none
        }

        .lb-addon-popup-bg {
            position: fixed;
            z-index: 999;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            opacity: 0.4;
            background-color: black;
            overflow: hidden
        }

        .lb-addon-popup-container {
            position: fixed;
            z-index: 2147483646;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            min-height: 250px;
            max-height: 90vh;
            width: 548px;
            background-color: white;
            border-radius: var(--lb-addon-popup-border-radius);
            opacity: 0
        }

        .lb-addon-popup-header {
            border-bottom: 1px solid rgb(84 87 91 / 20%);
            display: flex;
            justify-content: space-between;
            padding: 16px 16px 16px 24px;
            box-shadow: rgb(0 0 0 / 8%) 0px 1px 4px !important
        }

        .lb-addon-popup-title-cont {
            flex: 0 0 calc(100% - 24px);
            color: var(--lb-upsell-primary-text-color)
        }

        .lb-addon-popup-tot-label {
            color: var(--lb-upsell-primary-text-color)
        }

        .lb-addon-popup-title {
            font-size: 20px;
            line-height: 30px
        }

        .lb-addon-popup-subtitle {
            margin-top: 2px;
            font-size: 16px;
            line-height: 24px
        }

        .lb-addon-popup-body {
            overflow-y: scroll;
            max-height: calc(90vh - 134px);
            display: flex;
            flex-wrap: wrap;
            justify-content: center
        }

        .lb-addon-popup-body-max-height {
            max-height: calc(90vh - var(--lb-addon-popup-body-max-height))
        }

        .lb-addon-popup-body::-webkit-scrollbar {
            display: unset !important
        }

        .lb-addon-popup-body::-webkit-scrollbar-track {
            background-color: #fff
        }

        .lb-addon-popup-body::-webkit-scrollbar-thumb {
            background-color: #c7c7c7;
            border-radius: 16px;
            border: 4px solid #fff
        }

        .lb-addon-popup-body::-webkit-scrollbar-thumb:hover {
            background-color: gray
        }

        .lb-addon-popup-body::-webkit-scrollbar-button {
            display: none
        }

        .lb-shared-product-card-cont {
            padding: 16px 0
        }

        .lb-addon-popup-footer {
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: rgb(104 104 104 / 8%);
            padding: 12px;
            height: 46px;
            box-sizing: content-box;
            border-bottom-left-radius: var(--lb-addon-popup-border-radius);
            border-bottom-right-radius: var(--lb-addon-popup-border-radius);
            border-top: 1px solid rgb(84 87 91 / 20%);
            box-shadow: rgb(0 0 0 / 8%) 0px 1px 4px !important;
            box-sizing: content-box !important
        }

        .lb-addon-popup-tot {
            line-height: 24px
        }

        .lb-addon-popup-tot-cont {
            color: rgb(104, 104, 104)
        }

        .lb-addon-popup-tot-price {
            color: var(--lb-upsell-product-sale-price-color, #c8493f)
        }

        .lb-addon-popup-tot-cmp-price {
            margin-left: 4px;
            font-size: 14px;
            text-decoration: line-through;
            color: var(--lb-upsell-product-compare-price-color)
        }

        .lb-addon-popup-continue-btn {
            flex-basis: 100%;
            cursor: pointer;
            padding: 2px;
            height: 40px;
            min-width: 88px;
            border: 1px solid lightgray;
            max-width: 110px;
            font-size: 12px;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-grow: 0;
            flex-shrink: 0;
            user-select: none;
            border-radius: var(--lb-spc-border-radius);
            background-color: var(--lb-upsell-pca-btn-bg-color, rgb(104, 104, 104));
            color: var(--lb-upsell-pca-btn-text-color, white)
        }

        .lb-addon-popup-continue-btn:hover {
            opacity: 0.6
        }

        .lb-addon-popup-close-icon {
            height: 16px;
            width: 16px;
            cursor: pointer;
            margin-top: 4px;
            margin-right: 4px
        }

        .lb-addon-popup-close-icon path {
            stroke: gray
        }

        .lb-addon-popup-close-icon:hover path {
            stroke: black
        }

        lb-upsell-addon-popup .lb-spc-cont {
            max-width: 468px !important;
            width: 468px;
            border: 1px solid rgb(84 87 91 / 20%) !important;
            box-shadow: unset !important;
            border-radius: var(--lb-spc-border-radius, 6px)
        }

        lb-upsell-addon-popup .lb-spc-added-var-cont {
            max-width: 416px !important
        }

        lb-upsell-addon-popup .lb-spc-details-name {
            font-size: 16px !important
        }

        .lb-upsell-timer-container span {
            margin: 0px !important;
            padding: 2px 3px !important
        }

        lb-upsell-addon-popup .lb-spc-details-btm {
            margin-top: 12px !important
        }

        lb-upsell-addon-popup .lb-spc-image-cont {
            margin: 10px 4px 10px 10px !important
        }

        lb-upsell-addon-popup .lb-spc-details-variants .lb-shared-variants-select {
            width: 116px !important;
            padding-right: 25px !important
        }

        lb-upsell-addon-popup .lb-spc-cta-common {
            box-sizing: content-box !important;
            max-width: 94px !important;
            width: 94px !important
        }

        .lb-upsell-addon-popup-card {
            margin-bottom: 12px
        }

        :root {
            --lb-spc-cta-bg: #454545 !important;
            --lb-prod-prev-border-radius: 8px
        }

        .lb-upsell-addon-popup-fadein {
            animation: fadeInOut 240ms ease-in forwards
        }

        @keyframes fadeInOut {
            0% {
                opacity: 0
            }

            100% {
                opacity: 1
            }
        }

        .lb-upsell-addon-cart {
            display: flex;
            align-items: center;
            width: fit-content;
            padding-left: 2px;
            color: var(--lb-upsell-primary-text-color, var(--lb-spc-cta-bg));
            font-size: 14px
        }

        .lb-upsell-addon-cart-ent {
            font-size: 8px;
            margin: 0 1px 0 3px
        }

        .lb-upsell-addon-cart svg path {
            stroke: var(--lb-upsell-primary-text-color, var(--lb-spc-cta-bg));
            stroke-width: 2
        }

        .lb-upsell-popup-body-spinner-opacity {
            opacity: 0.4 !important;
            overflow: hidden;
            pointer-events: none
        }

        .lb-upsell-modal-close-cont {
            width: 100%;
            height: 100%;
            position: absolute;
            display: flex;
            justify-content: center;
            align-items: center;
            right: 0;
            top: 0
        }

        .lb-upsell-modal-close-cont svg {
            width: 24px;
            height: 24px
        }

        .lb-upsell-modal-close-cont svg circle {
            stroke: black;
            stroke-width: 12px
        }

        @media (max-width: 480px) {
            .lb-addon-popup-container {
                width: 96vw
            }

            .lb-spc-cont {
                width: 100%
            }

            .lb-spc-added-var-cont {
                width: 100%
            }

            .lb-shared-product-card-cont {
                width: 92%
            }

            .lb-spc-details-name {
                font-size: 14px !important
            }
        }
    </style>
    <style>
        :root {
            --lb-prod-prev-border-radius: 8px
        }

        .lb-prod-prev-bg,
        .lb-prod-prev-cont {
            display: none
        }

        .lb-prod-prev-body-cont::-webkit-scrollbar {
            display: unset !important
        }

        .lb-prod-prev-body-cont::-webkit-scrollbar-track {
            background-color: #fff;
            border-radius: 8px
        }

        .lb-prod-prev-body-cont::-webkit-scrollbar-thumb {
            background-color: #c7c7c7;
            border-radius: 16px;
            border: 4px solid #fff
        }

        .lb-prod-prev-body-cont::-webkit-scrollbar-thumb:hover {
            background-color: gray
        }

        .lb-prod-prev-body-cont::-webkit-scrollbar-button {
            display: none
        }

        .lb-prod-prev-bg {
            position: fixed;
            z-index: 999;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            opacity: 0.4;
            background-color: black;
            overflow: hidden
        }

        .lb-prod-prev-cont {
            position: fixed;
            z-index: 2147483647;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -53%);
            min-height: 250px;
            width: 548px;
            background-color: white;
            color: black;
            border-radius: var(--lb-prod-prev-border-radius);
            height: var(--lb-prod-preview-height)
        }

        .lb-prod-prev-cont-translate-override {
            transform: translate(-50%, -50%)
        }

        .lb-prod-prev-body-cont {
            margin-left: 24px;
            padding-right: 24px;
            position: relative;
            top: 44px;
            overflow-y: scroll;
            height: calc(var(--lb-prod-preview-height) - 68px)
        }

        .lb-prod-prev-body-cont-height {
            min-height: 50vh;
            max-height: 75vh;
            border-radius: 8px;
            overflow-y: auto;
            background: white;
            margin-left: 0px;
            padding-right: 24px;
            padding-left: 24px;
            padding: 0 24px 24px 24px
        }

        .lb-prod-prev-header-box-shadow {
            box-shadow: rgb(0 0 0 / 18%) 0px 1px 4px !important
        }

        .lb-prod-prev-header {
            padding: 12px;
            border-top-left-radius: var(--lb-prod-prev-border-radius);
            border-top-right-radius: var(--lb-prod-prev-border-radius);
            position: fixed;
            background: white;
            z-index: 1000;
            width: 100%;
            width: -moz-available;
            width: -webkit-fill-available;
            width: fill-available
        }

        .lb-prod-prev-back-svg {
            fill: gray;
            cursor: pointer;
            width: 24px;
            height: 20px
        }

        .lb-prod-prev-back-svg :hover {
            fill: black
        }

        .lb-prod-prev-img-wrap {
            margin: 12px 0;
            border: 1px solid lightgray;
            border-radius: var(--lb-prod-prev-border-radius)
        }

        .lb-prod-prev-img {
            width: 220px;
            height: 220px;
            object-fit: contain
        }

        .lb-prod-prev-img-cont {
            display: flex;
            align-items: center;
            justify-content: space-around;
            padding-top: 12px
        }

        .lb-prod-prev-img-previous-svg,
        .lb-prod-prev-img-next-svg {
            height: 28px;
            width: 28px;
            cursor: pointer
        }

        .lb-prod-prev-img-previous-svg path,
        .lb-prod-prev-img-next-svg path {
            stroke: var(--lb-upsell-primary-text-color, #373737)
        }

        .lb-prod-prev-img-previous-svg-hover:hover path {
            opacity: 0.6
        }

        .lb-prod-prev-img-next-svg-hover:hover path {
            opacity: 0.6
        }

        .lb-prod-prev-img-index-svg {
            height: 12px;
            width: 12px;
            margin: 0 4px;
            cursor: pointer;
            display: flex;
            align-items: center
        }

        .lb-prod-prev-img-index path {
            fill: var(--lb-upsell-primary-text-color, gray)
        }

        .lb-prod-prev-visiblity-hidden {
            visibility: hidden
        }

        .lb-prod-prev-img-index {
            font-size: 12px;
            display: flex;
            margin: 4px 0 4px 0;
            align-items: center;
            justify-content: center;
            color: var(--lb-upsell-primary-text-color, gray)
        }

        .lb-prod-prev-title {
            font-size: 20px;
            color: var(--lb-upsell-primary-text-color)
        }

        .lb-prod-preview-desc {
            color: var(--lb-upsell-primary-text-color)
        }

        .lb-prod-prev-price-cont {
            margin-top: 8px;
            display: flex;
            align-items: center;
            gap: 4px
        }

        .lb-prod-prev-cmp-price {
            font-size: 14px;
            margin-left: 4px;
            text-decoration: line-through
        }

        .lb-prod-prev-sale-price {
            color: #c8493f
        }

        .lb-prod-prev-variants-cont {
            margin: 12px 0
        }

        .lb-prod-prev-variants-cont .lb-shared-variants-select {
            width: 100%;
            margin-top: 2px;
            border-radius: var(--lb-prod-prev-border-radius) !important
        }

        .lb-prod-prev-variants-label {
            font-size: 14px
        }

        .lb-prod-prev-cursor-not-allowed {
            cursor: not-allowed;
            opacity: 0.6
        }

        .lb-prod-prev-close-svg {
            float: right
        }

        .lb-prod-prev-close-icon {
            height: 16px;
            width: 16px;
            cursor: pointer;
            margin-top: 4px;
            margin-right: 4px
        }

        .lb-prod-prev-close-icon path {
            stroke: gray
        }

        .lb-prod-prev-close-icon:hover path {
            stroke: black
        }

        @media (max-width: 480px) {
            .lb-prod-prev-cont {
                width: 96vw
            }

            .lb-prod-prev-body-cont-height {
                min-height: 60vh;
                max-height: 80vh
            }
        }
    </style>
    <link rel='preconnect' href='https://cdn.shopify.com' crossorigin=''>
    <link rel='preconnect' href='https://fonts.shopify.com' crossorigin=''>
    <link rel='preconnect' href='https://monorail-edge.shopifysvc.com'>

    <!-- Preload Assets -->
    <link rel='preload' href='https://thesatanictemple.com/cdn/shop/t/142/assets/theme.css?v=146251060059456682091703174335'
        as='style'>
    <link rel='preload' href='https://thesatanictemple.com/cdn/shop/t/142/assets/custom.css?v=164464353814230599511703175928'
        as='style'>
    <link rel='preload'
        href='https://thesatanictemple.com/cdn/shop/t/142/assets/owl.carousel.css?v=103640546699724732651703174335'
        as='style'>
    <link rel='preload' href='https://thesatanictemple.com/cdn/shop/t/142/assets/retina.js?v=48836494779790245431703174335'
        as='script'>

    <!-- Stylesheets for Retina -->
    <link href='https://thesatanictemple.com/cdn/shop/t/142/assets/theme.css?v=146251060059456682091703174335'
        rel='stylesheet' type='text/css' media='all'>
    <link href='https://thesatanictemple.com/cdn/shop/t/142/assets/custom.css?v=164464353814230599511703175928'
        rel='stylesheet' type='text/css' media='all'>
    <link href='https://thesatanictemple.com/cdn/shop/t/142/assets/owl.carousel.css?v=103640546699724732651703174335'
        rel='stylesheet' type='text/css' media='all'>


    <link rel='shortcut icon' type='image/x-icon'
        href='https://thesatanictemple.com/cdn/shop/files/favicon-196x196_small_5541c9d8-261d-421e-b4a3-7c319a24734c_180x180.png?v=1691588991'>
    <link rel='apple-touch-icon'
        href='https://thesatanictemple.com/cdn/shop/files/favicon-196x196_small_5541c9d8-261d-421e-b4a3-7c319a24734c_180x180.png?v=1691588991'>
    <link rel='apple-touch-icon' sizes='72x72'
        href='https://thesatanictemple.com/cdn/shop/files/favicon-196x196_small_5541c9d8-261d-421e-b4a3-7c319a24734c_72x72.png?v=1691588991'>
    <link rel='apple-touch-icon' sizes='114x114'
        href='https://thesatanictemple.com/cdn/shop/files/favicon-196x196_small_5541c9d8-261d-421e-b4a3-7c319a24734c_114x114.png?v=1691588991'>
    <link rel='apple-touch-icon' sizes='180x180'
        href='https://thesatanictemple.com/cdn/shop/files/favicon-196x196_small_5541c9d8-261d-421e-b4a3-7c319a24734c_180x180.png?v=1691588991'>
    <link rel='apple-touch-icon' sizes='228x228'
        href='https://thesatanictemple.com/cdn/shop/files/favicon-196x196_small_5541c9d8-261d-421e-b4a3-7c319a24734c_228x228.png?v=1691588991'>


    <link rel='canonical' href='https://thesatanictemple.com/pages/contact'>






    <script>
        window.PXUTheme = window.PXUTheme || {};
        window.PXUTheme.version = '7.1.0';
        window.PXUTheme.name = 'Retina';
    </script>
    <script type='text/javascript' async=''
        src='https://googleads.g.doubleclick.net/pagead/viewthroughconversion/11164325863/?random=1703674834558&amp;cv=11&amp;fst=1703674834558&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be3bt0&amp;gcd=11l1l1l1l1&amp;dma=0&amp;u_w=1280&amp;u_h=720&amp;url=https%3A%2F%2Fthesatanictemple.com%2Fpages%2Fcontact&amp;ref=https%3A%2F%2Fthesatanictemple.com%2Fpages%2Fjoin-us&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=The%20Satanic%20Temple%20-%20Contact%20-%20TST&amp;auid=1392691658.1702628487&amp;fledge=1&amp;uaa=x86&amp;uab=64&amp;uafvl=Not_A%2520Brand%3B8.0.0.0%7CChromium%3B120.0.6099.130%7CGoogle%2520Chrome%3B120.0.6099.130&amp;uamb=0&amp;uap=Windows&amp;uapv=14.0.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4'></script>


    <script>

        window.PXUTheme = window.PXUTheme || {};


        window.PXUTheme.routes = window.PXUTheme.routes || {};
        window.PXUTheme.routes.root_url = '/';
        window.PXUTheme.routes.cart_url = '/cart';
        window.PXUTheme.routes.search_url = '/search';
        window.PXUTheme.routes.predictive_search_url = '/search/suggest';
        window.PXUTheme.routes.product_recommendations_url = '/recommendations/products';


        window.PXUTheme.theme_settings = {};

        window.PXUTheme.theme_settings.current_locale = 'en';
        window.PXUTheme.theme_settings.shop_url = 'https://thesatanictemple.com';


        window.PXUTheme.theme_settings.cart_action_type = 'ajax';
        window.PXUTheme.theme_settings.shipping_calculator = false;


        window.PXUTheme.theme_settings.newsletter_popup = false;
        window.PXUTheme.theme_settings.newsletter_popup_days = '0';
        window.PXUTheme.theme_settings.newsletter_popup_mobile = false;
        window.PXUTheme.theme_settings.newsletter_popup_seconds = 4;


        window.PXUTheme.theme_settings.enable_autocomplete = true;


        window.PXUTheme.theme_settings.free_text = 'Free';
        window.PXUTheme.theme_settings.sold_out_options = 'selectable';
        window.PXUTheme.theme_settings.select_first_available_variant = true;
        window.PXUTheme.theme_settings.notify_me_form = true;
        window.PXUTheme.theme_settings.show_secondary_media = false;


        window.PXUTheme.theme_settings.display_inventory_left = false;
        window.PXUTheme.theme_settings.inventory_threshold = 10;
        window.PXUTheme.theme_settings.limit_quantity = true;


        window.PXUTheme.translation = {};


        window.PXUTheme.translation.newsletter_success_text = 'Thank you for joining our mailing list!';


        window.PXUTheme.translation.contact_field_email = '';


        window.PXUTheme.translation.menu = 'Menu';


        window.PXUTheme.translation.search = 'Search';
        window.PXUTheme.translation.all_results = 'View all results';


        window.PXUTheme.translation.agree_to_terms_warning = 'You must agree with the terms and conditions to checkout.';
        window.PXUTheme.translation.cart_discount = 'Discount';
        window.PXUTheme.translation.edit_cart = 'Edit Cart';
        window.PXUTheme.translation.add_to_cart = 'Add to Cart';
        window.PXUTheme.translation.add_to_cart_success = 'Translation missing: en.layout.general.add_to_cart_success';
        window.PXUTheme.translation.agree_to_terms_html = 'I Agree with the Terms &amp; Conditions';
        window.PXUTheme.translation.checkout = 'Checkout';
        window.PXUTheme.translation.or = 'Translation missing: en.layout.general.or';
        window.PXUTheme.translation.continue_shopping = 'Continue Shopping';
        window.PXUTheme.translation.empty_cart = 'Your Cart is Empty';
        window.PXUTheme.translation.cart_total = 'Total';
        window.PXUTheme.translation.subtotal = 'Subtotal';
        window.PXUTheme.translation.cart_notes = 'Order Notes';
        window.PXUTheme.translation.no_shipping_destination = 'We do not ship to this destination.';
        window.PXUTheme.translation.additional_rate = 'There is one shipping rate available for';
        window.PXUTheme.translation.additional_rate_at = 'at';
        window.PXUTheme.translation.additional_rates_part_1 = 'There are';
        window.PXUTheme.translation.additional_rates_part_2 = 'shipping rates available for';
        window.PXUTheme.translation.additional_rates_part_3 = 'starting at';



        window.PXUTheme.translation.product_add_to_cart_success = 'Added';
        window.PXUTheme.translation.product_add_to_cart = 'Add to Cart';
        window.PXUTheme.translation.product_notify_form_email = 'Enter your email address...';
        window.PXUTheme.translation.product_notify_form_send = 'Send';
        window.PXUTheme.translation.items_left_count_one = 'item left';
        window.PXUTheme.translation.items_left_count_other = 'items left';
        window.PXUTheme.translation.product_sold_out = 'Sold Out';
        window.PXUTheme.translation.product_unavailable = 'Unavailable';
        window.PXUTheme.translation.product_notify_form_success = 'Thanks! We will notify you when this product becomes available!';
        window.PXUTheme.translation.product_from = 'from';



        window.PXUTheme.media_queries = {};
        window.PXUTheme.media_queries.small = window.matchMedia('(max-width: 480px)');
        window.PXUTheme.media_queries.medium = window.matchMedia('(max-width: 798px)');
        window.PXUTheme.media_queries.large = window.matchMedia('(min-width: 799px)');
        window.PXUTheme.media_queries.larger = window.matchMedia('(min-width: 960px)');
        window.PXUTheme.media_queries.xlarge = window.matchMedia('(min-width: 1200px)');
        window.PXUTheme.media_queries.ie10 = window.matchMedia('all and (-ms-high-contrast: none), (-ms-high-contrast: active)');
        window.PXUTheme.media_queries.tablet = window.matchMedia('only screen and (min-width: 799px) and (max-width: 1024px)');


        window.PXUTheme.device = {};
        window.PXUTheme.device.hasTouch = window.matchMedia('(any-pointer: coarse)');
        window.PXUTheme.device.hasMouse = window.matchMedia('(any-pointer: fine)');


        window.PXUTheme.currency = {};


        window.PXUTheme.currency.shop_currency = 'USD';
        window.PXUTheme.currency.default_currency = 'USD';
        window.PXUTheme.currency.display_format = 'money_format';
        window.PXUTheme.currency.money_format = '$ {{amount}}';
        window.PXUTheme.currency.money_format_no_currency = '$ {{amount}}';
        window.PXUTheme.currency.money_format_currency = '$ {{amount}} USD';
        window.PXUTheme.currency.native_multi_currency = true;
        window.PXUTheme.currency.iso_code = 'USD';
        window.PXUTheme.currency.symbol = '$';
        window.PXUTheme.currency.shipping_calculator = false;
    </script>

    <script src='https://thesatanictemple.com/cdn/shop/t/142/assets/ajaxinate.min.js?v=184280457900856627781703174335'
        defer=''></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js'></script>
    <script src='https://cdn.donately.com/core/5.1/donately.min.js'></script>
    <script type='text/javascript' class='px' src='https://cdn.donately.com/963UiWkR/init.js'></script>
    <script src='https://thesatanictemple.com/cdn/shop/t/142/assets/owl.carousel.min.js?v=97891440811553454251703174335'
        defer=''></script>
    <script src='https://thesatanictemple.com/cdn/shop/t/142/assets/retina.js?v=48836494779790245431703174335'
        defer=''></script>
    <script src='https://thesatanictemple.com/cdn/shop/t/142/assets/custom.js?v=122008515050672261561703174335'
        defer=''></script>

    <script>window.performance && window.performance.mark && window.performance.mark('shopify.content_for_header.start');</script>
    <meta name='google-site-verification' content='26RCGF7Tk6-rWJXTi7OJTckW4k43wGGRphJDfZbrR4A'>
    <meta name='facebook-domain-verification' content='4yjj70jtiilxrh3c6qmcljkyvn8n09'>
    <meta name='facebook-domain-verification' content='3iiu3eyhbqehb9yv2u69fbt0cmissz'>
    <meta id='shopify-digital-wallet' name='shopify-digital-wallet' content='/4280465/digital_wallets/dialog'>
    <meta name='shopify-checkout-api-token' content='55a9394d3e4cac55acd504530fb1c602'>
    <meta id='in-context-paypal-metadata' data-shop-id='4280465' data-venmo-supported=\"true\"
        data-environment='production' data-locale='en_US' data-paypal-v4=\"true\" data-currency='USD'>
    <script async='async'
        src='https:///checkouts/internal/preloads.js?permanent-domain=shop-satan.myshopify.com&amp;locale=en-US'></script>
    <script id='apple-pay-shop-capabilities'
        type='application/json'>{'shopId':4280465,'countryCode':'US','currencyCode':'USD','merchantCapabilities':['supports3DS'],'merchantId':'gid:\/\/shopify\/Shop\/4280465','merchantName':'TST','requiredBillingContactFields':['postalAddress','email','phone'],'requiredShippingContactFields':['postalAddress','email','phone'],'shippingType':'shipping','supportedNetworks':['visa','masterCard','amex','discover','elo','jcb'],'total':{'type':'pending','label':'TST','amount':'1.00'},'shopifyPaymentsEnabled':true,'supportsSubscriptions':true}</script>
    <script id='shopify-features'
        type='application/json'>{'accessToken':'55a9394d3e4cac55acd504530fb1c602','betas':['rich-media-storefront-analytics'],'domain':'thesatanictemple.com','predictiveSearch':true,'shopId':4280465,'smart_payment_buttons_url':'https:\/\/thesatanictemple.com\/cdn\/shopifycloud\/payment-sheet\/assets\/latest\/spb.en.js','dynamic_checkout_cart_url':'https:\/\/thesatanictemple.com\/cdn\/shopifycloud\/payment-sheet\/assets\/latest\/dynamic-checkout-cart.en.js','locale':'en','optimusEnabled':true,'optimusHidden':false,'betterDynamicCheckoutRecommendationVariant':'control','shopPromisePDPV3Enabled':true}</script>
    <script>var Shopify = Shopify || {};
        Shopify.shop = 'shop-satan.myshopify.com';
        Shopify.locale = 'en';
        Shopify.currency = { 'active': 'USD', 'rate': '1.0' };
        Shopify.country = 'US';
        Shopify.theme = { 'name': 'LIVE TST WEBSITE - 21.12.23', 'id': 123771060358, 'theme_store_id': 601, 'role': 'main' };
        Shopify.theme.handle = 'null';
        Shopify.theme.style = { 'id': null, 'handle': null };
        Shopify.cdnHost = 'thesatanictemple.com/cdn';
        Shopify.routes = Shopify.routes || {};
        Shopify.routes.root = '/';</script>
    <script type='module'>!function (o) { (o.Shopify = o.Shopify || {}).modules = !0 }(window);</script>
    <script>!function (o) { function n() { var o = []; function n() { o.push(Array.prototype.slice.apply(arguments)) } return n.q = o, n } var t = o.Shopify = o.Shopify || {}; t.loadFeatures = n(), t.autoloadFeatures = n() }(window);</script>
    <script>window.ShopifyPay = window.ShopifyPay || {};
        window.ShopifyPay.apiHost = 'shop.app\/pay';</script>
    <script>
        window.Shopify = window.Shopify || {};
        if (!window.Shopify.featureAssets) window.Shopify.featureAssets = {};
        window.Shopify.featureAssets['shop-js'] = { 'pay-button': ['modules/client.pay-button_31f5e312.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js'], 'init-shop-email-lookup-coordinator': ['modules/client.init-shop-email-lookup-coordinator_a0ca75b9.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js'], 'init-customer-accounts-sign-up': ['modules/client.init-customer-accounts-sign-up_f4252f2a.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js'], 'init-customer-accounts': ['modules/client.init-customer-accounts_95dbc99d.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js'], 'init-shop-for-new-customer-accounts': ['modules/client.init-shop-for-new-customer-accounts_cdc1e014.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js'], 'shop-pay-payment-request': ['modules/client.shop-pay-payment-request_e110d2aa.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js', 'modules/chunk.shop-pay_3a058eba.esm.js'], 'discount-app': ['modules/client.discount-app_45ffafcc.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js'], 'login-button': ['modules/client.login-button_16b33106.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js'], 'payment-terms': ['modules/client.payment-terms_a55f0554.en.esm.js', 'modules/chunk.common_aa18f3d8.esm.js'] };
    </script>
    <script>(function () {
            function asyncLoad() {
                var urls = ['\/\/productreviews.shopifycdn.com\/embed\/loader.js?shop=shop-satan.myshopify.com', 'https:\/\/cdn.shopify.com\/shopifycloud\/privacy-banner\/storefront-banner.js?shop=shop-satan.myshopify.com', 'https:\/\/upsell-app.logbase.io\/lb-upsell.js?shop=shop-satan.myshopify.com', 'https:\/\/chimpstatic.com\/mcjs-connected\/js\/users\/43c46880f30ca2d5b901adf24\/19285f5861938cb03c40555be.js?shop=shop-satan.myshopify.com', '\/\/cdn.shopify.com\/proxy\/c60844388e88000e21e6f9a7a48f2948057451f6077b4caad6311df451e7afb0\/static.cdn.printful.com\/static\/js\/external\/shopify-product-customizer.js?v=0.28\u0026shop=shop-satan.myshopify.com\u0026sp-cache-control=cHVibGljLCBtYXgtYWdlPTkwMA', 'https:\/\/static.rechargecdn.com\/assets\/js\/widget.min.js?shop=shop-satan.myshopify.com'];
                for (var i = 0; i < urls.length; i++) {
                    var s = document.createElement('script');
                    s.type = 'text/javascript';
                    s.async = true;
                    s.src = urls[i];
                    var x = document.getElementsByTagName('script')[0];
                    x.parentNode.insertBefore(s, x);
                }
            };
            if (window.attachEvent) {
                window.attachEvent('onload', asyncLoad);
            } else {
                window.addEventListener('load', asyncLoad, false);
            }
        })();</script>
    <script
        id='__st'>var __st = { 'a': 4280465, 'offset': -18000, 'reqid': '2b35b818-0dd9-489a-b9b2-a56a2baecd1e', 'pageurl': 'thesatanictemple.com\/pages\/contact', 's': 'pages-240382034', 'u': 'd7c7d01a4c3b', 'p': 'page', 'rtyp': 'page', 'rid': 240382034 };</script>
    <script>window.ShopifyPaypalV4VisibilityTracking = true;</script>
    <script>!function (o) { o.addEventListener('DOMContentLoaded', function () { window.Shopify = window.Shopify || {}, window.Shopify.recaptchaV3 = window.Shopify.recaptchaV3 || { siteKey: '6LcCR2cUAAAAANS1Gpq_mDIJ2pQuJphsSQaUEuc9' }; var t = ['form[action*='/contact'] input[name='form_type'][value='contact']', 'form[action*='/comments'] input[name='form_type'][value='new_comment']', 'form[action*='/account'] input[name='form_type'][value='customer_login']', 'form[action*='/account'] input[name='form_type'][value='recover_customer_password']', 'form[action*='/account'] input[name='form_type'][value='create_customer']', 'form[action*='/contact'] input[name='form_type'][value='customer']'].join(','); function n(e) { e = e.target; null == e || null != (e = function e(t, n) { if (null == t.parentElement) return null; if ('FORM' != t.parentElement.tagName) return e(t.parentElement, n); for (var o = t.parentElement.action, r = 0; r < n.length; r++)if (-1 !== o.indexOf(n[r])) return t.parentElement; return null }(e, ['/contact', '/comments', '/account'])) && null != e.querySelector(t) && ((e = o.createElement('script')).setAttribute('src', 'https://cdn.shopify.com/shopifycloud/storefront-recaptcha-v3/v0.6/index.js'), o.body.appendChild(e), o.removeEventListener('focus', n, !0), o.removeEventListener('change', n, !0), o.removeEventListener('click', n, !0)) } o.addEventListener('click', n, !0), o.addEventListener('change', n, !0), o.addEventListener('focus', n, !0) }) }(document);</script>
    <script>document.addEventListener('DOMContentLoaded', function () {
            const adminBarInjector = new Shopify.AdminBarInjector({
                targetNode: document.body,
                iframeSrc: 'https://shop-satan.myshopify.com/admin/bar?action_name=pages&handle=contact&path=%2Fpages%2Fcontact&storefront_country=US&storefront_locale=en',
                permanentDomain: 'shop-satan.myshopify.com',
            });

            adminBarInjector.init();
        });</script>
    <script integrity='sha256-h4dvokWvGcvRSqiG7VnGqoonxF0k3NeoHPLSMjUGIz4='
        data-source-attribution='shopify.loadfeatures' defer='defer'
        src='https://thesatanictemple.com/cdn/shopifycloud/shopify/assets/storefront/load_feature-87876fa245af19cbd14aa886ed59c6aa8a27c45d24dcd7a81cf2d2323506233e.js'
        crossorigin='anonymous'></script>
    <script crossorigin='anonymous' defer='defer'
        src='https://thesatanictemple.com/cdn/shopifycloud/shopify/assets/shopify_pay/storefront-a2d444786d996da5634fbbaeeffe6104ee672440dfa6cdcaebfb27dceaaf9c0f.js?v=20220906'></script>
    <script integrity='sha256-HAs5a9TQVLlKuuHrahvWuke+s1UlxXohfHeoYv8G2D8='
        data-source-attribution='shopify.dynamic-checkout' defer='defer'
        src='https://thesatanictemple.com/cdn/shopifycloud/shopify/assets/storefront/features-1c0b396bd4d054b94abae1eb6a1bd6ba47beb35525c57a217c77a862ff06d83f.js'
        crossorigin='anonymous'></script>
    <script integrity='sha256-hovSIckfTy8h/WLdxqPuYaDPq406ImzRTBZYjGAxaII=' defer='defer'
        src='https://thesatanictemple.com/cdn/shopifycloud/shopify/assets/storefront/bars/admin_bar_injector-868bd221c91f4f2f21fd62ddc6a3ee61a0cfab8d3a226cd14c16588c60316882.js'
        crossorigin='anonymous'></script>


    <style id='shopify-dynamic-checkout-cart'>
        @media screen and (min-width: 750px) {
            #dynamic-checkout-cart {
                min-height: 50px;
            }
        }

        @media screen and (max-width: 750px) {
            #dynamic-checkout-cart {
                min-height: 240px;
            }
        }
    </style>
    <script>window.performance && window.performance.mark && window.performance.mark('shopify.content_for_header.end');</script>


    <script>
        document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/, 'js');
        if (window.Shopify && window.Shopify.designMode) document.documentElement.className += ' in-theme-editor';
    </script>
    <!-- BEGIN app block: shopify://apps/powerful-form-builder/blocks/app-embed/e4bcb1eb-35b2-42e6-bc37-bfe0e1542c9d -->

    <script type='text/javascript' hs-ignore=''>
        var Globo = Globo || {};
        var globoFormbuilderRecaptchaInit = function () { };
        window.Globo.FormBuilder = window.Globo.FormBuilder || {};
        window.Globo.FormBuilder.shop = { 'configuration': { 'money_format': '$ {{amount}}' }, 'pricing': { 'features': { 'bulkOrderForm': true, 'cartForm': true, 'fileUpload': 30, 'removeCopyright': true } }, 'settings': { 'copyright': 'Powered by G: <a href=\'https://apps.shopify.com/form-builder-contact-form\' target=\'_blank\'>Form Builder</a>', 'hideWaterMark': false, 'reCaptcha': { 'recaptchaType': 'v2', 'siteKey': false, 'languageCode': 'en' }, 'scrollTop': false, 'additionalColumns': [] }, 'encryption_form_id': 0, 'url': 'https://form.globosoftware.net/' };
        window.Globo.FormBuilder.forms = [];



        window.Globo.FormBuilder.forms[24388] = { '24388': { 'header': { 'active': false, 'title': 'Join Us Form', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'text', 'type': 'text', 'label': 'First Name', 'placeholder': 'First Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'text-2', 'type': 'text', 'label': 'Last Name', 'placeholder': 'Last Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'select', 'type': 'select', 'label': 'Country', 'placeholder': 'Country', 'options': 'Afghanistan\nAland Islands\nAlbania\nAlgeria\nAndorra\nAngola\nAnguilla\nAntigua And Barbuda\nArgentina\nArmenia\nAruba\nAustralia\nAustria\nAzerbaijan\nBahamas\nBahrain\nBangladesh\nBarbados\nBelarus\nBelgium\nBelize\nBenin\nBermuda\nBhutan\nBolivia\nBosnia And Herzegovina\nBotswana\nBouvet Island\nBrazil\nBritish Indian Ocean Territory\nVirgin Islands, British\nBrunei\nBulgaria\nBurkina Faso\nBurundi\nCambodia\nRepublic of Cameroon\nCanada\nCape Verde\nCaribbean Netherlands\nCayman Islands\nCentral African Republic\nChad\nChile\nChina\nChristmas Island\nCocos (Keeling) Islands\nColombia\nComoros\nCongo\nCongo, The Democratic Republic Of The\nCook Islands\nCosta Rica\nCroatia\nCuba\nCuraçao\nCyprus\nCzech Republic\nCôte d'Ivoire\nDenmark\nDjibouti\nDominica\nDominican Republic\nEcuador\nEgypt\nEl Salvador\nEquatorial Guinea\nEritrea\nEstonia\nEswatini\nEthiopia\nFalkland Islands (Malvinas)\nFaroe Islands\nFiji\nFinland\nFrance\nFrench Guiana\nFrench Polynesia\nFrench Southern Territories\nGabon\nGambia\nGeorgia\nGermany\nGhana\nGibraltar\nGreece\nGreenland\nGrenada\nGuadeloupe\nGuatemala\nGuernsey\nGuinea\nGuinea Bissau\nGuyana\nHaiti\nHeard Island And Mcdonald Islands\nHonduras\nHong Kong\nHungary\nIceland\nIndia\nIndonesia\nIran, Islamic Republic Of\nIraq\nIreland\nIsle Of Man\nIsrael\nItaly\nJamaica\nJapan\nJersey\nJordan\nKazakhstan\nKenya\nKiribati\nKosovo\nKuwait\nKyrgyzstan\nLao People's Democratic Republic\nLatvia\nLebanon\nLesotho\nLiberia\nLibyan Arab Jamahiriya\nLiechtenstein\nLithuania\nLuxembourg\nMacao\nMadagascar\nMalawi\nMalaysia\nMaldives\nMali\nMalta\nMartinique\nMauritania\nMauritius\nMayotte\nMexico\nMoldova, Republic of\nMonaco\nMongolia\nMontenegro\nMontserrat\nMorocco\nMozambique\nMyanmar\nNamibia\nNauru\nNepal\nNetherlands\nNetherlands Antilles\nNew Caledonia\nNew Zealand\nNicaragua\nNiger\nNigeria\nNiue\nNorfolk Island\nKorea, Democratic People's Republic Of\nNorth Macedonia\nNorway\nOman\nPakistan\nPalestinian Territory, Occupied\nPanama\nPapua New Guinea\nParaguay\nPeru\nPhilippines\nPitcairn\nPoland\nPortugal\nQatar\nReunion\nRomania\nRussia\nRwanda\nSamoa\nSan Marino\nSao Tome And Principe\nSaudi Arabia\nSenegal\nSerbia\nSeychelles\nSierra Leone\nSingapore\nSint Maarten\nSlovakia\nSlovenia\nSolomon Islands\nSomalia\nSouth Africa\nSouth Georgia And The South Sandwich Islands\nSouth Korea\nSouth Sudan\nSpain\nSri Lanka\nSaint Barthélemy\nSaint Helena\nSaint Kitts And Nevis\nSaint Lucia\nSaint Martin\nSaint Pierre And Miquelon\nSt. Vincent\nSudan\nSuriname\nSvalbard And Jan Mayen\nSweden\nSwitzerland\nSyria\nTaiwan\nTajikistan\nTanzania, United Republic Of\nThailand\nTimor Leste\nTogo\nTokelau\nTonga\nTrinidad and Tobago\nTunisia\nTurkey\nTurkmenistan\nTurks and Caicos Islands\nTuvalu\nUnited States Minor Outlying Islands\nUganda\nUkraine\nUnited Arab Emirates\nUnited Kingdom\nUnited States\nUruguay\nUzbekistan\nVanuatu\nHoly See (Vatican City State)\nVenezuela\nVietnam\nWallis And Futuna\nWestern Sahara\nYemen\nZambia\nZimbabwe', 'defaultOption': 'United States', 'description': '*If you select UK, please enter your country (ENG\/SC\/WLS\/NIR) in the state field', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'text-6', 'type': 'text', 'label': 'State\/Province\/Region', 'placeholder': 'State\/Province\/Region', 'description': '*International members need to fill their State\/Province\/Region as well.', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'phone', 'type': 'phone', 'label': 'Phone', 'placeholder': 'Phone number', 'description': '', 'validatePhone': false, 'onlyShowFlag': false, 'defaultCountryCode': 'us', 'limitCharacters': true, 'characters': '12', 'hideLabel': false, 'keepPositionLabel': false, 'required': false, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'select': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Join', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': false, 'submitAlignment': 'center' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:sales@thesatanictemple.com\'\u003esales@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '800', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'The password and confirmation password do not match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'redirectToPage', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': 'https:\/\/thesatanictemple.com\/pages\/thankyou', 'enableGa': true, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Join us form', 'enableFpx': true, 'fpxTrackerName': 'Join us form' }, 'integration': { 'shopify': { 'createAccount': true, 'ifExist': 'continueAndUpdate', 'sendEmailInvite': false, 'acceptsMarketing': true, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': { 'email': 'email', 'text': 'first_name', 'text-2': 'last_name', 'select': 'addresses.country', 'text-6': 'addresses.province' } }, 'mailChimp': { 'loading': 'Looks like your Mailchimp API key that you provide is not right, Please go to \u003ca href='\/admin\/settings' target='_blank'\u003eSettings\u003c\/a\u003e to correct it', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': true, 'list': 'SrBUkL', 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyoemail': { 'val': 'email', 'option': 'dynamic' }, 'first_name': { 'val': '', 'option': '' }, 'last_name': { 'val': '', 'option': '' }, 'title': { 'val': '', 'option': '' }, 'organization': { 'val': '', 'option': '' }, 'phone_number': { 'val': '', 'option': '' }, 'address1': { 'val': '', 'option': '' }, 'address2': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'region': { 'val': '', 'option': '' }, 'zip': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'latitude': { 'val': '', 'option': '' }, 'longitude': { 'val': '', 'option': '' }, 'customPropertiestext': { 'val': 'text', 'option': 'dynamic', 'custom': 'First Name' }, 'customPropertiestext-2': { 'val': 'text-2', 'option': 'dynamic', 'custom': 'Last Name' }, 'customPropertiesselect': { 'val': 'select', 'option': 'dynamic', 'custom': 'Country' }, 'customPropertiestext-6': { 'val': 'text-6', 'option': 'dynamic', 'custom': 'State \/ Region' } } }, 'zapier': { 'enable': true, 'webhookUrl': 'https:\/\/hooks.zapier.com\/hooks\/catch\/13479142\/bcvywe7\/' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'firstName': { 'val': '', 'option': '' }, 'lastName': { 'val': '', 'option': '' }, 'status': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'postalCode': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'customProperties1': { 'val': '', 'option': '' }, 'customProperties2': { 'val': '', 'option': '' }, 'customProperties3': { 'val': '', 'option': '' }, 'customProperties4': { 'val': '', 'option': '' }, 'customProperties5': { 'val': '', 'option': '' } } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'name': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'company': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'street': { 'val': '', 'option': '' }, 'postal_code': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'fax': { 'val': '', 'option': '' }, 'comment': { 'val': '', 'option': '' }, 'ref': { 'val': '', 'option': '' }, 'url': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'dayOfCycle': { 'val': '', 'option': '' }, 'scoring': { 'val': '', 'option': '' } } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'activecampaign': { 'loading': '', 'enable': false, 'list': [], 'integrationElements': [] }, 'googleCalendar': { 'loading': '', 'enable': false, 'list': '', 'integrationElements': { 'starttime': '', 'endtime': '', 'summary': '', 'location': '', 'description': '', 'attendees': '' } }, 'googleSheet': { 'loading': '', 'enable': false, 'spreadsheetdestination': '', 'listFields': ['phone'], 'submissionIp': false } }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href=\'\/account\/login\' title=\'login\'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'popup': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-24388\'\u003e\n\u003cstyle\u003e\n.globo-form-id-24388 .globo-form-app{\n    max-width: 800px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-24388 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-24388 .globo-form-app .globo-description,\n.globo-form-id-24388 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-24388 .globo-form-app .globo-label,\n.globo-form-id-24388 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-24388 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-24388 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-24388 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-24388 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-24388 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-24388 .globo-form-app .footer{\n    text-align:center;\n}\n.globo-form-id-24388 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-24388 .globo-form-app .footer button.submit,\n.globo-form-id-24388 .globo-form-app .footer button.checkout,\n.globo-form-id-24388 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-24388 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-24388 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-24388 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-24388 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-24388 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-24388 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-24388 .globo-form-app .step.-completed .step__number,\n.globo-form-id-24388 .globo-form-app .line.-progress,\n.globo-form-id-24388 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-24388 .globo-form-app .checkmark__check,\n.globo-form-id-24388 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-24388 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-24388 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-24388 .flatpickr-day.selected, \n.globo-form-id-24388 .flatpickr-day.startRange, \n.globo-form-id-24388 .flatpickr-day.endRange, \n.globo-form-id-24388 .flatpickr-day.selected.inRange, \n.globo-form-id-24388 .flatpickr-day.startRange.inRange, \n.globo-form-id-24388 .flatpickr-day.endRange.inRange, \n.globo-form-id-24388 .flatpickr-day.selected:focus, \n.globo-form-id-24388 .flatpickr-day.startRange:focus, \n.globo-form-id-24388 .flatpickr-day.endRange:focus, \n.globo-form-id-24388 .flatpickr-day.selected:hover, \n.globo-form-id-24388 .flatpickr-day.startRange:hover, \n.globo-form-id-24388 .flatpickr-day.endRange:hover, \n.globo-form-id-24388 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-24388 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-24388 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-24388 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-24388 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-24388 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-24388 .globo-paragraph,\n.globo-form-id-24388 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/24388\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=24388\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=24388\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'24388-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'24388-email\' name=\'email\' placeholder=\'Email\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'24388-text\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'First Name\'\u003eFirst Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'24388-text\' name=\'text\' placeholder=\'First Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'24388-text-2\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Last Name\'\u003eLast Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'24388-text-2\' name=\'text-2\' placeholder=\'Last Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\'  data-default-value=\'United States\'\u003e\n    \u003clabel for=\'24388-select\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Country\'\u003eCountry\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cselect name=\'select\'  id=\'24388-select\' class=\'classic-input\' presence\u003e\n            \u003coption  value=\'\' disabled=\'disabled\'\u003eCountry\u003c\/option\u003e\n            \n            \u003coption value=\'Afghanistan\' \u003eAfghanistan\u003c\/option\u003e\n            \n            \u003coption value=\'Aland Islands\' \u003eAland Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Albania\' \u003eAlbania\u003c\/option\u003e\n            \n            \u003coption value=\'Algeria\' \u003eAlgeria\u003c\/option\u003e\n            \n            \u003coption value=\'Andorra\' \u003eAndorra\u003c\/option\u003e\n            \n            \u003coption value=\'Angola\' \u003eAngola\u003c\/option\u003e\n            \n            \u003coption value=\'Anguilla\' \u003eAnguilla\u003c\/option\u003e\n            \n            \u003coption value=\'Antigua And Barbuda\' \u003eAntigua And Barbuda\u003c\/option\u003e\n            \n            \u003coption value=\'Argentina\' \u003eArgentina\u003c\/option\u003e\n            \n            \u003coption value=\'Armenia\' \u003eArmenia\u003c\/option\u003e\n            \n            \u003coption value=\'Aruba\' \u003eAruba\u003c\/option\u003e\n            \n            \u003coption value=\'Australia\' \u003eAustralia\u003c\/option\u003e\n            \n            \u003coption value=\'Austria\' \u003eAustria\u003c\/option\u003e\n            \n            \u003coption value=\'Azerbaijan\' \u003eAzerbaijan\u003c\/option\u003e\n            \n            \u003coption value=\'Bahamas\' \u003eBahamas\u003c\/option\u003e\n            \n            \u003coption value=\'Bahrain\' \u003eBahrain\u003c\/option\u003e\n            \n            \u003coption value=\'Bangladesh\' \u003eBangladesh\u003c\/option\u003e\n            \n            \u003coption value=\'Barbados\' \u003eBarbados\u003c\/option\u003e\n            \n            \u003coption value=\'Belarus\' \u003eBelarus\u003c\/option\u003e\n            \n            \u003coption value=\'Belgium\' \u003eBelgium\u003c\/option\u003e\n            \n            \u003coption value=\'Belize\' \u003eBelize\u003c\/option\u003e\n            \n            \u003coption value=\'Benin\' \u003eBenin\u003c\/option\u003e\n            \n            \u003coption value=\'Bermuda\' \u003eBermuda\u003c\/option\u003e\n            \n            \u003coption value=\'Bhutan\' \u003eBhutan\u003c\/option\u003e\n            \n            \u003coption value=\'Bolivia\' \u003eBolivia\u003c\/option\u003e\n            \n            \u003coption value=\'Bosnia And Herzegovina\' \u003eBosnia And Herzegovina\u003c\/option\u003e\n            \n            \u003coption value=\'Botswana\' \u003eBotswana\u003c\/option\u003e\n            \n            \u003coption value=\'Bouvet Island\' \u003eBouvet Island\u003c\/option\u003e\n            \n            \u003coption value=\'Brazil\' \u003eBrazil\u003c\/option\u003e\n            \n            \u003coption value=\'British Indian Ocean Territory\' \u003eBritish Indian Ocean Territory\u003c\/option\u003e\n            \n            \u003coption value=\'Virgin Islands, British\' \u003eVirgin Islands, British\u003c\/option\u003e\n            \n            \u003coption value=\'Brunei\' \u003eBrunei\u003c\/option\u003e\n            \n            \u003coption value=\'Bulgaria\' \u003eBulgaria\u003c\/option\u003e\n            \n            \u003coption value=\'Burkina Faso\' \u003eBurkina Faso\u003c\/option\u003e\n            \n            \u003coption value=\'Burundi\' \u003eBurundi\u003c\/option\u003e\n            \n            \u003coption value=\'Cambodia\' \u003eCambodia\u003c\/option\u003e\n            \n            \u003coption value=\'Republic of Cameroon\' \u003eRepublic of Cameroon\u003c\/option\u003e\n            \n            \u003coption value=\'Canada\' \u003eCanada\u003c\/option\u003e\n            \n            \u003coption value=\'Cape Verde\' \u003eCape Verde\u003c\/option\u003e\n            \n            \u003coption value=\'Caribbean Netherlands\' \u003eCaribbean Netherlands\u003c\/option\u003e\n            \n            \u003coption value=\'Cayman Islands\' \u003eCayman Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Central African Republic\' \u003eCentral African Republic\u003c\/option\u003e\n            \n            \u003coption value=\'Chad\' \u003eChad\u003c\/option\u003e\n            \n            \u003coption value=\'Chile\' \u003eChile\u003c\/option\u003e\n            \n            \u003coption value=\'China\' \u003eChina\u003c\/option\u003e\n            \n            \u003coption value=\'Christmas Island\' \u003eChristmas Island\u003c\/option\u003e\n            \n            \u003coption value=\'Cocos (Keeling) Islands\' \u003eCocos (Keeling) Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Colombia\' \u003eColombia\u003c\/option\u003e\n            \n            \u003coption value=\'Comoros\' \u003eComoros\u003c\/option\u003e\n            \n            \u003coption value=\'Congo\' \u003eCongo\u003c\/option\u003e\n            \n            \u003coption value=\'Congo, The Democratic Republic Of The\' \u003eCongo, The Democratic Republic Of The\u003c\/option\u003e\n            \n            \u003coption value=\'Cook Islands\' \u003eCook Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Costa Rica\' \u003eCosta Rica\u003c\/option\u003e\n            \n            \u003coption value=\'Croatia\' \u003eCroatia\u003c\/option\u003e\n            \n            \u003coption value=\'Cuba\' \u003eCuba\u003c\/option\u003e\n            \n            \u003coption value=\'Curaçao\' \u003eCuraçao\u003c\/option\u003e\n            \n            \u003coption value=\'Cyprus\' \u003eCyprus\u003c\/option\u003e\n            \n            \u003coption value=\'Czech Republic\' \u003eCzech Republic\u003c\/option\u003e\n            \n            \u003coption value=\'Côte d'Ivoire\' \u003eCôte d'Ivoire\u003c\/option\u003e\n            \n            \u003coption value=\'Denmark\' \u003eDenmark\u003c\/option\u003e\n            \n            \u003coption value=\'Djibouti\' \u003eDjibouti\u003c\/option\u003e\n            \n            \u003coption value=\'Dominica\' \u003eDominica\u003c\/option\u003e\n            \n            \u003coption value=\'Dominican Republic\' \u003eDominican Republic\u003c\/option\u003e\n            \n            \u003coption value=\'Ecuador\' \u003eEcuador\u003c\/option\u003e\n            \n            \u003coption value=\'Egypt\' \u003eEgypt\u003c\/option\u003e\n            \n            \u003coption value=\'El Salvador\' \u003eEl Salvador\u003c\/option\u003e\n            \n            \u003coption value=\'Equatorial Guinea\' \u003eEquatorial Guinea\u003c\/option\u003e\n            \n            \u003coption value=\'Eritrea\' \u003eEritrea\u003c\/option\u003e\n            \n            \u003coption value=\'Estonia\' \u003eEstonia\u003c\/option\u003e\n            \n            \u003coption value=\'Eswatini\' \u003eEswatini\u003c\/option\u003e\n            \n            \u003coption value=\'Ethiopia\' \u003eEthiopia\u003c\/option\u003e\n            \n            \u003coption value=\'Falkland Islands (Malvinas)\' \u003eFalkland Islands (Malvinas)\u003c\/option\u003e\n            \n            \u003coption value=\'Faroe Islands\' \u003eFaroe Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Fiji\' \u003eFiji\u003c\/option\u003e\n            \n            \u003coption value=\'Finland\' \u003eFinland\u003c\/option\u003e\n            \n            \u003coption value=\'France\' \u003eFrance\u003c\/option\u003e\n            \n            \u003coption value=\'French Guiana\' \u003eFrench Guiana\u003c\/option\u003e\n            \n            \u003coption value=\'French Polynesia\' \u003eFrench Polynesia\u003c\/option\u003e\n            \n            \u003coption value=\'French Southern Territories\' \u003eFrench Southern Territories\u003c\/option\u003e\n            \n            \u003coption value=\'Gabon\' \u003eGabon\u003c\/option\u003e\n            \n            \u003coption value=\'Gambia\' \u003eGambia\u003c\/option\u003e\n            \n            \u003coption value=\'Georgia\' \u003eGeorgia\u003c\/option\u003e\n            \n            \u003coption value=\'Germany\' \u003eGermany\u003c\/option\u003e\n            \n            \u003coption value=\'Ghana\' \u003eGhana\u003c\/option\u003e\n            \n            \u003coption value=\'Gibraltar\' \u003eGibraltar\u003c\/option\u003e\n            \n            \u003coption value=\'Greece\' \u003eGreece\u003c\/option\u003e\n            \n            \u003coption value=\'Greenland\' \u003eGreenland\u003c\/option\u003e\n            \n            \u003coption value=\'Grenada\' \u003eGrenada\u003c\/option\u003e\n            \n            \u003coption value=\'Guadeloupe\' \u003eGuadeloupe\u003c\/option\u003e\n            \n            \u003coption value=\'Guatemala\' \u003eGuatemala\u003c\/option\u003e\n            \n            \u003coption value=\'Guernsey\' \u003eGuernsey\u003c\/option\u003e\n            \n            \u003coption value=\'Guinea\' \u003eGuinea\u003c\/option\u003e\n            \n            \u003coption value=\'Guinea Bissau\' \u003eGuinea Bissau\u003c\/option\u003e\n            \n            \u003coption value=\'Guyana\' \u003eGuyana\u003c\/option\u003e\n            \n            \u003coption value=\'Haiti\' \u003eHaiti\u003c\/option\u003e\n            \n            \u003coption value=\'Heard Island And Mcdonald Islands\' \u003eHeard Island And Mcdonald Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Honduras\' \u003eHonduras\u003c\/option\u003e\n            \n            \u003coption value=\'Hong Kong\' \u003eHong Kong\u003c\/option\u003e\n            \n            \u003coption value=\'Hungary\' \u003eHungary\u003c\/option\u003e\n            \n            \u003coption value=\'Iceland\' \u003eIceland\u003c\/option\u003e\n            \n            \u003coption value=\'India\' \u003eIndia\u003c\/option\u003e\n            \n            \u003coption value=\'Indonesia\' \u003eIndonesia\u003c\/option\u003e\n            \n            \u003coption value=\'Iran, Islamic Republic Of\' \u003eIran, Islamic Republic Of\u003c\/option\u003e\n            \n            \u003coption value=\'Iraq\' \u003eIraq\u003c\/option\u003e\n            \n            \u003coption value=\'Ireland\' \u003eIreland\u003c\/option\u003e\n            \n            \u003coption value=\'Isle Of Man\' \u003eIsle Of Man\u003c\/option\u003e\n            \n            \u003coption value=\'Israel\' \u003eIsrael\u003c\/option\u003e\n            \n            \u003coption value=\'Italy\' \u003eItaly\u003c\/option\u003e\n            \n            \u003coption value=\'Jamaica\' \u003eJamaica\u003c\/option\u003e\n            \n            \u003coption value=\'Japan\' \u003eJapan\u003c\/option\u003e\n            \n            \u003coption value=\'Jersey\' \u003eJersey\u003c\/option\u003e\n            \n            \u003coption value=\'Jordan\' \u003eJordan\u003c\/option\u003e\n            \n            \u003coption value=\'Kazakhstan\' \u003eKazakhstan\u003c\/option\u003e\n            \n            \u003coption value=\'Kenya\' \u003eKenya\u003c\/option\u003e\n            \n            \u003coption value=\'Kiribati\' \u003eKiribati\u003c\/option\u003e\n            \n            \u003coption value=\'Kosovo\' \u003eKosovo\u003c\/option\u003e\n            \n            \u003coption value=\'Kuwait\' \u003eKuwait\u003c\/option\u003e\n            \n            \u003coption value=\'Kyrgyzstan\' \u003eKyrgyzstan\u003c\/option\u003e\n            \n            \u003coption value=\'Lao People's Democratic Republic\' \u003eLao People's Democratic Republic\u003c\/option\u003e\n            \n            \u003coption value=\'Latvia\' \u003eLatvia\u003c\/option\u003e\n            \n            \u003coption value=\'Lebanon\' \u003eLebanon\u003c\/option\u003e\n            \n            \u003coption value=\'Lesotho\' \u003eLesotho\u003c\/option\u003e\n            \n            \u003coption value=\'Liberia\' \u003eLiberia\u003c\/option\u003e\n            \n            \u003coption value=\'Libyan Arab Jamahiriya\' \u003eLibyan Arab Jamahiriya\u003c\/option\u003e\n            \n            \u003coption value=\'Liechtenstein\' \u003eLiechtenstein\u003c\/option\u003e\n            \n            \u003coption value=\'Lithuania\' \u003eLithuania\u003c\/option\u003e\n            \n            \u003coption value=\'Luxembourg\' \u003eLuxembourg\u003c\/option\u003e\n            \n            \u003coption value=\'Macao\' \u003eMacao\u003c\/option\u003e\n            \n            \u003coption value=\'Madagascar\' \u003eMadagascar\u003c\/option\u003e\n            \n            \u003coption value=\'Malawi\' \u003eMalawi\u003c\/option\u003e\n            \n            \u003coption value=\'Malaysia\' \u003eMalaysia\u003c\/option\u003e\n            \n            \u003coption value=\'Maldives\' \u003eMaldives\u003c\/option\u003e\n            \n            \u003coption value=\'Mali\' \u003eMali\u003c\/option\u003e\n            \n            \u003coption value=\'Malta\' \u003eMalta\u003c\/option\u003e\n            \n            \u003coption value=\'Martinique\' \u003eMartinique\u003c\/option\u003e\n            \n            \u003coption value=\'Mauritania\' \u003eMauritania\u003c\/option\u003e\n            \n            \u003coption value=\'Mauritius\' \u003eMauritius\u003c\/option\u003e\n            \n            \u003coption value=\'Mayotte\' \u003eMayotte\u003c\/option\u003e\n            \n            \u003coption value=\'Mexico\' \u003eMexico\u003c\/option\u003e\n            \n            \u003coption value=\'Moldova, Republic of\' \u003eMoldova, Republic of\u003c\/option\u003e\n            \n            \u003coption value=\'Monaco\' \u003eMonaco\u003c\/option\u003e\n            \n            \u003coption value=\'Mongolia\' \u003eMongolia\u003c\/option\u003e\n            \n            \u003coption value=\'Montenegro\' \u003eMontenegro\u003c\/option\u003e\n            \n            \u003coption value=\'Montserrat\' \u003eMontserrat\u003c\/option\u003e\n            \n            \u003coption value=\'Morocco\' \u003eMorocco\u003c\/option\u003e\n            \n            \u003coption value=\'Mozambique\' \u003eMozambique\u003c\/option\u003e\n            \n            \u003coption value=\'Myanmar\' \u003eMyanmar\u003c\/option\u003e\n            \n            \u003coption value=\'Namibia\' \u003eNamibia\u003c\/option\u003e\n            \n            \u003coption value=\'Nauru\' \u003eNauru\u003c\/option\u003e\n            \n            \u003coption value=\'Nepal\' \u003eNepal\u003c\/option\u003e\n            \n            \u003coption value=\'Netherlands\' \u003eNetherlands\u003c\/option\u003e\n            \n            \u003coption value=\'Netherlands Antilles\' \u003eNetherlands Antilles\u003c\/option\u003e\n            \n            \u003coption value=\'New Caledonia\' \u003eNew Caledonia\u003c\/option\u003e\n            \n            \u003coption value=\'New Zealand\' \u003eNew Zealand\u003c\/option\u003e\n            \n            \u003coption value=\'Nicaragua\' \u003eNicaragua\u003c\/option\u003e\n            \n            \u003coption value=\'Niger\' \u003eNiger\u003c\/option\u003e\n            \n            \u003coption value=\'Nigeria\' \u003eNigeria\u003c\/option\u003e\n            \n            \u003coption value=\'Niue\' \u003eNiue\u003c\/option\u003e\n            \n            \u003coption value=\'Norfolk Island\' \u003eNorfolk Island\u003c\/option\u003e\n            \n            \u003coption value=\'Korea, Democratic People's Republic Of\' \u003eKorea, Democratic People's Republic Of\u003c\/option\u003e\n            \n            \u003coption value=\'North Macedonia\' \u003eNorth Macedonia\u003c\/option\u003e\n            \n            \u003coption value=\'Norway\' \u003eNorway\u003c\/option\u003e\n            \n            \u003coption value=\'Oman\' \u003eOman\u003c\/option\u003e\n            \n            \u003coption value=\'Pakistan\' \u003ePakistan\u003c\/option\u003e\n            \n            \u003coption value=\'Palestinian Territory, Occupied\' \u003ePalestinian Territory, Occupied\u003c\/option\u003e\n            \n            \u003coption value=\'Panama\' \u003ePanama\u003c\/option\u003e\n            \n            \u003coption value=\'Papua New Guinea\' \u003ePapua New Guinea\u003c\/option\u003e\n            \n            \u003coption value=\'Paraguay\' \u003eParaguay\u003c\/option\u003e\n            \n            \u003coption value=\'Peru\' \u003ePeru\u003c\/option\u003e\n            \n            \u003coption value=\'Philippines\' \u003ePhilippines\u003c\/option\u003e\n            \n            \u003coption value=\'Pitcairn\' \u003ePitcairn\u003c\/option\u003e\n            \n            \u003coption value=\'Poland\' \u003ePoland\u003c\/option\u003e\n            \n            \u003coption value=\'Portugal\' \u003ePortugal\u003c\/option\u003e\n            \n            \u003coption value=\'Qatar\' \u003eQatar\u003c\/option\u003e\n            \n            \u003coption value=\'Reunion\' \u003eReunion\u003c\/option\u003e\n            \n            \u003coption value=\'Romania\' \u003eRomania\u003c\/option\u003e\n            \n            \u003coption value=\'Russia\' \u003eRussia\u003c\/option\u003e\n            \n            \u003coption value=\'Rwanda\' \u003eRwanda\u003c\/option\u003e\n            \n            \u003coption value=\'Samoa\' \u003eSamoa\u003c\/option\u003e\n            \n            \u003coption value=\'San Marino\' \u003eSan Marino\u003c\/option\u003e\n            \n            \u003coption value=\'Sao Tome And Principe\' \u003eSao Tome And Principe\u003c\/option\u003e\n            \n            \u003coption value=\'Saudi Arabia\' \u003eSaudi Arabia\u003c\/option\u003e\n            \n            \u003coption value=\'Senegal\' \u003eSenegal\u003c\/option\u003e\n            \n            \u003coption value=\'Serbia\' \u003eSerbia\u003c\/option\u003e\n            \n            \u003coption value=\'Seychelles\' \u003eSeychelles\u003c\/option\u003e\n            \n            \u003coption value=\'Sierra Leone\' \u003eSierra Leone\u003c\/option\u003e\n            \n            \u003coption value=\'Singapore\' \u003eSingapore\u003c\/option\u003e\n            \n            \u003coption value=\'Sint Maarten\' \u003eSint Maarten\u003c\/option\u003e\n            \n            \u003coption value=\'Slovakia\' \u003eSlovakia\u003c\/option\u003e\n            \n            \u003coption value=\'Slovenia\' \u003eSlovenia\u003c\/option\u003e\n            \n            \u003coption value=\'Solomon Islands\' \u003eSolomon Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Somalia\' \u003eSomalia\u003c\/option\u003e\n            \n            \u003coption value=\'South Africa\' \u003eSouth Africa\u003c\/option\u003e\n            \n            \u003coption value=\'South Georgia And The South Sandwich Islands\' \u003eSouth Georgia And The South Sandwich Islands\u003c\/option\u003e\n            \n            \u003coption value=\'South Korea\' \u003eSouth Korea\u003c\/option\u003e\n            \n            \u003coption value=\'South Sudan\' \u003eSouth Sudan\u003c\/option\u003e\n            \n            \u003coption value=\'Spain\' \u003eSpain\u003c\/option\u003e\n            \n            \u003coption value=\'Sri Lanka\' \u003eSri Lanka\u003c\/option\u003e\n            \n            \u003coption value=\'Saint Barthélemy\' \u003eSaint Barthélemy\u003c\/option\u003e\n            \n            \u003coption value=\'Saint Helena\' \u003eSaint Helena\u003c\/option\u003e\n            \n            \u003coption value=\'Saint Kitts And Nevis\' \u003eSaint Kitts And Nevis\u003c\/option\u003e\n            \n            \u003coption value=\'Saint Lucia\' \u003eSaint Lucia\u003c\/option\u003e\n            \n            \u003coption value=\'Saint Martin\' \u003eSaint Martin\u003c\/option\u003e\n            \n            \u003coption value=\'Saint Pierre And Miquelon\' \u003eSaint Pierre And Miquelon\u003c\/option\u003e\n            \n            \u003coption value=\'St. Vincent\' \u003eSt. Vincent\u003c\/option\u003e\n            \n            \u003coption value=\'Sudan\' \u003eSudan\u003c\/option\u003e\n            \n            \u003coption value=\'Suriname\' \u003eSuriname\u003c\/option\u003e\n            \n            \u003coption value=\'Svalbard And Jan Mayen\' \u003eSvalbard And Jan Mayen\u003c\/option\u003e\n            \n            \u003coption value=\'Sweden\' \u003eSweden\u003c\/option\u003e\n            \n            \u003coption value=\'Switzerland\' \u003eSwitzerland\u003c\/option\u003e\n            \n            \u003coption value=\'Syria\' \u003eSyria\u003c\/option\u003e\n            \n            \u003coption value=\'Taiwan\' \u003eTaiwan\u003c\/option\u003e\n            \n            \u003coption value=\'Tajikistan\' \u003eTajikistan\u003c\/option\u003e\n            \n            \u003coption value=\'Tanzania, United Republic Of\' \u003eTanzania, United Republic Of\u003c\/option\u003e\n            \n            \u003coption value=\'Thailand\' \u003eThailand\u003c\/option\u003e\n            \n            \u003coption value=\'Timor Leste\' \u003eTimor Leste\u003c\/option\u003e\n            \n            \u003coption value=\'Togo\' \u003eTogo\u003c\/option\u003e\n            \n            \u003coption value=\'Tokelau\' \u003eTokelau\u003c\/option\u003e\n            \n            \u003coption value=\'Tonga\' \u003eTonga\u003c\/option\u003e\n            \n            \u003coption value=\'Trinidad and Tobago\' \u003eTrinidad and Tobago\u003c\/option\u003e\n            \n            \u003coption value=\'Tunisia\' \u003eTunisia\u003c\/option\u003e\n            \n            \u003coption value=\'Turkey\' \u003eTurkey\u003c\/option\u003e\n            \n            \u003coption value=\'Turkmenistan\' \u003eTurkmenistan\u003c\/option\u003e\n            \n            \u003coption value=\'Turks and Caicos Islands\' \u003eTurks and Caicos Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Tuvalu\' \u003eTuvalu\u003c\/option\u003e\n            \n            \u003coption value=\'United States Minor Outlying Islands\' \u003eUnited States Minor Outlying Islands\u003c\/option\u003e\n            \n            \u003coption value=\'Uganda\' \u003eUganda\u003c\/option\u003e\n            \n            \u003coption value=\'Ukraine\' \u003eUkraine\u003c\/option\u003e\n            \n            \u003coption value=\'United Arab Emirates\' \u003eUnited Arab Emirates\u003c\/option\u003e\n            \n            \u003coption value=\'United Kingdom\' \u003eUnited Kingdom\u003c\/option\u003e\n            \n            \u003coption value=\'United States\' selected=\'selected\'\u003eUnited States\u003c\/option\u003e\n            \n            \u003coption value=\'Uruguay\' \u003eUruguay\u003c\/option\u003e\n            \n            \u003coption value=\'Uzbekistan\' \u003eUzbekistan\u003c\/option\u003e\n            \n            \u003coption value=\'Vanuatu\' \u003eVanuatu\u003c\/option\u003e\n            \n            \u003coption value=\'Holy See (Vatican City State)\' \u003eHoly See (Vatican City State)\u003c\/option\u003e\n            \n            \u003coption value=\'Venezuela\' \u003eVenezuela\u003c\/option\u003e\n            \n            \u003coption value=\'Vietnam\' \u003eVietnam\u003c\/option\u003e\n            \n            \u003coption value=\'Wallis And Futuna\' \u003eWallis And Futuna\u003c\/option\u003e\n            \n            \u003coption value=\'Western Sahara\' \u003eWestern Sahara\u003c\/option\u003e\n            \n            \u003coption value=\'Yemen\' \u003eYemen\u003c\/option\u003e\n            \n            \u003coption value=\'Zambia\' \u003eZambia\u003c\/option\u003e\n            \n            \u003coption value=\'Zimbabwe\' \u003eZimbabwe\u003c\/option\u003e\n            \n        \u003c\/select\u003e\n    \u003c\/div\u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003e*If you select UK, please enter your country (ENG\/SC\/WLS\/NIR) in the state field\u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'24388-text-6\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'State\/Province\/Region\'\u003eState\/Province\/Region\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'24388-text-6\' name=\'text-6\' placeholder=\'State\/Province\/Region\' presence  \u003e\n    \u003c\/div\u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003e*International members need to fill their State\/Province\/Region as well.\u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'24388-phone\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Phone\'\u003ePhone\u003c\/span\u003e\u003cspan\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'phone\' class=\'classic-input\' id=\'24388-phone\' name=\'phone\' placeholder=\'Phone number\'  maxlength=\'12\'   default-country-code=\'us\'\u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eJoin\u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[24388];



        window.Globo.FormBuilder.forms[47262] = { '47262': { 'header': { 'active': false, 'title': 'Contact us', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Name', 'placeholder': 'Name', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'text-2', 'type': 'text', 'label': 'Pseudonym', 'placeholder': 'Pseudonym (not required)', 'description': '(Feel free to construct a new first and last name to protect your identity if your works are posted online.) ', 'required': false, 'columnWidth': 100 }, { 'id': 'datetime', 'type': 'datetime', 'label': 'Date of Birth ', 'placeholder': 'Date of Birth ', 'description': '', 'required': true, 'format': 'date', 'otherLang': false, 'localization': 'es', 'date-format': 'd-m-Y', 'time-format': '12h', 'isLimitDate': false, 'limitDateType': 'disablingDates', 'limitDateSpecificEnabled': false, 'limitDateSpecificDates': '', 'limitDateRangeEnabled': false, 'limitDateRangeDates': '', 'limitDateDOWEnabled': false, 'limitDateDOWDates': ['saturday', 'sunday'], 'columnWidth': 100 }, { 'id': 'text-3', 'type': 'text', 'label': 'Address (House Number\/Apt.\/Ste. and Street)', 'placeholder': 'Address (House Number\/Apt.\/Ste. and Street)', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'text-4', 'type': 'text', 'label': 'City', 'placeholder': 'City', 'description': '', 'required': true, 'columnWidth': 33.33 }, { 'id': 'select', 'type': 'select', 'label': 'State', 'placeholder': 'State', 'options': 'AL\nAK\nAZ\nAR\nCA\nCO\nCT\nDE\nFL\nGA\nHI\nID\nIL\nIN\nIA\nKS\nKY\nLA\nME\nMD\nMA\nMI\nMN\nMS\nMO\nMT\nNE\nNV\nNH\nNJ\nNM\nNY\nNC\nND\nOH\nOK\nOR\nPA\nRI\nSC\nSD\nTN\nTX\nUT\nVT\nVA\nWA\nWV\nWI\nWY', 'description': '', 'required': true, 'columnWidth': 33.33 }, { 'id': 'number', 'type': 'number', 'label': 'ZIP', 'placeholder': 'ZIP', 'description': '', 'required': true, 'columnWidth': 33.33, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'email', 'type': 'email', 'label': 'Email Address ', 'placeholder': 'Email Address ', 'description': '', 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'email-2', 'type': 'email', 'label': 'Confirm Email Address ', 'placeholder': 'Confirm Email Address ', 'description': '', 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'phone', 'type': 'phone', 'label': 'Phone Number ', 'placeholder': 'Phone Number ', 'description': '', 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'select-2', 'type': 'select', 'label': 'Submission Category', 'placeholder': 'Submission Category', 'options': 'Elementary School (Written)\nElementary School (Audio-Visual)\nMiddle and High School (Written)\nMiddle and High School (Audio-Visual)\nHigher Ed (Written)\nHigher Ed (Audio-Visual)', 'description': '', 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'heading', 'type': 'heading', 'heading': 'Submission Attachments', 'caption': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false }, { 'id': 'paragraph', 'type': 'paragraph', 'text': '\u003cp\u003ePlease upload your submission documents or other files by submitting a DropBox or Google Drive link. When uploading files, please title any attachments in the following format, choosing the sectional category in the formatting that is most appropriate for your submission: First and Last Name: E, MH, Grad\/HE; Written\/AV.\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eEnsure that your submission link is on a \u003cstrong\u003ePUBLIC SHARE\u003c\/strong\u003e setting so that anyone with the link may access the document. TST will not request permission to access your submission’s attachments if it does not initially allow access through this public share setting.\u003c\/p\u003e', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false }, { 'id': 'text-5', 'type': 'text', 'label': 'Add Your Submission Link Here', 'placeholder': 'Add Your Submission Link Here', 'description': '', 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false }, { 'id': 'checkbox', 'type': 'checkbox', 'label': '', 'options': 'I accept the contractual agreement and legal disclaimers.\nI have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.\nMy submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.', 'description': '', 'required': false, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false }, { 'id': 'text-6', 'type': 'text', 'label': 'Sign', 'placeholder': 'Sign', 'description': 'Parent\/Guardian Signature if Minor', 'required': true, 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false, 'checkbox': false }, { 'id': 'datetime-2', 'type': 'datetime', 'label': 'Date', 'placeholder': 'Date', 'description': '', 'required': true, 'format': 'date', 'otherLang': false, 'localization': 'es', 'date-format': 'd-m-Y', 'time-format': '12h', 'isLimitDate': true, 'limitDateType': 'disablingDates', 'limitDateSpecificEnabled': false, 'limitDateSpecificDates': '', 'limitDateRangeEnabled': false, 'limitDateRangeDates': '', 'limitDateDOWEnabled': false, 'limitDateDOWDates': ['saturday', 'sunday'], 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false, 'checkbox': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit Application', 'submitFullWidth': true, 'submitAlignment': 'left' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': true, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eScholarship\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we got your information.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '1000', 'style': 'flat', 'mainColor': 'rgba(119,36,10,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': 'rgba(102,102,102,1)', 'optionColor': '#000', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false }, 'errorMessage': { 'required': 'Required', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid url', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit', 'fileNotAllowed': 'File not allowed', 'requiredCaptcha': 'Required captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003cp\u003eTHANKS FOR YOUR SUBMISSION!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eYour application has been received. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'zapier': { 'enable': true, 'webhookUrl': 'https:\/\/hooks.zapier.com\/hooks\/catch\/2533543\/bb66vt0\/' } }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-47262\'\u003e\n\u003cstyle\u003e\n.globo-form-id-47262 .globo-form-app{\n    max-width: 1000px;\n    width: -webkit-fill-available;\n    background-color:#FFF;\n    \n    \n}\n\n.globo-form-id-47262 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-47262 .globo-form-app .globo-description,\n.globo-form-id-47262 .globo-form-app .header .globo-description{\n    color: rgba(102,102,102,1)\n}\n.globo-form-id-47262 .globo-form-app .globo-label,\n.globo-form-id-47262 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-47262 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-47262 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: rgba(102,102,102,1)\n}\n.globo-form-id-47262 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-47262 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-47262 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-47262 .globo-form-app .footer button{\n    border:1px solid rgba(119,36,10,1);\n    \n        width:100%;\n    \n}\n.globo-form-id-47262 .globo-form-app .footer button.submit,\n.globo-form-id-47262 .globo-form-app .footer button.checkout,\n.globo-form-id-47262 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(119,36,10,1);\n    color : #ffffff;\n}\n.globo-form-id-47262 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(119,36,10,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-47262 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(119,36,10,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-47262 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-47262 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(119,36,10,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-47262 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(119,36,10,1);\n    background: radial-gradient(rgba(119,36,10,1) 40%, #fff 45%);\n}\n.globo-form-id-47262 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(119,36,10,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(119,36,10,1);\n}\n.globo-form-id-47262 .globo-form-app .step.-completed .step__number,\n.globo-form-id-47262 .globo-form-app .line.-progress,\n.globo-form-id-47262 .globo-form-app .line.-start{\n    background-color: rgba(119,36,10,1);\n}\n.globo-form-id-47262 .globo-form-app .checkmark__check,\n.globo-form-id-47262 .globo-form-app .checkmark__circle{\n    stroke: rgba(119,36,10,1);\n}\n.globo-form-id-47262 .floating-button{\n    background-color: rgba(119,36,10,1);\n}\n.globo-form-id-47262 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(119,36,10,1);\n}\n.globo-form-id-47262 .flatpickr-day.selected, \n.globo-form-id-47262 .flatpickr-day.startRange, \n.globo-form-id-47262 .flatpickr-day.endRange, \n.globo-form-id-47262 .flatpickr-day.selected.inRange, \n.globo-form-id-47262 .flatpickr-day.startRange.inRange, \n.globo-form-id-47262 .flatpickr-day.endRange.inRange, \n.globo-form-id-47262 .flatpickr-day.selected:focus, \n.globo-form-id-47262 .flatpickr-day.startRange:focus, \n.globo-form-id-47262 .flatpickr-day.endRange:focus, \n.globo-form-id-47262 .flatpickr-day.selected:hover, \n.globo-form-id-47262 .flatpickr-day.startRange:hover, \n.globo-form-id-47262 .flatpickr-day.endRange:hover, \n.globo-form-id-47262 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-47262 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-47262 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-47262 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-47262 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-47262 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(119,36,10,1);\n    border-color: rgba(119,36,10,1);\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/47262\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=47262\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=47262\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-text\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eName\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'47262-text\' name=\'text\' placeholder=\'Name\' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-text-2\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003ePseudonym\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'47262-text-2\' name=\'text-2\' placeholder=\'Pseudonym (not required)\'  \u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003e(Feel free to construct a new first and last name to protect your identity if your works are posted online.) \u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-datetime\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eDate of Birth \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput \n        type=\'text\' \n        autocomplete=\'off\'\n         \n        data-type=\'datetime\' \n        class=\'flat-input\' \n        id=\'47262-datetime\' \n        name=\'datetime\' \n        placeholder=\'Date of Birth \' \n        presence \n        data-format=\'date\' \n         \n        dataDateFormat=\'d-m-Y\' \n        dataTimeFormat=\'12h\' \n        \n    \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-text-3\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eAddress (House Number\/Apt.\/Ste. and Street)\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'47262-text-3\' name=\'text-3\' placeholder=\'Address (House Number\/Apt.\/Ste. and Street)\' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\' \u003e\n    \u003clabel for=\'47262-text-4\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eCity\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'47262-text-4\' name=\'text-4\' placeholder=\'City\' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\' \u003e\n    \u003clabel for=\'47262-select\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eState\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cselect name=\'select\'  id=\'47262-select\' class=\'flat-input\' presence\u003e\n        \u003coption selected=\'selected\' value=\'\' disabled=\'disabled\'\u003eState\u003c\/option\u003e\n        \n        \u003coption value=\'AL\'\u003eAL\u003c\/option\u003e\n        \n        \u003coption value=\'AK\'\u003eAK\u003c\/option\u003e\n        \n        \u003coption value=\'AZ\'\u003eAZ\u003c\/option\u003e\n        \n        \u003coption value=\'AR\'\u003eAR\u003c\/option\u003e\n        \n        \u003coption value=\'CA\'\u003eCA\u003c\/option\u003e\n        \n        \u003coption value=\'CO\'\u003eCO\u003c\/option\u003e\n        \n        \u003coption value=\'CT\'\u003eCT\u003c\/option\u003e\n        \n        \u003coption value=\'DE\'\u003eDE\u003c\/option\u003e\n        \n        \u003coption value=\'FL\'\u003eFL\u003c\/option\u003e\n        \n        \u003coption value=\'GA\'\u003eGA\u003c\/option\u003e\n        \n        \u003coption value=\'HI\'\u003eHI\u003c\/option\u003e\n        \n        \u003coption value=\'ID\'\u003eID\u003c\/option\u003e\n        \n        \u003coption value=\'IL\'\u003eIL\u003c\/option\u003e\n        \n        \u003coption value=\'IN\'\u003eIN\u003c\/option\u003e\n        \n        \u003coption value=\'IA\'\u003eIA\u003c\/option\u003e\n        \n        \u003coption value=\'KS\'\u003eKS\u003c\/option\u003e\n        \n        \u003coption value=\'KY\'\u003eKY\u003c\/option\u003e\n        \n        \u003coption value=\'LA\'\u003eLA\u003c\/option\u003e\n        \n        \u003coption value=\'ME\'\u003eME\u003c\/option\u003e\n        \n        \u003coption value=\'MD\'\u003eMD\u003c\/option\u003e\n        \n        \u003coption value=\'MA\'\u003eMA\u003c\/option\u003e\n        \n        \u003coption value=\'MI\'\u003eMI\u003c\/option\u003e\n        \n        \u003coption value=\'MN\'\u003eMN\u003c\/option\u003e\n        \n        \u003coption value=\'MS\'\u003eMS\u003c\/option\u003e\n        \n        \u003coption value=\'MO\'\u003eMO\u003c\/option\u003e\n        \n        \u003coption value=\'MT\'\u003eMT\u003c\/option\u003e\n        \n        \u003coption value=\'NE\'\u003eNE\u003c\/option\u003e\n        \n        \u003coption value=\'NV\'\u003eNV\u003c\/option\u003e\n        \n        \u003coption value=\'NH\'\u003eNH\u003c\/option\u003e\n        \n        \u003coption value=\'NJ\'\u003eNJ\u003c\/option\u003e\n        \n        \u003coption value=\'NM\'\u003eNM\u003c\/option\u003e\n        \n        \u003coption value=\'NY\'\u003eNY\u003c\/option\u003e\n        \n        \u003coption value=\'NC\'\u003eNC\u003c\/option\u003e\n        \n        \u003coption value=\'ND\'\u003eND\u003c\/option\u003e\n        \n        \u003coption value=\'OH\'\u003eOH\u003c\/option\u003e\n        \n        \u003coption value=\'OK\'\u003eOK\u003c\/option\u003e\n        \n        \u003coption value=\'OR\'\u003eOR\u003c\/option\u003e\n        \n        \u003coption value=\'PA\'\u003ePA\u003c\/option\u003e\n        \n        \u003coption value=\'RI\'\u003eRI\u003c\/option\u003e\n        \n        \u003coption value=\'SC\'\u003eSC\u003c\/option\u003e\n        \n        \u003coption value=\'SD\'\u003eSD\u003c\/option\u003e\n        \n        \u003coption value=\'TN\'\u003eTN\u003c\/option\u003e\n        \n        \u003coption value=\'TX\'\u003eTX\u003c\/option\u003e\n        \n        \u003coption value=\'UT\'\u003eUT\u003c\/option\u003e\n        \n        \u003coption value=\'VT\'\u003eVT\u003c\/option\u003e\n        \n        \u003coption value=\'VA\'\u003eVA\u003c\/option\u003e\n        \n        \u003coption value=\'WA\'\u003eWA\u003c\/option\u003e\n        \n        \u003coption value=\'WV\'\u003eWV\u003c\/option\u003e\n        \n        \u003coption value=\'WI\'\u003eWI\u003c\/option\u003e\n        \n        \u003coption value=\'WY\'\u003eWY\u003c\/option\u003e\n        \n    \u003c\/select\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\' \u003e\n    \u003clabel for=\'47262-number\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eZIP\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'number\'  class=\'flat-input\' id=\'47262-number\' name=\'number\' placeholder=\'ZIP\' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-email\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eEmail Address \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'flat-input\' id=\'47262-email\' name=\'email\' placeholder=\'Email Address \' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-email-2\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eConfirm Email Address \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'flat-input\' id=\'47262-email-2\' name=\'email-2\' placeholder=\'Confirm Email Address \' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-phone\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003ePhone Number \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'phone\' class=\'flat-input\' id=\'47262-phone\' name=\'phone\' placeholder=\'Phone Number \' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-select-2\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eSubmission Category\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cselect name=\'select-2\'  id=\'47262-select-2\' class=\'flat-input\' presence\u003e\n        \u003coption selected=\'selected\' value=\'\' disabled=\'disabled\'\u003eSubmission Category\u003c\/option\u003e\n        \n        \u003coption value=\'Elementary School (Written)\'\u003eElementary School (Written)\u003c\/option\u003e\n        \n        \u003coption value=\'Elementary School (Audio-Visual)\'\u003eElementary School (Audio-Visual)\u003c\/option\u003e\n        \n        \u003coption value=\'Middle and High School (Written)\'\u003eMiddle and High School (Written)\u003c\/option\u003e\n        \n        \u003coption value=\'Middle and High School (Audio-Visual)\'\u003eMiddle and High School (Audio-Visual)\u003c\/option\u003e\n        \n        \u003coption value=\'Higher Ed (Written)\'\u003eHigher Ed (Written)\u003c\/option\u003e\n        \n        \u003coption value=\'Higher Ed (Audio-Visual)\'\u003eHigher Ed (Audio-Visual)\u003c\/option\u003e\n        \n    \u003c\/select\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003ch3 class=\'heading-title globo-heading\'\u003eSubmission Attachments\u003c\/h3\u003e\n    \u003cp class=\'heading-caption\'\u003e\u003c\/p\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'paragraph\' class=\'flat-label\'\u003e\u003cspan class=\'label-content\'\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-paragraph\'\u003e\u003cp\u003ePlease upload your submission documents or other files by submitting a DropBox or Google Drive link. When uploading files, please title any attachments in the following format, choosing the sectional category in the formatting that is most appropriate for your submission: First and Last Name: E, MH, Grad\/HE; Written\/AV.\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eEnsure that your submission link is on a \u003cstrong\u003ePUBLIC SHARE\u003c\/strong\u003e setting so that anyone with the link may access the document. TST will not request permission to access your submission’s attachments if it does not initially allow access through this public share setting.\u003c\/p\u003e\u003c\/div\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'47262-text-5\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eAdd Your Submission Link Here\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'47262-text-5\' name=\'text-5\' placeholder=\'Add Your Submission Link Here\' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clegend class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003e\u003c\/span\u003e\u003c\/legend\u003e\n    \n    \n    \u003cul\u003e\n        \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'47262-checkbox-I accept the contractual agreement and legal disclaimers.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I accept the contractual agreement and legal disclaimers.\'\u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'47262-checkbox-I accept the contractual agreement and legal disclaimers.-\'\u003eI accept the contractual agreement and legal disclaimers.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'47262-checkbox-I have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.\'\u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'47262-checkbox-I have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.-\'\u003eI have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'47262-checkbox-My submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'My submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.\'\u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'47262-checkbox-My submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.-\'\u003eMy submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'47262-text-6\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eSign\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'47262-text-6\' name=\'text-6\' placeholder=\'Sign\' presence \u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003eParent\/Guardian Signature if Minor\u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'47262-datetime-2\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eDate\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput \n        type=\'text\' \n        autocomplete=\'off\'\n         \n        data-type=\'datetime\' \n        class=\'flat-input\' \n        id=\'47262-datetime-2\' \n        name=\'datetime-2\' \n        placeholder=\'Date\' \n        presence \n        data-format=\'date\' \n         \n        dataDateFormat=\'d-m-Y\' \n        dataTimeFormat=\'12h\' \n        \n            limitDateType=\'disablingDates\'\n            \n            \n            \n        \n    \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003cp\u003eTHANKS FOR YOUR SUBMISSION!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eYour application has been received. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit flat-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit Application\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003cp\u003eTHANKS FOR YOUR SUBMISSION!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eYour application has been received. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[47262];



        window.Globo.FormBuilder.forms[57897] = { '57897': { 'header': { 'active': true, 'title': 'Contact us', 'description': 'Leave your message and we'll get back to you shortly.' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Your Name', 'placeholder': 'Your Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'email', 'type': 'email', 'label': 'Your Email', 'placeholder': 'Your Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'checkbox', 'type': 'checkbox', 'label': '', 'options': 'I have read FAQ. We will not reply to questions that are answered in the FAQ.', 'defaultOptions': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100 }, { 'id': 'checkbox-2', 'type': 'checkbox', 'label': '', 'options': 'I reviewed the Find a Congregation page.', 'defaultOptions': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'checkbox': false }, { 'id': 'checkbox-3', 'type': 'checkbox', 'label': '', 'options': 'I don't want to start a congregation .', 'defaultOptions': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'checkbox': false, 'checkbox-2': false }, { 'id': 'checkbox-4', 'type': 'checkbox', 'label': '', 'options': 'I am not writing about selling my soul.', 'defaultOptions': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'checkbox': false, 'checkbox-2': false, 'checkbox-3': false }, { 'id': 'checkbox-5', 'type': 'checkbox', 'label': '', 'options': 'My question is not related to the shop or an order that was placed. For questions involving the TST Shop please use our shop contact form.', 'defaultOptions': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'checkbox': false, 'checkbox-2': false, 'checkbox-3': false, 'checkbox-4': false }, { 'id': 'text-2', 'type': 'text', 'label': 'Subject', 'placeholder': 'Subject', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'checkbox': false, 'checkbox-2': false, 'checkbox-3': false, 'checkbox-4': false, 'checkbox-5': false }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Message', 'placeholder': 'Message', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'checkbox': false, 'checkbox-2': false, 'checkbox-3': false, 'checkbox-4': false, 'checkbox-5': false }, { 'id': 'file', 'type': 'file', 'label': '', 'button-text': 'Choose file', 'placeholder': '', 'allowed-multiple': false, 'allowed-extensions': ['jpg', 'jpeg', 'png', 'pdf', 'csv'], 'description': '', 'uploadPending': 'File is uploading. Please wait a second...', 'uploadSuccess': 'File uploaded successfully', 'hideLabel': false, 'keepPositionLabel': false, 'required': false, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'checkbox': false, 'checkbox-2': false, 'checkbox-3': false, 'checkbox-4': false, 'checkbox-5': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Send', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': false, 'submitAlignment': 'center' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'boxed', 'width': '1000', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch! We will contact you shortly.\u0026nbsp;Hail Satan!\u003c\/h4\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': 'Looks like your Mailchimp API key that you provide is not right, Please go to \u003ca href='\/admin\/settings' target='_blank'\u003eSettings\u003c\/a\u003e to correct it', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyo_email': '', 'text': '', 'email': '', 'checkbox': '', 'checkbox-2': '', 'checkbox-3': '', 'checkbox-4': '', 'checkbox-5': '', 'text-2': '', 'textarea': '', 'file': '' } }, 'zapier': { 'enable': true, 'webhookUrl': 'https:\/\/hooks.zapier.com\/hooks\/catch\/2533543\/b6n3i5w\/' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': '', 'firstName': '', 'lastName': '', 'status': '', 'country': '', 'state': '', 'city': '', 'phone': '', 'postalCode': '', 'gender': '', 'birthdate': '', 'tags': '', 'customProperties1': '', 'customProperties2': '', 'customProperties3': '', 'customProperties4': '', 'customProperties5': '' } } }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href=\'\/account\/login\' title=\'login\'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'popup': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form boxed-form globo-form-id-57897\'\u003e\n\u003cstyle\u003e\n.globo-form-id-57897 .globo-form-app{\n    max-width: 1000px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-57897 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-57897 .globo-form-app .globo-description,\n.globo-form-id-57897 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-57897 .globo-form-app .globo-label,\n.globo-form-id-57897 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-57897 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-57897 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-57897 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-57897 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-57897 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-57897 .globo-form-app .footer{\n    text-align:center;\n}\n.globo-form-id-57897 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-57897 .globo-form-app .footer button.submit,\n.globo-form-id-57897 .globo-form-app .footer button.checkout,\n.globo-form-id-57897 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-57897 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-57897 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-57897 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-57897 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-57897 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-57897 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-57897 .globo-form-app .step.-completed .step__number,\n.globo-form-id-57897 .globo-form-app .line.-progress,\n.globo-form-id-57897 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-57897 .globo-form-app .checkmark__check,\n.globo-form-id-57897 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-57897 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-57897 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-57897 .flatpickr-day.selected, \n.globo-form-id-57897 .flatpickr-day.startRange, \n.globo-form-id-57897 .flatpickr-day.endRange, \n.globo-form-id-57897 .flatpickr-day.selected.inRange, \n.globo-form-id-57897 .flatpickr-day.startRange.inRange, \n.globo-form-id-57897 .flatpickr-day.endRange.inRange, \n.globo-form-id-57897 .flatpickr-day.selected:focus, \n.globo-form-id-57897 .flatpickr-day.startRange:focus, \n.globo-form-id-57897 .flatpickr-day.endRange:focus, \n.globo-form-id-57897 .flatpickr-day.selected:hover, \n.globo-form-id-57897 .flatpickr-day.startRange:hover, \n.globo-form-id-57897 .flatpickr-day.endRange:hover, \n.globo-form-id-57897 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-57897 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-57897 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-57897 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-57897 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-57897 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-57897 .globo-paragraph,\n.globo-form-id-57897 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app boxed-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/57897\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=57897\u003e\n        \n        \u003cdiv class=\'header\'\u003e\n            \u003ch3 class=\'title globo-heading\'\u003eContact us\u003c\/h3\u003e\n            \n            \u003cdiv class=\'description globo-description\'\u003eLeave your message and we'll get back to you shortly.\u003c\/div\u003e\n            \n        \u003c\/div\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=57897\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'57897-text\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Your Name\'\u003eYour Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'57897-text\' name=\'text\' placeholder=\'Your Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'57897-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Your Email\'\u003eYour Email\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'57897-email\' name=\'email\' placeholder=\'Your Email\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\\\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'57897-checkbox-I have read FAQ. We will not reply to questions that are answered in the FAQ.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\' presence value=\'I have read FAQ. We will not reply to questions that are answered in the FAQ.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'57897-checkbox-I have read FAQ. We will not reply to questions that are answered in the FAQ.-\'\u003eI have read FAQ. We will not reply to questions that are answered in the FAQ.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\\\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'57897-checkbox-2-I reviewed the Find a Congregation page.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-2[]\' presence value=\'I reviewed the Find a Congregation page.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'57897-checkbox-2-I reviewed the Find a Congregation page.-\'\u003eI reviewed the Find a Congregation page.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\\\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'57897-checkbox-3-I don't want to start a congregation .-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-3[]\' presence value=\'I don't want to start a congregation .\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'57897-checkbox-3-I don't want to start a congregation .-\'\u003eI don't want to start a congregation .\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\\\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'57897-checkbox-4-I am not writing about selling my soul.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-4[]\' presence value=\'I am not writing about selling my soul.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'57897-checkbox-4-I am not writing about selling my soul.-\'\u003eI am not writing about selling my soul.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\\\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'57897-checkbox-5-My question is not related to the shop or an order that was placed. For questions involving the TST Shop please use our shop contact form.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-5[]\' presence value=\'My question is not related to the shop or an order that was placed. For questions involving the TST Shop please use our shop contact form.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'57897-checkbox-5-My question is not related to the shop or an order that was placed. For questions involving the TST Shop please use our shop contact form.-\'\u003eMy question is not related to the shop or an order that was placed. For questions involving the TST Shop please use our shop contact form.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'57897-text-2\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Subject\'\u003eSubject\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'57897-text-2\' name=\'text-2\' placeholder=\'Subject\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'57897-textarea\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Message\'\u003eMessage\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'57897-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Message\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'57897-file\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'file\'  data-type=\'file\' class=\'classic-input\' id=\'57897-file\'  name=\'file\' \n            placeholder=\'\'  data-allowed-extensions=\'jpg,jpeg,png,pdf,csv\'\u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch! We will contact you shortly.\u0026nbsp;Hail Satan!\u003c\/h4\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSend\u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch! We will contact you shortly.\u0026nbsp;Hail Satan!\u003c\/h4\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[57897];



        window.Globo.FormBuilder.forms[57913] = { '57913': { 'header': { 'active': true, 'title': 'Contact us', 'description': 'Leave your message and we'll get back to you shortly.' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'First Name', 'placeholder': 'First Name', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'email', 'type': 'email', 'label': 'Your Email', 'placeholder': 'Your Email', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'text-2', 'type': 'text', 'label': 'Subject', 'placeholder': 'Subject', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Message', 'placeholder': 'Message', 'description': '', 'required': true, 'columnWidth': 100 }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Contact', 'submitFullWidth': false, 'submitAlignment': 'left' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'boxed', 'width': 600, 'style': 'flat', 'mainColor': 'rgba(144,19,254,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form boxed-form globo-form-id-57913\'\u003e\n\u003cstyle\u003e\n.globo-form-id-57913 .globo-form-app{\n    max-width: 600px;\n    width: -webkit-fill-available;\n    background-color:#FFF;\n    \n    \n}\n\n.globo-form-id-57913 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-57913 .globo-form-app .globo-description,\n.globo-form-id-57913 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-57913 .globo-form-app .globo-label,\n.globo-form-id-57913 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-57913 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-57913 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-57913 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-57913 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-57913 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-57913 .globo-form-app .footer button{\n    border:1px solid rgba(144,19,254,1);\n    \n}\n.globo-form-id-57913 .globo-form-app .footer button.submit,\n.globo-form-id-57913 .globo-form-app .footer button.checkout,\n.globo-form-id-57913 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(144,19,254,1);\n    color : #ffffff;\n}\n.globo-form-id-57913 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(144,19,254,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-57913 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(144,19,254,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-57913 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-57913 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(144,19,254,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-57913 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(144,19,254,1);\n    background: radial-gradient(rgba(144,19,254,1) 40%, #fff 45%);\n}\n.globo-form-id-57913 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(144,19,254,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(144,19,254,1);\n}\n.globo-form-id-57913 .globo-form-app .step.-completed .step__number,\n.globo-form-id-57913 .globo-form-app .line.-progress,\n.globo-form-id-57913 .globo-form-app .line.-start{\n    background-color: rgba(144,19,254,1);\n}\n.globo-form-id-57913 .globo-form-app .checkmark__check,\n.globo-form-id-57913 .globo-form-app .checkmark__circle{\n    stroke: rgba(144,19,254,1);\n}\n.globo-form-id-57913 .floating-button{\n    background-color: rgba(144,19,254,1);\n}\n.globo-form-id-57913 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(144,19,254,1);\n}\n.globo-form-id-57913 .flatpickr-day.selected, \n.globo-form-id-57913 .flatpickr-day.startRange, \n.globo-form-id-57913 .flatpickr-day.endRange, \n.globo-form-id-57913 .flatpickr-day.selected.inRange, \n.globo-form-id-57913 .flatpickr-day.startRange.inRange, \n.globo-form-id-57913 .flatpickr-day.endRange.inRange, \n.globo-form-id-57913 .flatpickr-day.selected:focus, \n.globo-form-id-57913 .flatpickr-day.startRange:focus, \n.globo-form-id-57913 .flatpickr-day.endRange:focus, \n.globo-form-id-57913 .flatpickr-day.selected:hover, \n.globo-form-id-57913 .flatpickr-day.startRange:hover, \n.globo-form-id-57913 .flatpickr-day.endRange:hover, \n.globo-form-id-57913 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-57913 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-57913 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-57913 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-57913 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-57913 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(144,19,254,1);\n    border-color: rgba(144,19,254,1);\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app boxed-layout\'\u003e\n    \n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/57913\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=57913\u003e\n        \n        \u003cdiv class=\'header\'\u003e\n            \u003ch3 class=\'title globo-heading\'\u003eContact us\u003c\/h3\u003e\n            \n            \u003cdiv class=\'description globo-description\'\u003eLeave your message and we'll get back to you shortly.\u003c\/div\u003e\n            \n        \u003c\/div\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=57913\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'57913-text\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eFirst Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'57913-text\' name=\'text\' placeholder=\'First Name\' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'57913-email\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eYour Email\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'flat-input\' id=\'57913-email\' name=\'email\' placeholder=\'Your Email\' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'57913-text-2\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eSubject\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'57913-text-2\' name=\'text-2\' placeholder=\'Subject\' presence \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'57913-textarea\' class=\'flat-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eMessage\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'57913-textarea\'  data-type=\'textarea\' class=\'flat-input\' rows=\'3\' name=\'textarea\' placeholder=\'Message\' presence \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit flat-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eContact\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[57913];



        window.Globo.FormBuilder.forms[60203] = { '60203': { 'header': { 'active': true, 'title': '', 'description': '\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e' }, 'elements': [{ 'id': 'radio', 'type': 'radio', 'label': 'Are you currently a student in Elementary, Middle or High School?', 'options': 'Yes\nNo', 'defaultOption': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100 }, { 'id': 'radio-2', 'type': 'radio', 'label': 'Are you the parent or legal guardian of a student in&nbsp;Elementary, Middle or High School?', 'options': 'Yes\nNo', 'defaultOption': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'radio': false }, { 'id': 'radio-3', 'type': 'radio', 'label': 'Do you (or your&nbsp;child) attend a public school in the United States?', 'options': 'Yes\nNo', 'defaultOption': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false }, { 'id': 'text-9', 'type': 'text', 'label': 'Student's Full Name', 'placeholder': 'Student's Full Name*', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'text-8', 'type': 'text', 'label': 'Legal Guardian's Full Name (required if under 18)', 'placeholder': 'Legal Guardian's Full Name (required if under 18)*', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': false, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email*', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 33.33, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'text-2', 'type': 'text', 'label': 'City', 'placeholder': 'City*', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 33.33, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'text-3', 'type': 'text', 'label': 'State', 'placeholder': 'State*', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 33.33, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'text-4', 'type': 'text', 'label': 'School Name', 'placeholder': 'School Name*', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'paragraph', 'type': 'paragraph', 'text': '\u003cp\u003eI affirm that my deeply held beliefs acknowledge the inviolability of the human body and mind, and being physically or psychologically harmed against my will violates these beliefs. I consent to have \u003ca href=\'https:\/\/cdn.shopify.com\/s\/files\/1\/0428\/0465\/files\/PCP_Letter_to_School_Board_-_FINAL.pdf?v=1620835209\' rel=\'noopener noreferrer\' target=\'_blank\'\u003e\u003cu\u003ethis letter\u003c\/u\u003e\u003c\/a\u003e (follow the hyperlink) sent by The Satanic Temple on my behalf to my local school board notifying them of my sincerely held religious beliefs.\u003c\/p\u003e', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'text-5', 'type': 'text', 'label': '', 'placeholder': '', 'description': 'Student Signature', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'paragraph-2', 'type': 'paragraph', 'text': '\u003cp\u003eI affirm that my deeply held beliefs acknowledge the inviolability of the human body and mind, and being physically or psychologically harmed against my will violates these beliefs. I consent to have \u003ca href=\'https:\/\/cdn.shopify.com\/s\/files\/1\/0428\/0465\/files\/PCP_Letter_to_School_Board_-_FINAL.pdf?v=1620835209\' rel=\'noopener noreferrer\' target=\'_blank\'\u003e\u003cu\u003ethis letter\u003c\/u\u003e\u003c\/a\u003e (follow the hyperlink) sent by The Satanic Temple on my behalf to my local school board notifying them of my sincerely held religious beliefs.\u003c\/p\u003e', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }, { 'id': 'text-7', 'type': 'text', 'label': '', 'placeholder': '', 'description': 'Legal Guardian's Signature', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': false, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'radio': false, 'radio-2': false, 'radio-3': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': false, 'submitAlignment': 'center' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '710', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': 'rgba(255,255,255,1)', 'paragraphBackground': 'rgba(255,255,255,0)', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': true, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyoemail': '', 'first_name': { 'val': '', 'option': '' }, 'last_name': { 'val': '', 'option': '' }, 'title': { 'val': '', 'option': '' }, 'organization': { 'val': '', 'option': '' }, 'phone_number': { 'val': '', 'option': '' }, 'address1': { 'val': '', 'option': '' }, 'address2': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'region': { 'val': '', 'option': '' }, 'zip': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'latitude': { 'val': '', 'option': '' }, 'longitude': { 'val': '', 'option': '' } } }, 'zapier': { 'enable': false, 'webhookUrl': '' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'firstName': { 'val': '', 'option': '' }, 'lastName': { 'val': '', 'option': '' }, 'status': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'postalCode': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'customProperties1': { 'val': '', 'option': '' }, 'customProperties2': { 'val': '', 'option': '' }, 'customProperties3': { 'val': '', 'option': '' }, 'customProperties4': { 'val': '', 'option': '' }, 'customProperties5': { 'val': '', 'option': '' } } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'name': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'company': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'street': { 'val': '', 'option': '' }, 'postal_code': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'fax': { 'val': '', 'option': '' }, 'comment': { 'val': '', 'option': '' }, 'ref': { 'val': '', 'option': '' }, 'url': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'dayOfCycle': { 'val': '', 'option': '' }, 'scoring': { 'val': '', 'option': '' } } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] } }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href=\'\/account\/login\' title=\'login\'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'60203\'\u003e\u003c\/div\u003e', 'shortCode': '{formbuilder:60203}', 'popup': '\u003cbutton class=\'globo-formbuilder-open\' data-id=\'60203\'\u003eOpen form\u003c\/button\u003e', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'60203\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'60203\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': '15824261', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-60203\'\u003e\n\u003cstyle\u003e\n.globo-form-id-60203 .globo-form-app{\n    max-width: 710px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-60203 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-60203 .globo-form-app .globo-description,\n.globo-form-id-60203 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-60203 .globo-form-app .globo-label,\n.globo-form-id-60203 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-60203 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-60203 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-60203 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-60203 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-60203 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-60203 .globo-form-app .footer{\n    text-align:center;\n}\n.globo-form-id-60203 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-60203 .globo-form-app .footer button.submit,\n.globo-form-id-60203 .globo-form-app .footer button.checkout,\n.globo-form-id-60203 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-60203 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-60203 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-60203 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-60203 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-60203 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-60203 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60203 .globo-form-app .step.-completed .step__number,\n.globo-form-id-60203 .globo-form-app .line.-progress,\n.globo-form-id-60203 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60203 .globo-form-app .checkmark__check,\n.globo-form-id-60203 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-60203 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60203 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-60203 .flatpickr-day.selected, \n.globo-form-id-60203 .flatpickr-day.startRange, \n.globo-form-id-60203 .flatpickr-day.endRange, \n.globo-form-id-60203 .flatpickr-day.selected.inRange, \n.globo-form-id-60203 .flatpickr-day.startRange.inRange, \n.globo-form-id-60203 .flatpickr-day.endRange.inRange, \n.globo-form-id-60203 .flatpickr-day.selected:focus, \n.globo-form-id-60203 .flatpickr-day.startRange:focus, \n.globo-form-id-60203 .flatpickr-day.endRange:focus, \n.globo-form-id-60203 .flatpickr-day.selected:hover, \n.globo-form-id-60203 .flatpickr-day.startRange:hover, \n.globo-form-id-60203 .flatpickr-day.endRange:hover, \n.globo-form-id-60203 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-60203 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-60203 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-60203 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-60203 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-60203 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-60203 .globo-paragraph,\n.globo-form-id-60203 .globo-paragraph * {\n    background: rgba(255,255,255,0) !important;\n    color: rgba(255,255,255,1) !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/60203\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=60203\u003e\n        \n        \u003cdiv class=\'header\'\u003e\n            \u003ch3 class=\'title globo-heading\'\u003e\u003c\/h3\u003e\n            \n        \u003c\/div\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=60203\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Are you currently a student in Elementary, Middle or High School?\'\u003eAre you currently a student in Elementary, Middle or High School?\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n        \u003cli class=\'globo-list-control option-1-column\'\u003e\n            \u003cdiv class=\'radio-wrapper\'\u003e\n                \u003cinput class=\'radio-input\'  id=\'60203-radio-Yes-\' type=\'radio\'   data-type=\'radio\' name=\'radio\' presence value=\'Yes\'\u003e\n                \u003clabel class=\'radio-label globo-option\' for=\'60203-radio-Yes-\'\u003eYes\u003c\/label\u003e\n            \u003c\/div\u003e\n        \u003c\/li\u003e\n        \n        \u003cli class=\'globo-list-control option-1-column\'\u003e\n            \u003cdiv class=\'radio-wrapper\'\u003e\n                \u003cinput class=\'radio-input\'  id=\'60203-radio-No-\' type=\'radio\'   data-type=\'radio\' name=\'radio\' presence value=\'No\'\u003e\n                \u003clabel class=\'radio-label globo-option\' for=\'60203-radio-No-\'\u003eNo\u003c\/label\u003e\n            \u003c\/div\u003e\n        \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Are you the parent or legal guardian of a student in&nbsp;Elementary, Middle or High School?\'\u003eAre you the parent or legal guardian of a student in&nbsp;Elementary, Middle or High School?\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n        \u003cli class=\'globo-list-control option-1-column\'\u003e\n            \u003cdiv class=\'radio-wrapper\'\u003e\n                \u003cinput class=\'radio-input\'  id=\'60203-radio-2-Yes-\' type=\'radio\'   data-type=\'radio\' name=\'radio-2\' presence value=\'Yes\'\u003e\n                \u003clabel class=\'radio-label globo-option\' for=\'60203-radio-2-Yes-\'\u003eYes\u003c\/label\u003e\n            \u003c\/div\u003e\n        \u003c\/li\u003e\n        \n        \u003cli class=\'globo-list-control option-1-column\'\u003e\n            \u003cdiv class=\'radio-wrapper\'\u003e\n                \u003cinput class=\'radio-input\'  id=\'60203-radio-2-No-\' type=\'radio\'   data-type=\'radio\' name=\'radio-2\' presence value=\'No\'\u003e\n                \u003clabel class=\'radio-label globo-option\' for=\'60203-radio-2-No-\'\u003eNo\u003c\/label\u003e\n            \u003c\/div\u003e\n        \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Do you (or your&nbsp;child) attend a public school in the United States?\'\u003eDo you (or your&nbsp;child) attend a public school in the United States?\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n        \u003cli class=\'globo-list-control option-1-column\'\u003e\n            \u003cdiv class=\'radio-wrapper\'\u003e\n                \u003cinput class=\'radio-input\'  id=\'60203-radio-3-Yes-\' type=\'radio\'   data-type=\'radio\' name=\'radio-3\' presence value=\'Yes\'\u003e\n                \u003clabel class=\'radio-label globo-option\' for=\'60203-radio-3-Yes-\'\u003eYes\u003c\/label\u003e\n            \u003c\/div\u003e\n        \u003c\/li\u003e\n        \n        \u003cli class=\'globo-list-control option-1-column\'\u003e\n            \u003cdiv class=\'radio-wrapper\'\u003e\n                \u003cinput class=\'radio-input\'  id=\'60203-radio-3-No-\' type=\'radio\'   data-type=\'radio\' name=\'radio-3\' presence value=\'No\'\u003e\n                \u003clabel class=\'radio-label globo-option\' for=\'60203-radio-3-No-\'\u003eNo\u003c\/label\u003e\n            \u003c\/div\u003e\n        \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'60203-text-9\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Student's Full Name\'\u003eStudent's Full Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60203-text-9\' name=\'text-9\' placeholder=\'Student's Full Name*\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'60203-text-8\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Legal Guardian's Full Name (required if under 18)\'\u003eLegal Guardian's Full Name (required if under 18)\u003c\/span\u003e\u003cspan\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60203-text-8\' name=\'text-8\' placeholder=\'Legal Guardian's Full Name (required if under 18)*\'   \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\' \u003e\n    \u003clabel for=\'60203-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'60203-email\' name=\'email\' placeholder=\'Email*\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\' \u003e\n    \u003clabel for=\'60203-text-2\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'City\'\u003eCity\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60203-text-2\' name=\'text-2\' placeholder=\'City*\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\' \u003e\n    \u003clabel for=\'60203-text-3\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'State\'\u003eState\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60203-text-3\' name=\'text-3\' placeholder=\'State*\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'60203-text-4\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'School Name\'\u003eSchool Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60203-text-4\' name=\'text-4\' placeholder=\'School Name*\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003cdiv class=\'globo-paragraph\'\u003e\u003cp\u003eI affirm that my deeply held beliefs acknowledge the inviolability of the human body and mind, and being physically or psychologically harmed against my will violates these beliefs. I consent to have \u003ca href=\'https:\/\/cdn.shopify.com\/s\/files\/1\/0428\/0465\/files\/PCP_Letter_to_School_Board_-_FINAL.pdf?v=1620835209\' rel=\'noopener noreferrer\' target=\'_blank\'\u003e\u003cu\u003ethis letter\u003c\/u\u003e\u003c\/a\u003e (follow the hyperlink) sent by The Satanic Temple on my behalf to my local school board notifying them of my sincerely held religious beliefs.\u003c\/p\u003e\u003c\/div\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'60203-text-5\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60203-text-5\' name=\'text-5\' placeholder=\'\' presence  \u003e\n    \u003c\/div\u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003eStudent Signature\u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003cdiv class=\'globo-paragraph\'\u003e\u003cp\u003eI affirm that my deeply held beliefs acknowledge the inviolability of the human body and mind, and being physically or psychologically harmed against my will violates these beliefs. I consent to have \u003ca href=\'https:\/\/cdn.shopify.com\/s\/files\/1\/0428\/0465\/files\/PCP_Letter_to_School_Board_-_FINAL.pdf?v=1620835209\' rel=\'noopener noreferrer\' target=\'_blank\'\u003e\u003cu\u003ethis letter\u003c\/u\u003e\u003c\/a\u003e (follow the hyperlink) sent by The Satanic Temple on my behalf to my local school board notifying them of my sincerely held religious beliefs.\u003c\/p\u003e\u003c\/div\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'60203-text-7\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60203-text-7\' name=\'text-7\' placeholder=\'\'   \u003e\n    \u003c\/div\u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003eLegal Guardian's Signature\u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[60203];



        window.Globo.FormBuilder.forms[60211] = { '60211': { 'header': { 'active': false, 'title': '', 'description': '\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'First Name', 'placeholder': 'First Name*', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100 }, { 'id': 'email', 'type': 'email', 'label': 'Your Email', 'placeholder': 'Your Email*', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100 }, { 'id': 'text-2', 'type': 'text', 'label': 'Subject', 'placeholder': 'Subject*', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100 }, { 'id': 'radio', 'type': 'radio', 'label': '', 'options': 'I am a member of a Congregation who wants to organize a community event and am seeking your services.\nI have a question about Satanic Good Works.', 'defaultOption': '', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Your message here...', 'placeholder': 'Your message here...', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'radio': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'submitFullWidth': false, 'submitAlignment': 'center' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'boxed', 'width': '740', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;Hail Satan!\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'publish': { 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'60211\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'60211\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'60211\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form boxed-form globo-form-id-60211\'\u003e\n\u003cstyle\u003e\n.globo-form-id-60211 .globo-form-app{\n    max-width: 740px;\n    width: -webkit-fill-available;\n    background-color:#FFF;\n    \n    \n}\n\n.globo-form-id-60211 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-60211 .globo-form-app .globo-description,\n.globo-form-id-60211 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-60211 .globo-form-app .globo-label,\n.globo-form-id-60211 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-60211 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-60211 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-60211 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-60211 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-60211 .globo-form-app .footer{\n    text-align:center;\n}\n.globo-form-id-60211 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-60211 .globo-form-app .footer button.submit,\n.globo-form-id-60211 .globo-form-app .footer button.checkout,\n.globo-form-id-60211 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-60211 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-60211 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-60211 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-60211 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-60211 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-60211 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60211 .globo-form-app .step.-completed .step__number,\n.globo-form-id-60211 .globo-form-app .line.-progress,\n.globo-form-id-60211 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60211 .globo-form-app .checkmark__check,\n.globo-form-id-60211 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-60211 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60211 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-60211 .flatpickr-day.selected, \n.globo-form-id-60211 .flatpickr-day.startRange, \n.globo-form-id-60211 .flatpickr-day.endRange, \n.globo-form-id-60211 .flatpickr-day.selected.inRange, \n.globo-form-id-60211 .flatpickr-day.startRange.inRange, \n.globo-form-id-60211 .flatpickr-day.endRange.inRange, \n.globo-form-id-60211 .flatpickr-day.selected:focus, \n.globo-form-id-60211 .flatpickr-day.startRange:focus, \n.globo-form-id-60211 .flatpickr-day.endRange:focus, \n.globo-form-id-60211 .flatpickr-day.selected:hover, \n.globo-form-id-60211 .flatpickr-day.startRange:hover, \n.globo-form-id-60211 .flatpickr-day.endRange:hover, \n.globo-form-id-60211 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-60211 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-60211 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-60211 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-60211 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-60211 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app boxed-layout\'\u003e\n    \u003cdiv class=\'header dismiss  hidden \' onclick=\' Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/60211\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=60211\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=60211\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'60211-text\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eFirst Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60211-text\' name=\'text\' placeholder=\'First Name*\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'60211-email\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eYour Email\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'60211-email\' name=\'email\' placeholder=\'Your Email*\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'60211-text-2\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eSubject\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60211-text-2\' name=\'text-2\' placeholder=\'Subject*\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clegend class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003e\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/legend\u003e\n    \n    \n    \u003cul\u003e\n        \n        \u003cli\u003e\n            \u003cdiv class=\'radio-wrapper\'\u003e\n                \u003cinput class=\'radio-input\'  id=\'60211-radio-I am a member of a Congregation who wants to organize a community event and am seeking your services.-\' type=\'radio\'   data-type=\'radio\' name=\'radio\' presence value=\'I am a member of a Congregation who wants to organize a community event and am seeking your services.\'\u003e\n                \u003clabel class=\'radio-label globo-option\' for=\'60211-radio-I am a member of a Congregation who wants to organize a community event and am seeking your services.-\'\u003eI am a member of a Congregation who wants to organize a community event and am seeking your services.\u003c\/label\u003e\n            \u003c\/div\u003e\n        \u003c\/li\u003e\n        \n        \u003cli\u003e\n            \u003cdiv class=\'radio-wrapper\'\u003e\n                \u003cinput class=\'radio-input\'  id=\'60211-radio-I have a question about Satanic Good Works.-\' type=\'radio\'   data-type=\'radio\' name=\'radio\' presence value=\'I have a question about Satanic Good Works.\'\u003e\n                \u003clabel class=\'radio-label globo-option\' for=\'60211-radio-I have a question about Satanic Good Works.-\'\u003eI have a question about Satanic Good Works.\u003c\/label\u003e\n            \u003c\/div\u003e\n        \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'60211-textarea\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eYour message here...\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'60211-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Your message here...\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;Hail Satan!\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;Hail Satan!\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[60211];



        window.Globo.FormBuilder.forms[60215] = { '60215': { 'header': { 'active': true, 'title': '', 'description': '\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Name', 'placeholder': 'Name*', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email*', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'text-2', 'type': 'text', 'label': 'Phone Number', 'placeholder': 'Phone Number*', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'text-3', 'type': 'text', 'label': 'City and State of Residence', 'placeholder': 'City and State of Residence*', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'select', 'type': 'select', 'label': 'I am contacting you about my interest in:', 'placeholder': ' Conducting an Invocation ', 'options': ' Conducting an Invocation \n Displays on public property  \n School-related religious representation \n Other\n', 'defaultOption': '', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'checkbox', 'type': 'checkbox', 'label': 'Checkbox', 'options': 'I affirm that I am directly interested in pursuing avenues for Satanic representation in the limited public forum.', 'defaultOptions': '', 'description': '', 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'paragraph', 'type': 'paragraph', 'text': '\u003cp\u003eBriefly describe your opportunity for Satanic representation in the public forum. Include information such as preexisting religious representation as well as any history or knowledge that you think we should know to understand your specific situation and subsequent goal.*\u003c\/p\u003e', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'checkbox': false }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Message', 'placeholder': 'Message', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'checkbox': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'submitFullWidth': false, 'submitAlignment': 'center' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '1030', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;Hail Satan!\u003c\/h4\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'publish': { 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-60215\'\u003e\n\u003cstyle\u003e\n.globo-form-id-60215 .globo-form-app{\n    max-width: 1030px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-60215 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-60215 .globo-form-app .globo-description,\n.globo-form-id-60215 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-60215 .globo-form-app .globo-label,\n.globo-form-id-60215 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-60215 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-60215 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-60215 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-60215 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-60215 .globo-form-app .footer{\n    text-align:center;\n}\n.globo-form-id-60215 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-60215 .globo-form-app .footer button.submit,\n.globo-form-id-60215 .globo-form-app .footer button.checkout,\n.globo-form-id-60215 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-60215 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-60215 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-60215 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-60215 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-60215 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-60215 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60215 .globo-form-app .step.-completed .step__number,\n.globo-form-id-60215 .globo-form-app .line.-progress,\n.globo-form-id-60215 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60215 .globo-form-app .checkmark__check,\n.globo-form-id-60215 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-60215 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-60215 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-60215 .flatpickr-day.selected, \n.globo-form-id-60215 .flatpickr-day.startRange, \n.globo-form-id-60215 .flatpickr-day.endRange, \n.globo-form-id-60215 .flatpickr-day.selected.inRange, \n.globo-form-id-60215 .flatpickr-day.startRange.inRange, \n.globo-form-id-60215 .flatpickr-day.endRange.inRange, \n.globo-form-id-60215 .flatpickr-day.selected:focus, \n.globo-form-id-60215 .flatpickr-day.startRange:focus, \n.globo-form-id-60215 .flatpickr-day.endRange:focus, \n.globo-form-id-60215 .flatpickr-day.selected:hover, \n.globo-form-id-60215 .flatpickr-day.startRange:hover, \n.globo-form-id-60215 .flatpickr-day.endRange:hover, \n.globo-form-id-60215 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-60215 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-60215 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-60215 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-60215 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-60215 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-60215 .globo-paragraph,\n.globo-form-id-60215 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss  hidden \' onclick=\' Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/60215\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=60215\u003e\n        \n        \u003cdiv class=\'header\'\u003e\n            \u003ch3 class=\'title globo-heading\'\u003e\u003c\/h3\u003e\n            \n        \u003c\/div\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=60215\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'60215-text\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eName\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60215-text\' name=\'text\' placeholder=\'Name*\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'60215-email\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'60215-email\' name=\'email\' placeholder=\'Email*\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'60215-text-2\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003ePhone Number\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60215-text-2\' name=\'text-2\' placeholder=\'Phone Number*\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'60215-text-3\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eCity and State of Residence\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'60215-text-3\' name=\'text-3\' placeholder=\'City and State of Residence*\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\'\u003e\n    \u003clabel for=\'60215-select\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eI am contacting you about my interest in:\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cselect name=\'select\'  id=\'60215-select\' class=\'classic-input\' presence\u003e\n        \u003coption selected=\'selected\' value=\'\' disabled=\'disabled\'\u003e Conducting an Invocation \u003c\/option\u003e\n        \n        \u003coption value=\' Conducting an Invocation \' \u003e Conducting an Invocation \u003c\/option\u003e\n        \n        \u003coption value=\' Displays on public property  \' \u003e Displays on public property  \u003c\/option\u003e\n        \n        \u003coption value=\' School-related religious representation \' \u003e School-related religious representation \u003c\/option\u003e\n        \n        \u003coption value=\' Other\' \u003e Other\u003c\/option\u003e\n        \n        \u003coption value=\'\' selected=\'selected\'\u003e\u003c\/option\u003e\n        \n    \u003c\/select\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\',\'\u003e\n    \u003clegend class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eCheckbox\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/legend\u003e\n    \n    \n    \u003cul\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'60215-checkbox-I affirm that I am directly interested in pursuing avenues for Satanic representation in the limited public forum.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\' presence value=\'I affirm that I am directly interested in pursuing avenues for Satanic representation in the limited public forum.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'60215-checkbox-I affirm that I am directly interested in pursuing avenues for Satanic representation in the limited public forum.-\'\u003eI affirm that I am directly interested in pursuing avenues for Satanic representation in the limited public forum.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003cdiv class=\'globo-paragraph\'\u003e\u003cp\u003eBriefly describe your opportunity for Satanic representation in the public forum. Include information such as preexisting religious representation as well as any history or knowledge that you think we should know to understand your specific situation and subsequent goal.*\u003c\/p\u003e\u003c\/div\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'60215-textarea\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eMessage\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'60215-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Message\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;Hail Satan!\u003c\/h4\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;Hail Satan!\u003c\/h4\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[60215];



        window.Globo.FormBuilder.forms[61819] = { '61819': { 'header': { 'active': true, 'title': 'Shop Contact Form ', 'description': '\u003cp\u003ePlease give as much detail as possible!\u003c\/p\u003e' }, 'elements': [{ 'id': 'group', 'type': 'group', 'label': 'Basic info', 'description': '', 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'First Name', 'placeholder': 'First Name (required)', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'text-2', 'type': 'text', 'label': 'Last Name', 'placeholder': 'Last Name (required)', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email (required)', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'text-3', 'type': 'text', 'label': 'Order Number', 'placeholder': 'Order Number', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 50 }], 'add-elements': null }, { 'id': 'checkbox-5', 'type': 'checkbox', 'label': 'I have read the Return Policy and FAQ's and need further assistance', 'options': 'Yes, I have read everything and still need help.', 'defaultOptions': '', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'devider', 'type': 'devider', 'conditionalField': false, 'onlyShowIf': false, 'checkbox-5': false }, { 'id': 'checkbox', 'type': 'checkbox', 'label': 'Order Inquiries', 'options': 'I need to add or change the name on my Membership order\nI received the wrong item\nI want an update on my order\nI want to check if my order went through\nI want to request a return label\nSomething else', 'defaultOptions': '', 'description': '', 'required': false, 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'checkbox-5': false }, { 'id': 'checkbox-3', 'type': 'checkbox', 'label': 'Shipping \u0026 Delivery Inquiries', 'options': 'My order arrived damaged (photos required)\nMy order shipped but I didn't receive it\nMy order was returned to sender\nSomething else', 'defaultOptions': '', 'description': '', 'required': false, 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'checkbox-5': false, 'checkbox': false }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Order Inquiry - Wrong item received', 'placeholder': 'Please describe the issue here.', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox', 'checkbox-5': 'I received the wrong item', 'checkbox': 'I received the wrong item', 'checkbox-3': 'I received the wrong item' }, { 'id': 'textarea-4', 'type': 'textarea', 'label': 'Order Inquiry - Return label ', 'placeholder': 'Check our Return Policy to make sure your item is eligible. Which item(s) do you want to return?', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox', 'checkbox-5': 'I want to request a return label', 'checkbox': 'I want to request a return label', 'checkbox-3': 'I want to request a return label' }, { 'id': 'textarea-5', 'type': 'textarea', 'label': 'Order Inquiry - Something else ', 'placeholder': 'Type your question here.', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox', 'checkbox-5': 'Something else', 'checkbox': 'Something else', 'checkbox-3': 'Something else' }, { 'id': 'file', 'type': 'file', 'label': 'Damaged Order Photos', 'button-text': 'Choose file', 'placeholder': '', 'allowed-multiple': true, 'allowed-extensions': ['jpg', 'jpeg', 'png', 'pdf'], 'description': 'Photos required of product and shipping packaging for return or refund.', 'uploadPending': 'File is uploading. Please wait a second...', 'uploadSuccess': 'File uploaded successfully', 'required': true, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox-3', 'checkbox-5': 'My order arrived damaged (photos required)', 'checkbox': 'My order arrived damaged (photos required)', 'checkbox-3': 'My order arrived damaged (photos required)' }, { 'id': 'textarea-6', 'type': 'textarea', 'label': 'Delivery Inquiry - Damaged ', 'placeholder': 'Describe the issue here.', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox-3', 'checkbox-5': 'My order arrived damaged (photos required)', 'checkbox': 'My order arrived damaged (photos required)', 'checkbox-3': 'My order arrived damaged (photos required)' }, { 'id': 'textarea-7', 'type': 'textarea', 'label': 'Shipping \u0026 Delivery Inquiry - Something else', 'placeholder': 'Type your question here.', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox-3', 'checkbox-5': 'Something else', 'checkbox': 'Something else', 'checkbox-3': 'Something else' }, { 'id': 'textarea-9', 'type': 'textarea', 'label': 'Shipping Inquiry - Package not received', 'placeholder': 'First: contact USPS with the tracking number provided in your shipping confirmation. Type any additional questions here.', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox-3', 'checkbox-5': 'My order shipped but I didn't receive it', 'checkbox': 'My order shipped but I didn't receive it', 'checkbox-3': 'My order shipped but I didn't receive it' }, { 'id': 'textarea-10', 'type': 'textarea', 'label': 'Shipping Inquiry - Returned to sender', 'placeholder': 'Check our Return Policy on this. Type any additional questions here.', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox-3', 'checkbox-5': 'My order was returned to sender', 'checkbox': 'My order was returned to sender', 'checkbox-3': 'My order was returned to sender' }, { 'id': 'textarea-11', 'type': 'textarea', 'label': 'Order Inquiry - Membership name', 'placeholder': 'Add desired name here. Changes are not guaranteed if order has already gone into production.', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100, 'conditionalField': true, 'onlyShowIf': 'checkbox', 'checkbox-5': 'I need to add or change the name on my Membership order', 'checkbox': 'I need to add or change the name on my Membership order', 'checkbox-3': 'I need to add or change the name on my Membership order' }], 'add-elements': null, 'footer': { 'description': '\u003cp class=\'ql-align-center\'\u003e\u003cbr\u003e\u003c\/p\u003e', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'submitFullWidth': false, 'submitAlignment': 'center' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'boxed', 'width': '1000', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': true, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'publish': { 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form boxed-form globo-form-id-61819\'\u003e\n\u003cstyle\u003e\n.globo-form-id-61819 .globo-form-app{\n    max-width: 1000px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-61819 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-61819 .globo-form-app .globo-description,\n.globo-form-id-61819 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-61819 .globo-form-app .globo-label,\n.globo-form-id-61819 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-61819 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-61819 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-61819 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-61819 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-61819 .globo-form-app .footer{\n    text-align:center;\n}\n.globo-form-id-61819 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-61819 .globo-form-app .footer button.submit,\n.globo-form-id-61819 .globo-form-app .footer button.checkout,\n.globo-form-id-61819 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-61819 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-61819 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-61819 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-61819 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-61819 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-61819 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-61819 .globo-form-app .step.-completed .step__number,\n.globo-form-id-61819 .globo-form-app .line.-progress,\n.globo-form-id-61819 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-61819 .globo-form-app .checkmark__check,\n.globo-form-id-61819 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-61819 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-61819 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-61819 .flatpickr-day.selected, \n.globo-form-id-61819 .flatpickr-day.startRange, \n.globo-form-id-61819 .flatpickr-day.endRange, \n.globo-form-id-61819 .flatpickr-day.selected.inRange, \n.globo-form-id-61819 .flatpickr-day.startRange.inRange, \n.globo-form-id-61819 .flatpickr-day.endRange.inRange, \n.globo-form-id-61819 .flatpickr-day.selected:focus, \n.globo-form-id-61819 .flatpickr-day.startRange:focus, \n.globo-form-id-61819 .flatpickr-day.endRange:focus, \n.globo-form-id-61819 .flatpickr-day.selected:hover, \n.globo-form-id-61819 .flatpickr-day.startRange:hover, \n.globo-form-id-61819 .flatpickr-day.endRange:hover, \n.globo-form-id-61819 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-61819 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-61819 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-61819 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-61819 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-61819 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-61819 .globo-paragraph,\n.globo-form-id-61819 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app boxed-layout\'\u003e\n    \u003cdiv class=\'header dismiss  hidden \' onclick=\' Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/61819\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=61819\u003e\n        \n        \u003cdiv class=\'header\'\u003e\n            \u003ch3 class=\'title globo-heading\'\u003eShop Contact Form \u003c\/h3\u003e\n            \n            \u003cdiv class=\'description globo-description\'\u003e\u003cp\u003ePlease give as much detail as possible!\u003c\/p\u003e\u003c\/div\u003e\n            \n        \u003c\/div\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=61819\u003e\n                \n                    \n                        \n                        \n                            \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'61819-text\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eFirst Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'61819-text\' name=\'text\' placeholder=\'First Name (required)\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                        \n                            \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'61819-text-2\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eLast Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'61819-text-2\' name=\'text-2\' placeholder=\'Last Name (required)\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                        \n                            \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'61819-email\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'61819-email\' name=\'email\' placeholder=\'Email (required)\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                        \n                            \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'61819-text-3\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eOrder Number\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'61819-text-3\' name=\'text-3\' placeholder=\'Order Number\'   \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                        \n                        \n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\',\'\u003e\n    \u003clegend class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eI have read the Return Policy and FAQ's and need further assistance\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/legend\u003e\n    \n    \n    \u003cul\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-5-Yes, I have read everything and still need help.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-5[]\' presence value=\'Yes, I have read everything and still need help.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-5-Yes, I have read everything and still need help.-\'\u003eYes, I have read everything and still need help.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  \u003e\n    \u003chr\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\'  data-default-value=\',\'\u003e\n    \u003clegend class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eOrder Inquiries\u003c\/span\u003e\u003c\/legend\u003e\n    \n    \n    \u003cul\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-I need to add or change the name on my Membership order-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I need to add or change the name on my Membership order\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-I need to add or change the name on my Membership order-\'\u003eI need to add or change the name on my Membership order\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-I received the wrong item-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I received the wrong item\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-I received the wrong item-\'\u003eI received the wrong item\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-I want an update on my order-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I want an update on my order\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-I want an update on my order-\'\u003eI want an update on my order\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-I want to check if my order went through-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I want to check if my order went through\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-I want to check if my order went through-\'\u003eI want to check if my order went through\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-I want to request a return label-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I want to request a return label\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-I want to request a return label-\'\u003eI want to request a return label\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-Something else-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'Something else\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-Something else-\'\u003eSomething else\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\'  data-default-value=\',\'\u003e\n    \u003clegend class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eShipping \u0026 Delivery Inquiries\u003c\/span\u003e\u003c\/legend\u003e\n    \n    \n    \u003cul\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-3-My order arrived damaged (photos required)-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-3[]\'  value=\'My order arrived damaged (photos required)\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-3-My order arrived damaged (photos required)-\'\u003eMy order arrived damaged (photos required)\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-3-My order shipped but I didn't receive it-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-3[]\'  value=\'My order shipped but I didn't receive it\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-3-My order shipped but I didn't receive it-\'\u003eMy order shipped but I didn't receive it\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-3-My order was returned to sender-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-3[]\'  value=\'My order was returned to sender\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-3-My order was returned to sender-\'\u003eMy order was returned to sender\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'61819-checkbox-3-Something else-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox-3[]\'  value=\'Something else\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'61819-checkbox-3-Something else-\'\u003eSomething else\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox' data-connected-value='I received the wrong item'\u003e\n    \u003clabel for=\'61819-textarea\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eOrder Inquiry - Wrong item received\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'61819-textarea\' disabled='disabled' data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Please describe the issue here.\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox' data-connected-value='I want to request a return label'\u003e\n    \u003clabel for=\'61819-textarea-4\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eOrder Inquiry - Return label \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'61819-textarea-4\' disabled='disabled' data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea-4\' placeholder=\'Check our Return Policy to make sure your item is eligible. Which item(s) do you want to return?\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox' data-connected-value='Something else'\u003e\n    \u003clabel for=\'61819-textarea-5\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eOrder Inquiry - Something else \u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'61819-textarea-5\' disabled='disabled' data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea-5\' placeholder=\'Type your question here.\'   \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox-3' data-connected-value='My order arrived damaged (photos required)'\u003e\n    \u003clabel for=\'61819-file\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eDamaged Order Photos\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'file\' disabled='disabled' data-type=\'file\' class=\'classic-input\' id=\'61819-file\'  multiple name=\'file[]\' \n        placeholder=\'\' presence data-allowed-extensions=\'jpg,jpeg,png,pdf\'\u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003ePhotos required of product and shipping packaging for return or refund.\u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox-3' data-connected-value='My order arrived damaged (photos required)'\u003e\n    \u003clabel for=\'61819-textarea-6\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eDelivery Inquiry - Damaged \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'61819-textarea-6\' disabled='disabled' data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea-6\' placeholder=\'Describe the issue here.\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox-3' data-connected-value='Something else'\u003e\n    \u003clabel for=\'61819-textarea-7\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eShipping \u0026 Delivery Inquiry - Something else\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'61819-textarea-7\' disabled='disabled' data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea-7\' placeholder=\'Type your question here.\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox-3' data-connected-value='My order shipped but I didn\u0026#039;t receive it'\u003e\n    \u003clabel for=\'61819-textarea-9\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eShipping Inquiry - Package not received\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'61819-textarea-9\' disabled='disabled' data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea-9\' placeholder=\'First: contact USPS with the tracking number provided in your shipping confirmation. Type any additional questions here.\'   \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox-3' data-connected-value='My order was returned to sender'\u003e\n    \u003clabel for=\'61819-textarea-10\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eShipping Inquiry - Returned to sender\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'61819-textarea-10\' disabled='disabled' data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea-10\' placeholder=\'Check our Return Policy on this. Type any additional questions here.\'   \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column conditional-field\'  data-connected-id='checkbox' data-connected-value='I need to add or change the name on my Membership order'\u003e\n    \u003clabel for=\'61819-textarea-11\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eOrder Inquiry - Membership name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'61819-textarea-11\' disabled='disabled' data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea-11\' placeholder=\'Add desired name here. Changes are not guaranteed if order has already gone into production.\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \u003cdiv class=\'description globo-description\'\u003e\u003cp class=\'ql-align-center\'\u003e\u003cbr\u003e\u003c\/p\u003e\u003c\/div\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[61819];



        window.Globo.FormBuilder.forms[70373] = { '70373': { 'header': { 'active': false, 'title': 'Request for Ordained Minister of Satan', 'description': '\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Your Name', 'placeholder': 'Your Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'select', 'type': 'select', 'label': 'Type of Ritual', 'placeholder': 'Type of Ritual', 'options': 'Wedding\nPersonal Ritual (e.g. Unbaptism)\nFuneral or Memorial Service', 'defaultOption': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'text-2', 'type': 'text', 'label': 'Ceremony Date', 'placeholder': 'Ceremony Date', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'text-3', 'type': 'text', 'label': 'Ceremony Location', 'placeholder': 'Ceremony Location', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Description of Ceremony', 'placeholder': 'Description of your ceremony.', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit the Request', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': true, 'submitAlignment': 'left' }, 'mail': { 'admin': null, 'customer': { 'enable': true, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': 600, 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyoemail': '', 'first_name': '', 'last_name': '', 'title': '', 'organization': '', 'phone_number': '', 'address1': '', 'address2': '', 'city': '', 'region': '', 'zip': '', 'country': '', 'latitude': '', 'longitude': '' } }, 'zapier': { 'enable': false, 'webhookUrl': '' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': '', 'firstName': '', 'lastName': '', 'status': '', 'country': '', 'state': '', 'city': '', 'phone': '', 'postalCode': '', 'gender': '', 'birthdate': '', 'tags': '', 'customProperties1': '', 'customProperties2': '', 'customProperties3': '', 'customProperties4': '', 'customProperties5': '' } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': '', 'name': '', 'gender': '', 'birthdate': '', 'company': '', 'city': '', 'state': '', 'street': '', 'postal_code': '', 'country': '', 'phone': '', 'fax': '', 'comment': '', 'ref': '', 'url': '', 'tags': '', 'dayOfCycle': '', 'scoring': '' } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'activecampaign': { 'loading': '', 'enable': false, 'list': [], 'integrationElements': [] }, 'googleCalendar': { 'loading': '', 'enable': false, 'list': '', 'integrationElements': { 'starttime': '', 'endtime': '', 'summary': '', 'location': '', 'description': '', 'attendees': '' } }, 'googleSheet': { 'loading': '', 'enable': false, 'spreadsheetdestination': '', 'listFields': ['select'], 'submissionIp': false } }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href=\'\/account\/login\' title=\'login\'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'70373\'\u003e\u003c\/div\u003e', 'shortCode': '{formbuilder:70373}', 'popup': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'70373\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'70373\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': '15824261', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-70373\'\u003e\n\u003cstyle\u003e\n.globo-form-id-70373 .globo-form-app{\n    max-width: 600px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-70373 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-70373 .globo-form-app .globo-description,\n.globo-form-id-70373 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-70373 .globo-form-app .globo-label,\n.globo-form-id-70373 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-70373 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-70373 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-70373 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-70373 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-70373 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-70373 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-70373 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n        width:100%;\n    \n}\n.globo-form-id-70373 .globo-form-app .footer button.submit,\n.globo-form-id-70373 .globo-form-app .footer button.checkout,\n.globo-form-id-70373 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-70373 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-70373 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-70373 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-70373 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-70373 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-70373 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-70373 .globo-form-app .step.-completed .step__number,\n.globo-form-id-70373 .globo-form-app .line.-progress,\n.globo-form-id-70373 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-70373 .globo-form-app .checkmark__check,\n.globo-form-id-70373 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-70373 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-70373 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-70373 .flatpickr-day.selected, \n.globo-form-id-70373 .flatpickr-day.startRange, \n.globo-form-id-70373 .flatpickr-day.endRange, \n.globo-form-id-70373 .flatpickr-day.selected.inRange, \n.globo-form-id-70373 .flatpickr-day.startRange.inRange, \n.globo-form-id-70373 .flatpickr-day.endRange.inRange, \n.globo-form-id-70373 .flatpickr-day.selected:focus, \n.globo-form-id-70373 .flatpickr-day.startRange:focus, \n.globo-form-id-70373 .flatpickr-day.endRange:focus, \n.globo-form-id-70373 .flatpickr-day.selected:hover, \n.globo-form-id-70373 .flatpickr-day.startRange:hover, \n.globo-form-id-70373 .flatpickr-day.endRange:hover, \n.globo-form-id-70373 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-70373 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-70373 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-70373 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-70373 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-70373 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-70373 .globo-paragraph,\n.globo-form-id-70373 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/70373\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=70373\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=70373\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'70373-text\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Your Name\'\u003eYour Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'70373-text\' name=\'text\' placeholder=\'Your Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'70373-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'70373-email\' name=\'email\' placeholder=\'Email\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\'\u003e\n    \u003clabel for=\'70373-select\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Type of Ritual\'\u003eType of Ritual\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cselect name=\'select\'  id=\'70373-select\' class=\'classic-input\' presence\u003e\n            \u003coption selected=\'selected\' value=\'\' disabled=\'disabled\'\u003eType of Ritual\u003c\/option\u003e\n            \n            \u003coption value=\'Wedding\' \u003eWedding\u003c\/option\u003e\n            \n            \u003coption value=\'Personal Ritual (e.g. Unbaptism)\' \u003ePersonal Ritual (e.g. Unbaptism)\u003c\/option\u003e\n            \n            \u003coption value=\'Funeral or Memorial Service\' \u003eFuneral or Memorial Service\u003c\/option\u003e\n            \n        \u003c\/select\u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'70373-text-2\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Ceremony Date\'\u003eCeremony Date\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'70373-text-2\' name=\'text-2\' placeholder=\'Ceremony Date\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'70373-text-3\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Ceremony Location\'\u003eCeremony Location\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'70373-text-3\' name=\'text-3\' placeholder=\'Ceremony Location\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'70373-textarea\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Description of Ceremony\'\u003eDescription of Ceremony\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'70373-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Description of your ceremony.\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit the Request\u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[70373];



        window.Globo.FormBuilder.forms[71992] = { '71992': { 'header': { 'active': false, 'title': 'Contact us', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Name', 'placeholder': 'Name*', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'text-2', 'type': 'text', 'label': 'City ', 'placeholder': 'City ', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 50 }, { 'id': 'text-3', 'type': 'text', 'label': 'State', 'placeholder': 'State', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 50 }, { 'id': 'select', 'type': 'select', 'label': 'I am interested in launching ASSC to my community', 'placeholder': '', 'options': 'I am interested in launching ASSC to my community\nI would like to Volunteer to help run ASSC\nMedia Inquiry and\/request for an interview\nOther', 'defaultOption': 'I am interested in launching ASSC to my community', 'description': '', 'required': false, 'columnWidth': 100 }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Message', 'placeholder': 'Additional Comments', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'submitFullWidth': false, 'submitAlignment': 'center' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': true, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '800', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'publish': { 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-71992\'\u003e\n\u003cstyle\u003e\n.globo-form-id-71992 .globo-form-app{\n    max-width: 800px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-71992 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-71992 .globo-form-app .globo-description,\n.globo-form-id-71992 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-71992 .globo-form-app .globo-label,\n.globo-form-id-71992 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-71992 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-71992 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-71992 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-71992 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-71992 .globo-form-app .footer{\n    text-align:center;\n}\n.globo-form-id-71992 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-71992 .globo-form-app .footer button.submit,\n.globo-form-id-71992 .globo-form-app .footer button.checkout,\n.globo-form-id-71992 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-71992 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-71992 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-71992 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-71992 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-71992 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-71992 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-71992 .globo-form-app .step.-completed .step__number,\n.globo-form-id-71992 .globo-form-app .line.-progress,\n.globo-form-id-71992 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-71992 .globo-form-app .checkmark__check,\n.globo-form-id-71992 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-71992 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-71992 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-71992 .flatpickr-day.selected, \n.globo-form-id-71992 .flatpickr-day.startRange, \n.globo-form-id-71992 .flatpickr-day.endRange, \n.globo-form-id-71992 .flatpickr-day.selected.inRange, \n.globo-form-id-71992 .flatpickr-day.startRange.inRange, \n.globo-form-id-71992 .flatpickr-day.endRange.inRange, \n.globo-form-id-71992 .flatpickr-day.selected:focus, \n.globo-form-id-71992 .flatpickr-day.startRange:focus, \n.globo-form-id-71992 .flatpickr-day.endRange:focus, \n.globo-form-id-71992 .flatpickr-day.selected:hover, \n.globo-form-id-71992 .flatpickr-day.startRange:hover, \n.globo-form-id-71992 .flatpickr-day.endRange:hover, \n.globo-form-id-71992 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-71992 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-71992 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-71992 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-71992 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-71992 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss  hidden \' onclick=\' Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/71992\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=71992\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=71992\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'71992-text\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eName\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'71992-text\' name=\'text\' placeholder=\'Name*\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'71992-email\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'71992-email\' name=\'email\' placeholder=\'Email\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'71992-text-2\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eCity \u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'71992-text-2\' name=\'text-2\' placeholder=\'City \'   \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'71992-text-3\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eState\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'71992-text-3\' name=\'text-3\' placeholder=\'State\'   \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'I am interested in launching ASSC to my community\'\u003e\n    \u003clabel for=\'71992-select\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eI am interested in launching ASSC to my community\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cselect name=\'select\'  id=\'71992-select\' class=\'classic-input\' \u003e\n        \u003coption  value=\'\' disabled=\'disabled\'\u003e\u003c\/option\u003e\n        \n        \u003coption value=\'I am interested in launching ASSC to my community\' selected=\'selected\'\u003eI am interested in launching ASSC to my community\u003c\/option\u003e\n        \n        \u003coption value=\'I would like to Volunteer to help run ASSC\' \u003eI would like to Volunteer to help run ASSC\u003c\/option\u003e\n        \n        \u003coption value=\'Media Inquiry and\/request for an interview\' \u003eMedia Inquiry and\/request for an interview\u003c\/option\u003e\n        \n        \u003coption value=\'Other\' \u003eOther\u003c\/option\u003e\n        \n    \u003c\/select\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'71992-textarea\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eMessage\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'71992-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Additional Comments\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[71992];



        window.Globo.FormBuilder.forms[72055] = { '72055': { 'header': { 'active': false, 'title': 'Contact us', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Name', 'placeholder': 'Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email*', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'phone', 'type': 'phone', 'label': 'Phone', 'placeholder': 'Phone Number', 'description': '', 'validatePhone': false, 'onlyShowFlag': false, 'defaultCountryCode': 'us', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'text-2', 'type': 'text', 'label': 'Country', 'placeholder': 'Country', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'text-3', 'type': 'text', 'label': 'State\/Prov\/Region', 'placeholder': 'State\/Prov\/Region', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': false, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': true, 'submitAlignment': 'left' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': 600, 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyoemail': '', 'first_name': '', 'last_name': '', 'title': '', 'organization': '', 'phone_number': '', 'address1': '', 'address2': '', 'city': '', 'region': '', 'zip': '', 'country': '', 'latitude': '', 'longitude': '' } }, 'zapier': { 'enable': true, 'webhookUrl': 'https:\/\/hooks.zapier.com\/hooks\/catch\/13479142\/b01itcl\/' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': '', 'firstName': '', 'lastName': '', 'status': '', 'country': '', 'state': '', 'city': '', 'phone': '', 'postalCode': '', 'gender': '', 'birthdate': '', 'tags': '', 'customProperties1': '', 'customProperties2': '', 'customProperties3': '', 'customProperties4': '', 'customProperties5': '' } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': '', 'name': '', 'gender': '', 'birthdate': '', 'company': '', 'city': '', 'state': '', 'street': '', 'postal_code': '', 'country': '', 'phone': '', 'fax': '', 'comment': '', 'ref': '', 'url': '', 'tags': '', 'dayOfCycle': '', 'scoring': '' } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'activecampaign': { 'loading': '', 'enable': false, 'list': [], 'integrationElements': [] }, 'googleCalendar': { 'loading': '', 'enable': false, 'list': '', 'integrationElements': { 'starttime': '', 'endtime': '', 'summary': '', 'location': '', 'description': '', 'attendees': '' } }, 'googleSheet': { 'loading': '', 'enable': false, 'spreadsheetdestination': '', 'listFields': [], 'submissionIp': false } }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href=\'\/account\/login\' title=\'login\'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'72055\'\u003e\u003c\/div\u003e', 'shortCode': '{formbuilder:72055}', 'popup': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'72055\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'72055\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-72055\'\u003e\n\u003cstyle\u003e\n.globo-form-id-72055 .globo-form-app{\n    max-width: 600px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-72055 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-72055 .globo-form-app .globo-description,\n.globo-form-id-72055 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-72055 .globo-form-app .globo-label,\n.globo-form-id-72055 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-72055 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-72055 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-72055 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-72055 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-72055 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-72055 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-72055 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n        width:100%;\n    \n}\n.globo-form-id-72055 .globo-form-app .footer button.submit,\n.globo-form-id-72055 .globo-form-app .footer button.checkout,\n.globo-form-id-72055 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-72055 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-72055 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-72055 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-72055 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-72055 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-72055 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-72055 .globo-form-app .step.-completed .step__number,\n.globo-form-id-72055 .globo-form-app .line.-progress,\n.globo-form-id-72055 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-72055 .globo-form-app .checkmark__check,\n.globo-form-id-72055 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-72055 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-72055 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-72055 .flatpickr-day.selected, \n.globo-form-id-72055 .flatpickr-day.startRange, \n.globo-form-id-72055 .flatpickr-day.endRange, \n.globo-form-id-72055 .flatpickr-day.selected.inRange, \n.globo-form-id-72055 .flatpickr-day.startRange.inRange, \n.globo-form-id-72055 .flatpickr-day.endRange.inRange, \n.globo-form-id-72055 .flatpickr-day.selected:focus, \n.globo-form-id-72055 .flatpickr-day.startRange:focus, \n.globo-form-id-72055 .flatpickr-day.endRange:focus, \n.globo-form-id-72055 .flatpickr-day.selected:hover, \n.globo-form-id-72055 .flatpickr-day.startRange:hover, \n.globo-form-id-72055 .flatpickr-day.endRange:hover, \n.globo-form-id-72055 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-72055 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-72055 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-72055 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-72055 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-72055 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-72055 .globo-paragraph,\n.globo-form-id-72055 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/72055\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=72055\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=72055\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'72055-text\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Name\'\u003eName\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'72055-text\' name=\'text\' placeholder=\'Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'72055-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'72055-email\' name=\'email\' placeholder=\'Email*\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'72055-phone\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Phone\'\u003ePhone\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'phone\' class=\'classic-input\' id=\'72055-phone\' name=\'phone\' placeholder=\'Phone Number\' presence    default-country-code=\'us\'\u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'72055-text-2\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Country\'\u003eCountry\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'72055-text-2\' name=\'text-2\' placeholder=\'Country\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'72055-text-3\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'State\/Prov\/Region\'\u003eState\/Prov\/Region\u003c\/span\u003e\u003cspan\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'72055-text-3\' name=\'text-3\' placeholder=\'State\/Prov\/Region\'   \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[72055];



        window.Globo.FormBuilder.forms[75803] = { '75803': { 'header': { 'active': true, 'title': '', 'description': '\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Name \/ Pseudonym', 'placeholder': 'Name \/ Pseudonym', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 100 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100 }, { 'id': 'text-2', 'type': 'text', 'label': 'CPC Location ', 'placeholder': 'CPC Location *', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'select', 'type': 'select', 'label': 'Hours Worked ', 'placeholder': 'Please select', 'options': '12 hrs\n16 hrs\n20 hrs\n24 hrs', 'defaultOption': '12 hrs', 'description': '', 'required': true, 'columnWidth': 50 }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'submitFullWidth': true, 'submitAlignment': 'left' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': 600, 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'publish': { 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-75803\'\u003e\n\u003cstyle\u003e\n.globo-form-id-75803 .globo-form-app{\n    max-width: 600px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-75803 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-75803 .globo-form-app .globo-description,\n.globo-form-id-75803 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-75803 .globo-form-app .globo-label,\n.globo-form-id-75803 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-75803 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-75803 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-75803 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-75803 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-75803 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-75803 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n        width:100%;\n    \n}\n.globo-form-id-75803 .globo-form-app .footer button.submit,\n.globo-form-id-75803 .globo-form-app .footer button.checkout,\n.globo-form-id-75803 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-75803 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-75803 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-75803 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-75803 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-75803 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-75803 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-75803 .globo-form-app .step.-completed .step__number,\n.globo-form-id-75803 .globo-form-app .line.-progress,\n.globo-form-id-75803 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-75803 .globo-form-app .checkmark__check,\n.globo-form-id-75803 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-75803 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-75803 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-75803 .flatpickr-day.selected, \n.globo-form-id-75803 .flatpickr-day.startRange, \n.globo-form-id-75803 .flatpickr-day.endRange, \n.globo-form-id-75803 .flatpickr-day.selected.inRange, \n.globo-form-id-75803 .flatpickr-day.startRange.inRange, \n.globo-form-id-75803 .flatpickr-day.endRange.inRange, \n.globo-form-id-75803 .flatpickr-day.selected:focus, \n.globo-form-id-75803 .flatpickr-day.startRange:focus, \n.globo-form-id-75803 .flatpickr-day.endRange:focus, \n.globo-form-id-75803 .flatpickr-day.selected:hover, \n.globo-form-id-75803 .flatpickr-day.startRange:hover, \n.globo-form-id-75803 .flatpickr-day.endRange:hover, \n.globo-form-id-75803 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-75803 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-75803 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-75803 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-75803 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-75803 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss  hidden \' onclick=\' Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/75803\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=75803\u003e\n        \n        \u003cdiv class=\'header\'\u003e\n            \u003ch3 class=\'title globo-heading\'\u003e\u003c\/h3\u003e\n            \n        \u003c\/div\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=75803\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'75803-text\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eName \/ Pseudonym\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'75803-text\' name=\'text\' placeholder=\'Name \/ Pseudonym\'   \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'75803-email\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'75803-email\' name=\'email\' placeholder=\'Email\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'75803-text-2\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eCPC Location \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'75803-text-2\' name=\'text-2\' placeholder=\'CPC Location *\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\'  data-default-value=\'12 hrs\'\u003e\n    \u003clabel for=\'75803-select\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eHours Worked \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cselect name=\'select\'  id=\'75803-select\' class=\'classic-input\' presence\u003e\n        \u003coption  value=\'\' disabled=\'disabled\'\u003ePlease select\u003c\/option\u003e\n        \n        \u003coption value=\'12 hrs\' selected=\'selected\'\u003e12 hrs\u003c\/option\u003e\n        \n        \u003coption value=\'16 hrs\' \u003e16 hrs\u003c\/option\u003e\n        \n        \u003coption value=\'20 hrs\' \u003e20 hrs\u003c\/option\u003e\n        \n        \u003coption value=\'24 hrs\' \u003e24 hrs\u003c\/option\u003e\n        \n    \u003c\/select\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[75803];



        window.Globo.FormBuilder.forms[75804] = { '75804': { 'header': { 'active': true, 'title': '', 'description': '\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Name \/ Pseudonym', 'placeholder': 'Name \/ Pseudonym', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100 }, { 'id': 'text-2', 'type': 'text', 'label': 'CPC Name \/ Location ', 'placeholder': 'CPC Name \/ Location *', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100 }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Your Story ', 'placeholder': 'Your Story *', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100 }, { 'id': 'file', 'type': 'file', 'label': 'File', 'button-text': 'Choose file', 'placeholder': '', 'allowed-multiple': true, 'allowed-extensions': ['jpg', 'jpeg', 'png'], 'description': '', 'uploadPending': 'File is uploading. Please wait a second...', 'uploadSuccess': 'File uploaded successfully', 'required': false, 'columnWidth': 100 }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'submitFullWidth': false, 'submitAlignment': 'left' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': false, 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': 600, 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'background': 'color', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'publish': { 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-75804\'\u003e\n\u003cstyle\u003e\n.globo-form-id-75804 .globo-form-app{\n    max-width: 600px;\n    width: -webkit-fill-available;\n    \n    background-color: #FFF;\n    \n    \n}\n\n.globo-form-id-75804 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-75804 .globo-form-app .globo-description,\n.globo-form-id-75804 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-75804 .globo-form-app .globo-label,\n.globo-form-id-75804 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-75804 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-75804 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-75804 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-75804 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-75804 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-75804 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-75804 .globo-form-app .footer button.submit,\n.globo-form-id-75804 .globo-form-app .footer button.checkout,\n.globo-form-id-75804 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-75804 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-75804 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-75804 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-75804 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-75804 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-75804 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-75804 .globo-form-app .step.-completed .step__number,\n.globo-form-id-75804 .globo-form-app .line.-progress,\n.globo-form-id-75804 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-75804 .globo-form-app .checkmark__check,\n.globo-form-id-75804 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-75804 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-75804 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-75804 .flatpickr-day.selected, \n.globo-form-id-75804 .flatpickr-day.startRange, \n.globo-form-id-75804 .flatpickr-day.endRange, \n.globo-form-id-75804 .flatpickr-day.selected.inRange, \n.globo-form-id-75804 .flatpickr-day.startRange.inRange, \n.globo-form-id-75804 .flatpickr-day.endRange.inRange, \n.globo-form-id-75804 .flatpickr-day.selected:focus, \n.globo-form-id-75804 .flatpickr-day.startRange:focus, \n.globo-form-id-75804 .flatpickr-day.endRange:focus, \n.globo-form-id-75804 .flatpickr-day.selected:hover, \n.globo-form-id-75804 .flatpickr-day.startRange:hover, \n.globo-form-id-75804 .flatpickr-day.endRange:hover, \n.globo-form-id-75804 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-75804 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-75804 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-75804 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-75804 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-75804 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss  hidden \' onclick=\' Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/75804\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=75804\u003e\n        \n        \u003cdiv class=\'header\'\u003e\n            \u003ch3 class=\'title globo-heading\'\u003e\u003c\/h3\u003e\n            \n        \u003c\/div\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=75804\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'75804-text\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eName \/ Pseudonym\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'75804-text\' name=\'text\' placeholder=\'Name \/ Pseudonym\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'75804-text-2\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eCPC Name \/ Location \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'75804-text-2\' name=\'text-2\' placeholder=\'CPC Name \/ Location *\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'75804-textarea\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eYour Story \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'75804-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Your Story *\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'75804-file\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eFile\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'file\'  data-type=\'file\' class=\'classic-input\' id=\'75804-file\'  multiple name=\'file[]\' \n        placeholder=\'\'  data-allowed-extensions=\'jpg,jpeg,png\'\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[75804];



        window.Globo.FormBuilder.forms[78157] = { '78157': { 'header': { 'active': false, 'title': 'Contact us', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'select', 'type': 'select', 'label': 'Social Network', 'placeholder': 'Select one', 'options': 'Facebook\nInstagram\nTwitter\nYoutube\nOther', 'defaultOption': '', 'description': '', 'required': true, 'columnWidth': 100 }, { 'id': 'url', 'type': 'url', 'label': 'Link to Account', 'placeholder': 'https:\/\/', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'textarea', 'type': 'textarea', 'label': '', 'placeholder': 'Details...', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'file', 'type': 'file', 'label': '', 'button-text': 'Choose file', 'placeholder': '', 'allowed-multiple': true, 'allowed-extensions': ['jpg', 'jpeg', 'png'], 'description': '*Fake accounts should also be reported to the social networks directly.', 'uploadPending': 'File is uploading. Please wait a second...', 'uploadSuccess': 'File uploaded successfully', 'required': false, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'submitFullWidth': false, 'submitAlignment': 'left' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': false, 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '800', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'publish': { 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'78157\'\u003e\u003c\/div\u003e', 'shortCode': '{formbuilder:78157}', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'78157\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'78157\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-78157\'\u003e\n\u003cstyle\u003e\n.globo-form-id-78157 .globo-form-app{\n    max-width: 800px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-78157 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-78157 .globo-form-app .globo-description,\n.globo-form-id-78157 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-78157 .globo-form-app .globo-label,\n.globo-form-id-78157 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-78157 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-78157 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-78157 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-78157 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-78157 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-78157 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-78157 .globo-form-app .footer button.submit,\n.globo-form-id-78157 .globo-form-app .footer button.checkout,\n.globo-form-id-78157 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-78157 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-78157 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-78157 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-78157 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-78157 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-78157 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-78157 .globo-form-app .step.-completed .step__number,\n.globo-form-id-78157 .globo-form-app .line.-progress,\n.globo-form-id-78157 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-78157 .globo-form-app .checkmark__check,\n.globo-form-id-78157 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-78157 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-78157 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-78157 .flatpickr-day.selected, \n.globo-form-id-78157 .flatpickr-day.startRange, \n.globo-form-id-78157 .flatpickr-day.endRange, \n.globo-form-id-78157 .flatpickr-day.selected.inRange, \n.globo-form-id-78157 .flatpickr-day.startRange.inRange, \n.globo-form-id-78157 .flatpickr-day.endRange.inRange, \n.globo-form-id-78157 .flatpickr-day.selected:focus, \n.globo-form-id-78157 .flatpickr-day.startRange:focus, \n.globo-form-id-78157 .flatpickr-day.endRange:focus, \n.globo-form-id-78157 .flatpickr-day.selected:hover, \n.globo-form-id-78157 .flatpickr-day.startRange:hover, \n.globo-form-id-78157 .flatpickr-day.endRange:hover, \n.globo-form-id-78157 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-78157 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-78157 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-78157 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-78157 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-78157 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-78157 .globo-paragraph,\n.globo-form-id-78157 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss  hidden \' onclick=\' Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/78157\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=78157\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=78157\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\'\u003e\n    \u003clabel for=\'78157-select\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eSocial Network\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cselect name=\'select\'  id=\'78157-select\' class=\'classic-input\' presence\u003e\n        \u003coption selected=\'selected\' value=\'\' disabled=\'disabled\'\u003eSelect one\u003c\/option\u003e\n        \n        \u003coption value=\'Facebook\' \u003eFacebook\u003c\/option\u003e\n        \n        \u003coption value=\'Instagram\' \u003eInstagram\u003c\/option\u003e\n        \n        \u003coption value=\'Twitter\' \u003eTwitter\u003c\/option\u003e\n        \n        \u003coption value=\'Youtube\' \u003eYoutube\u003c\/option\u003e\n        \n        \u003coption value=\'Other\' \u003eOther\u003c\/option\u003e\n        \n    \u003c\/select\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'78157-url\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eLink to Account\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'url\' class=\'classic-input\' id=\'78157-url\' name=\'url\' placeholder=\'https:\/\/\'   \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'78157-textarea\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'78157-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Details...\'   \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'78157-file\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'file\'  data-type=\'file\' class=\'classic-input\' id=\'78157-file\'  multiple name=\'file[]\' \n        placeholder=\'\'  data-allowed-extensions=\'jpg,jpeg,png\'\u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003e*Fake accounts should also be reported to the social networks directly.\u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[78157];



        window.Globo.FormBuilder.forms[79014] = { '79014': { 'header': { 'active': true, 'title': 'Contact us', 'description': 'Leave your message and we'll get back to you shortly.' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Your Name', 'placeholder': 'Your Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email Address', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 50 }, { 'id': 'text-2', 'type': 'text', 'label': 'Media Organization', 'placeholder': 'Media Organization', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 100 }, { 'id': 'text-3', 'type': 'text', 'label': 'Subject', 'placeholder': 'Subject', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': false, 'columnWidth': 100 }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Message', 'placeholder': 'Message', 'description': '', 'limitCharacters': false, 'characters': 100, 'required': true, 'columnWidth': 100 }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'submitFullWidth': false, 'submitAlignment': 'left' }, 'contactUs': { 'hideWaterMark': false, 'btnContact': 'Contact us' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '1000', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': [] }, 'zapier': { 'enable': false, 'webhookUrl': '' } }, 'publish': { 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-79014\'\u003e\n\u003cstyle\u003e\n.globo-form-id-79014 .globo-form-app{\n    max-width: 1000px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-79014 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-79014 .globo-form-app .globo-description,\n.globo-form-id-79014 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-79014 .globo-form-app .globo-label,\n.globo-form-id-79014 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-79014 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000\n}\n.globo-form-id-79014 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-79014 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-79014 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-79014 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-79014 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-79014 .globo-form-app .footer button.submit,\n.globo-form-id-79014 .globo-form-app .footer button.checkout,\n.globo-form-id-79014 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-79014 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-79014 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-79014 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-79014 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-79014 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-79014 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-79014 .globo-form-app .step.-completed .step__number,\n.globo-form-id-79014 .globo-form-app .line.-progress,\n.globo-form-id-79014 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-79014 .globo-form-app .checkmark__check,\n.globo-form-id-79014 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-79014 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-79014 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-79014 .flatpickr-day.selected, \n.globo-form-id-79014 .flatpickr-day.startRange, \n.globo-form-id-79014 .flatpickr-day.endRange, \n.globo-form-id-79014 .flatpickr-day.selected.inRange, \n.globo-form-id-79014 .flatpickr-day.startRange.inRange, \n.globo-form-id-79014 .flatpickr-day.endRange.inRange, \n.globo-form-id-79014 .flatpickr-day.selected:focus, \n.globo-form-id-79014 .flatpickr-day.startRange:focus, \n.globo-form-id-79014 .flatpickr-day.endRange:focus, \n.globo-form-id-79014 .flatpickr-day.selected:hover, \n.globo-form-id-79014 .flatpickr-day.startRange:hover, \n.globo-form-id-79014 .flatpickr-day.endRange:hover, \n.globo-form-id-79014 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-79014 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-79014 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-79014 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-79014 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-79014 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-79014 .globo-paragraph,\n.globo-form-id-79014 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss  hidden \' onclick=\' Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/79014\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=79014\u003e\n        \n        \u003cdiv class=\'header\'\u003e\n            \u003ch3 class=\'title globo-heading\'\u003eContact us\u003c\/h3\u003e\n            \n            \u003cdiv class=\'description globo-description\'\u003eLeave your message and we'll get back to you shortly.\u003c\/div\u003e\n            \n        \u003c\/div\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=79014\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'79014-text\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eYour Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'79014-text\' name=\'text\' placeholder=\'Your Name\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'79014-email\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'79014-email\' name=\'email\' placeholder=\'Email Address\' presence  \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'79014-text-2\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eMedia Organization\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'79014-text-2\' name=\'text-2\' placeholder=\'Media Organization\'   \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'79014-text-3\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eSubject\u003c\/span\u003e\u003c\/label\u003e\n    \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'79014-text-3\' name=\'text-3\' placeholder=\'Subject\'   \u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'79014-textarea\' class=\'classic-label globo-label\'\u003e\u003cspan class=\'label-content\'\u003eMessage\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'79014-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Message\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit\u003c\/button\u003e\n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHail Satan!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[79014];



        window.Globo.FormBuilder.forms[85405] = { '85405': { 'header': { 'active': false, 'title': 'Contact us', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Real Name', 'placeholder': 'Real Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'text-2', 'type': 'text', 'label': 'Pseudonym', 'placeholder': 'Pseudonym (not required)', 'description': '(Feel free to construct a new first and last name to protect your identity if your works are posted online.) ', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': false, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'datetime', 'type': 'datetime', 'label': 'Date of Birth ', 'placeholder': 'Date of Birth ', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'format': 'date', 'otherLang': false, 'localization': 'es', 'date-format': 'd-m-Y', 'time-format': '12h', 'isLimitDate': false, 'limitDateType': 'disablingDates', 'limitDateSpecificEnabled': false, 'limitDateSpecificDates': '', 'limitDateRangeEnabled': false, 'limitDateRangeDates': '', 'limitDateDOWEnabled': false, 'limitDateDOWDates': ['saturday', 'sunday'], 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'text-3', 'type': 'text', 'label': 'Address (House Number\/Apt.\/Ste. and Street)', 'placeholder': 'Address (House Number\/Apt.\/Ste. and Street)', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'text-4', 'type': 'text', 'label': 'City', 'placeholder': 'City', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 33.33 }, { 'id': 'select', 'type': 'select', 'label': 'State', 'placeholder': 'State', 'options': 'AL\nAK\nAZ\nAR\nCA\nCO\nCT\nDE\nFL\nGA\nHI\nID\nIL\nIN\nIA\nKS\nKY\nLA\nME\nMD\nMA\nMI\nMN\nMS\nMO\nMT\nNE\nNV\nNH\nNJ\nNM\nNY\nNC\nND\nOH\nOK\nOR\nPA\nRI\nSC\nSD\nTN\nTX\nUT\nVT\nVA\nWA\nWV\nWI\nWY', 'defaultOption': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 33.33 }, { 'id': 'number', 'type': 'number', 'label': 'ZIP', 'placeholder': 'ZIP', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 33.33, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'email', 'type': 'email', 'label': 'Email Address ', 'placeholder': 'Email Address ', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'email-2', 'type': 'email', 'label': 'Confirm Email Address ', 'placeholder': 'Confirm Email Address ', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'phone', 'type': 'phone', 'label': 'Phone Number ', 'placeholder': 'Phone Number ', 'description': '', 'validatePhone': false, 'onlyShowFlag': false, 'defaultCountryCode': 'us', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'select-2', 'type': 'select', 'label': 'Age Eligibility Category', 'placeholder': 'Age Eligibility Category', 'options': 'Ages 11 and Under\nAges 12-18\n2022 High School Grad\/GED\/Continuing Education', 'defaultOption': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false }, { 'id': 'heading', 'type': 'heading', 'heading': 'Submission Attachments', 'caption': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false }, { 'id': 'paragraph', 'type': 'paragraph', 'text': '\u003cp\u003ePlease upload your submission documents or other files by submitting a DropBox or Google Drive link. When uploading files, please title any attachments in the following format, choosing the sectional category in the formatting that is most appropriate for your submission: First and Last Name: E, MH, Grad\/HE; Written\/AV.\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eEnsure that your submission link is on a \u003cstrong\u003ePUBLIC SHARE\u003c\/strong\u003e setting so that anyone with the link may access the document. TST will not request permission to access your submission’s attachments if it does not initially allow access through this public share setting.\u003c\/p\u003e', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false }, { 'id': 'text-5', 'type': 'text', 'label': 'Add Your Submission Link Here', 'placeholder': 'Add Your Submission Link Here', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false }, { 'id': 'checkbox', 'type': 'checkbox', 'label': '', 'options': 'I accept the contractual agreement and legal disclaimers.\nI have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.\nMy submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.', 'defaultOptions': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': false, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false }, { 'id': 'text-6', 'type': 'text', 'label': 'Sign', 'placeholder': 'Sign', 'description': 'Parent\/Guardian Signature if Minor', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false, 'checkbox': false }, { 'id': 'datetime-2', 'type': 'datetime', 'label': 'Date', 'placeholder': 'Date', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'format': 'date', 'otherLang': false, 'localization': 'es', 'date-format': 'd-m-Y', 'time-format': '12h', 'isLimitDate': true, 'limitDateType': 'disablingDates', 'limitDateSpecificEnabled': false, 'limitDateSpecificDates': '', 'limitDateRangeEnabled': false, 'limitDateRangeDates': '', 'limitDateDOWEnabled': false, 'limitDateDOWDates': ['saturday', 'sunday'], 'inputIcon': '', 'columnWidth': 50, 'conditionalField': false, 'onlyShowIf': false, 'select': false, 'select-2': false, 'checkbox': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit Application', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': true, 'submitAlignment': 'left' }, 'mail': { 'admin': null, 'customer': { 'enable': true, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eScholarship\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we got your information.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '1000', 'style': 'flat', 'mainColor': 'rgba(119,36,10,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': 'rgba(102,102,102,1)', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false }, 'errorMessage': { 'required': 'Required', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid url', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit', 'fileNotAllowed': 'File not allowed', 'requiredCaptcha': 'Required captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003cp\u003eTHANKS FOR YOUR SUBMISSION!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eYour application has been received. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'sendEmailInvite': false, 'acceptsMarketing': false, 'integrationElements': [] }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'klaviyoemail': '', 'first_name': { 'val': '', 'option': '' }, 'last_name': { 'val': '', 'option': '' }, 'title': { 'val': '', 'option': '' }, 'organization': { 'val': '', 'option': '' }, 'phone_number': { 'val': '', 'option': '' }, 'address1': { 'val': '', 'option': '' }, 'address2': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'region': { 'val': '', 'option': '' }, 'zip': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'latitude': { 'val': '', 'option': '' }, 'longitude': { 'val': '', 'option': '' } } }, 'zapier': { 'enable': true, 'webhookUrl': 'https:\/\/hooks.zapier.com\/hooks\/catch\/2533543\/bg3oq4c\/' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'firstName': { 'val': '', 'option': '' }, 'lastName': { 'val': '', 'option': '' }, 'status': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'postalCode': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'customProperties1': { 'val': '', 'option': '' }, 'customProperties2': { 'val': '', 'option': '' }, 'customProperties3': { 'val': '', 'option': '' }, 'customProperties4': { 'val': '', 'option': '' }, 'customProperties5': { 'val': '', 'option': '' } } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'name': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'company': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'street': { 'val': '', 'option': '' }, 'postal_code': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'fax': { 'val': '', 'option': '' }, 'comment': { 'val': '', 'option': '' }, 'ref': { 'val': '', 'option': '' }, 'url': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'dayOfCycle': { 'val': '', 'option': '' }, 'scoring': { 'val': '', 'option': '' } } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'activecampaign': { 'loading': '', 'enable': false, 'list': [], 'integrationElements': [] }, 'googleCalendar': { 'loading': '', 'enable': false, 'list': '', 'integrationElements': { 'starttime': '', 'endtime': '', 'summary': '', 'location': '', 'description': '', 'attendees': '' } }, 'googleSheet': { 'loading': '', 'enable': false, 'spreadsheetdestination': '', 'listFields': [], 'submissionIp': false } }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href=\'\/account\/login\' title=\'login\'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'85405\'\u003e\u003c\/div\u003e', 'shortCode': '{formbuilder:85405}', 'popup': '\u003cbutton class=\'globo-formbuilder-open\' data-id=\'85405\'\u003eOpen form\u003c\/button\u003e', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'85405\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'85405\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': '15824261', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-85405\'\u003e\n\u003cstyle\u003e\n.globo-form-id-85405 .globo-form-app{\n    max-width: 1000px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-85405 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-85405 .globo-form-app .globo-description,\n.globo-form-id-85405 .globo-form-app .header .globo-description{\n    color: rgba(102,102,102,1)\n}\n.globo-form-id-85405 .globo-form-app .globo-label,\n.globo-form-id-85405 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-85405 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-85405 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-85405 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: rgba(102,102,102,1)\n}\n.globo-form-id-85405 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-85405 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-85405 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-85405 .globo-form-app .footer button{\n    border:1px solid rgba(119,36,10,1);\n    \n        width:100%;\n    \n}\n.globo-form-id-85405 .globo-form-app .footer button.submit,\n.globo-form-id-85405 .globo-form-app .footer button.checkout,\n.globo-form-id-85405 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(119,36,10,1);\n    color : #ffffff;\n}\n.globo-form-id-85405 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(119,36,10,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-85405 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(119,36,10,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-85405 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-85405 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(119,36,10,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-85405 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(119,36,10,1);\n    background: radial-gradient(rgba(119,36,10,1) 40%, #fff 45%);\n}\n.globo-form-id-85405 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(119,36,10,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(119,36,10,1);\n}\n.globo-form-id-85405 .globo-form-app .step.-completed .step__number,\n.globo-form-id-85405 .globo-form-app .line.-progress,\n.globo-form-id-85405 .globo-form-app .line.-start{\n    background-color: rgba(119,36,10,1);\n}\n.globo-form-id-85405 .globo-form-app .checkmark__check,\n.globo-form-id-85405 .globo-form-app .checkmark__circle{\n    stroke: rgba(119,36,10,1);\n}\n.globo-form-id-85405 .floating-button{\n    background-color: rgba(119,36,10,1);\n}\n.globo-form-id-85405 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(119,36,10,1);\n}\n.globo-form-id-85405 .flatpickr-day.selected, \n.globo-form-id-85405 .flatpickr-day.startRange, \n.globo-form-id-85405 .flatpickr-day.endRange, \n.globo-form-id-85405 .flatpickr-day.selected.inRange, \n.globo-form-id-85405 .flatpickr-day.startRange.inRange, \n.globo-form-id-85405 .flatpickr-day.endRange.inRange, \n.globo-form-id-85405 .flatpickr-day.selected:focus, \n.globo-form-id-85405 .flatpickr-day.startRange:focus, \n.globo-form-id-85405 .flatpickr-day.endRange:focus, \n.globo-form-id-85405 .flatpickr-day.selected:hover, \n.globo-form-id-85405 .flatpickr-day.startRange:hover, \n.globo-form-id-85405 .flatpickr-day.endRange:hover, \n.globo-form-id-85405 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-85405 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-85405 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-85405 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-85405 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-85405 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(119,36,10,1);\n    border-color: rgba(119,36,10,1);\n}\n.globo-form-id-85405 .globo-paragraph,\n.globo-form-id-85405 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/85405\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=85405\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=85405\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'85405-text\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Real Name\'\u003eReal Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'85405-text\' name=\'text\' placeholder=\'Real Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'85405-text-2\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Pseudonym\'\u003ePseudonym\u003c\/span\u003e\u003cspan\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'85405-text-2\' name=\'text-2\' placeholder=\'Pseudonym (not required)\'   \u003e\n    \u003c\/div\u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003e(Feel free to construct a new first and last name to protect your identity if your works are posted online.) \u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'85405-datetime\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Date of Birth \'\u003eDate of Birth \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput \n            type=\'text\' \n            autocomplete=\'off\'\n             \n            data-type=\'datetime\' \n            class=\'flat-input\' \n            id=\'85405-datetime\' \n            name=\'datetime\' \n            placeholder=\'Date of Birth \' \n            presence \n            data-format=\'date\' \n             \n            dataDateFormat=\'d-m-Y\' \n            dataTimeFormat=\'12h\' \n            \n        \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'85405-text-3\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Address (House Number\/Apt.\/Ste. and Street)\'\u003eAddress (House Number\/Apt.\/Ste. and Street)\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'85405-text-3\' name=\'text-3\' placeholder=\'Address (House Number\/Apt.\/Ste. and Street)\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\' \u003e\n    \u003clabel for=\'85405-text-4\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'City\'\u003eCity\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'85405-text-4\' name=\'text-4\' placeholder=\'City\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\'  data-default-value=\'\'\u003e\n    \u003clabel for=\'85405-select\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'State\'\u003eState\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cselect name=\'select\'  id=\'85405-select\' class=\'flat-input\' presence\u003e\n            \u003coption selected=\'selected\' value=\'\' disabled=\'disabled\'\u003eState\u003c\/option\u003e\n            \n            \u003coption value=\'AL\' \u003eAL\u003c\/option\u003e\n            \n            \u003coption value=\'AK\' \u003eAK\u003c\/option\u003e\n            \n            \u003coption value=\'AZ\' \u003eAZ\u003c\/option\u003e\n            \n            \u003coption value=\'AR\' \u003eAR\u003c\/option\u003e\n            \n            \u003coption value=\'CA\' \u003eCA\u003c\/option\u003e\n            \n            \u003coption value=\'CO\' \u003eCO\u003c\/option\u003e\n            \n            \u003coption value=\'CT\' \u003eCT\u003c\/option\u003e\n            \n            \u003coption value=\'DE\' \u003eDE\u003c\/option\u003e\n            \n            \u003coption value=\'FL\' \u003eFL\u003c\/option\u003e\n            \n            \u003coption value=\'GA\' \u003eGA\u003c\/option\u003e\n            \n            \u003coption value=\'HI\' \u003eHI\u003c\/option\u003e\n            \n            \u003coption value=\'ID\' \u003eID\u003c\/option\u003e\n            \n            \u003coption value=\'IL\' \u003eIL\u003c\/option\u003e\n            \n            \u003coption value=\'IN\' \u003eIN\u003c\/option\u003e\n            \n            \u003coption value=\'IA\' \u003eIA\u003c\/option\u003e\n            \n            \u003coption value=\'KS\' \u003eKS\u003c\/option\u003e\n            \n            \u003coption value=\'KY\' \u003eKY\u003c\/option\u003e\n            \n            \u003coption value=\'LA\' \u003eLA\u003c\/option\u003e\n            \n            \u003coption value=\'ME\' \u003eME\u003c\/option\u003e\n            \n            \u003coption value=\'MD\' \u003eMD\u003c\/option\u003e\n            \n            \u003coption value=\'MA\' \u003eMA\u003c\/option\u003e\n            \n            \u003coption value=\'MI\' \u003eMI\u003c\/option\u003e\n            \n            \u003coption value=\'MN\' \u003eMN\u003c\/option\u003e\n            \n            \u003coption value=\'MS\' \u003eMS\u003c\/option\u003e\n            \n            \u003coption value=\'MO\' \u003eMO\u003c\/option\u003e\n            \n            \u003coption value=\'MT\' \u003eMT\u003c\/option\u003e\n            \n            \u003coption value=\'NE\' \u003eNE\u003c\/option\u003e\n            \n            \u003coption value=\'NV\' \u003eNV\u003c\/option\u003e\n            \n            \u003coption value=\'NH\' \u003eNH\u003c\/option\u003e\n            \n            \u003coption value=\'NJ\' \u003eNJ\u003c\/option\u003e\n            \n            \u003coption value=\'NM\' \u003eNM\u003c\/option\u003e\n            \n            \u003coption value=\'NY\' \u003eNY\u003c\/option\u003e\n            \n            \u003coption value=\'NC\' \u003eNC\u003c\/option\u003e\n            \n            \u003coption value=\'ND\' \u003eND\u003c\/option\u003e\n            \n            \u003coption value=\'OH\' \u003eOH\u003c\/option\u003e\n            \n            \u003coption value=\'OK\' \u003eOK\u003c\/option\u003e\n            \n            \u003coption value=\'OR\' \u003eOR\u003c\/option\u003e\n            \n            \u003coption value=\'PA\' \u003ePA\u003c\/option\u003e\n            \n            \u003coption value=\'RI\' \u003eRI\u003c\/option\u003e\n            \n            \u003coption value=\'SC\' \u003eSC\u003c\/option\u003e\n            \n            \u003coption value=\'SD\' \u003eSD\u003c\/option\u003e\n            \n            \u003coption value=\'TN\' \u003eTN\u003c\/option\u003e\n            \n            \u003coption value=\'TX\' \u003eTX\u003c\/option\u003e\n            \n            \u003coption value=\'UT\' \u003eUT\u003c\/option\u003e\n            \n            \u003coption value=\'VT\' \u003eVT\u003c\/option\u003e\n            \n            \u003coption value=\'VA\' \u003eVA\u003c\/option\u003e\n            \n            \u003coption value=\'WA\' \u003eWA\u003c\/option\u003e\n            \n            \u003coption value=\'WV\' \u003eWV\u003c\/option\u003e\n            \n            \u003coption value=\'WI\' \u003eWI\u003c\/option\u003e\n            \n            \u003coption value=\'WY\' \u003eWY\u003c\/option\u003e\n            \n        \u003c\/select\u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-3-column\' \u003e\n    \u003clabel for=\'85405-number\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'ZIP\'\u003eZIP\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'number\'  class=\'flat-input\' id=\'85405-number\' name=\'number\' placeholder=\'ZIP\' presence  onKeyPress=\'if(this.value.length == 100) return false;\' onChange=\'if(this.value.length \u003e 100) this.value = this.value - 1\' \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'85405-email\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email Address \'\u003eEmail Address \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'flat-input\' id=\'85405-email\' name=\'email\' placeholder=\'Email Address \' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'85405-email-2\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Confirm Email Address \'\u003eConfirm Email Address \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'flat-input\' id=\'85405-email-2\' name=\'email-2\' placeholder=\'Confirm Email Address \' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'85405-phone\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Phone Number \'\u003ePhone Number \u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'phone\' class=\'flat-input\' id=\'85405-phone\' name=\'phone\' placeholder=\'Phone Number \' presence    default-country-code=\'us\'\u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\'\u003e\n    \u003clabel for=\'85405-select-2\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Age Eligibility Category\'\u003eAge Eligibility Category\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cselect name=\'select-2\'  id=\'85405-select-2\' class=\'flat-input\' presence\u003e\n            \u003coption selected=\'selected\' value=\'\' disabled=\'disabled\'\u003eAge Eligibility Category\u003c\/option\u003e\n            \n            \u003coption value=\'Ages 11 and Under\' \u003eAges 11 and Under\u003c\/option\u003e\n            \n            \u003coption value=\'Ages 12-18\' \u003eAges 12-18\u003c\/option\u003e\n            \n            \u003coption value=\'2022 High School Grad\/GED\/Continuing Education\' \u003e2022 High School Grad\/GED\/Continuing Education\u003c\/option\u003e\n            \n        \u003c\/select\u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003ch3 class=\'heading-title globo-heading\'\u003eSubmission Attachments\u003c\/h3\u003e\n    \u003cp class=\'heading-caption\'\u003e\u003c\/p\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003cdiv class=\'globo-paragraph\'\u003e\u003cp\u003ePlease upload your submission documents or other files by submitting a DropBox or Google Drive link. When uploading files, please title any attachments in the following format, choosing the sectional category in the formatting that is most appropriate for your submission: First and Last Name: E, MH, Grad\/HE; Written\/AV.\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eEnsure that your submission link is on a \u003cstrong\u003ePUBLIC SHARE\u003c\/strong\u003e setting so that anyone with the link may access the document. TST will not request permission to access your submission’s attachments if it does not initially allow access through this public share setting.\u003c\/p\u003e\u003c\/div\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'85405-text-5\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Add Your Submission Link Here\'\u003eAdd Your Submission Link Here\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'85405-text-5\' name=\'text-5\' placeholder=\'Add Your Submission Link Here\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\'  data-default-value=\'\\\'\u003e\n    \u003clabel class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'\'\u003e\u003c\/span\u003e\u003cspan\u003e\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'85405-checkbox-I accept the contractual agreement and legal disclaimers.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I accept the contractual agreement and legal disclaimers.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'85405-checkbox-I accept the contractual agreement and legal disclaimers.-\'\u003eI accept the contractual agreement and legal disclaimers.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'85405-checkbox-I have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'I have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'85405-checkbox-I have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.-\'\u003eI have read the submission requirements. I affirm I am eligible for this scholarship and the category to which I submitted my application.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'85405-checkbox-My submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\'  value=\'My submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'85405-checkbox-My submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.-\'\u003eMy submission link is on a PUBLIC SHARE setting so that anyone with the link may view my submission.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'85405-text-6\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Sign\'\u003eSign\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'flat-input\' id=\'85405-text-6\' name=\'text-6\' placeholder=\'Sign\' presence  \u003e\n    \u003c\/div\u003e\n    \n        \u003csmall class=\'help-text globo-description\'\u003eParent\/Guardian Signature if Minor\u003c\/small\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'85405-datetime-2\' class=\'flat-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Date\'\u003eDate\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput \n            type=\'text\' \n            autocomplete=\'off\'\n             \n            data-type=\'datetime\' \n            class=\'flat-input\' \n            id=\'85405-datetime-2\' \n            name=\'datetime-2\' \n            placeholder=\'Date\' \n            presence \n            data-format=\'date\' \n             \n            dataDateFormat=\'d-m-Y\' \n            dataTimeFormat=\'12h\' \n            \n                limitDateType=\'disablingDates\'\n                \n                \n                \n            \n        \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003cp\u003eTHANKS FOR YOUR SUBMISSION!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eYour application has been received. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit flat-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit Application\u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003cp\u003eTHANKS FOR YOUR SUBMISSION!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eYour application has been received. \u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[85405];



        window.Globo.FormBuilder.forms[93583] = { '93583': { 'header': { 'active': false, 'title': 'Join Us Form', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }, { 'id': 'text', 'type': 'text', 'label': 'First Name', 'placeholder': 'First Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'text-2', 'type': 'text', 'label': 'Last Name', 'placeholder': 'Last Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Cancel Membership', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': false, 'submitAlignment': 'center' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:sales@thesatanictemple.com\'\u003esales@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': '800', 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm' }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'The password and confirmation password do not match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'redirectToPage', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': 'https:\/\/thesatanictemple.com\/pages\/membership-cancellation-confirmation', 'enableGa': true, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Membership Cancellation form', 'enableFpx': true, 'fpxTrackerName': 'Membership Cancellation form' }, 'integration': { 'shopify': { 'createAccount': true, 'ifExist': 'continueAndUpdate', 'sendEmailInvite': false, 'acceptsMarketing': true, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': { 'email': 'email', 'text': 'first_name', 'text-2': 'last_name' } }, 'mailChimp': { 'loading': 'Looks like your Mailchimp API key that you provide is not right, Please go to \u003ca href='\/admin\/settings?forceRedirect=true\u0026shop=shop-satan.myshopify.com' target='_blank'\u003eSettings\u003c\/a\u003e to correct it', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': 'SrBUkL', 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyoemail': { 'val': 'email', 'option': 'dynamic' }, 'first_name': { 'val': '', 'option': '' }, 'last_name': { 'val': '', 'option': '' }, 'title': { 'val': '', 'option': '' }, 'organization': { 'val': '', 'option': '' }, 'phone_number': { 'val': '', 'option': '' }, 'address1': { 'val': '', 'option': '' }, 'address2': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'region': { 'val': '', 'option': '' }, 'zip': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'latitude': { 'val': '', 'option': '' }, 'longitude': { 'val': '', 'option': '' }, 'customPropertiestext': { 'val': 'text', 'option': 'dynamic', 'custom': 'First Name' }, 'customPropertiestext-2': { 'val': 'text-2', 'option': 'dynamic', 'custom': 'Last Name' }, 'customPropertiesselect': { 'val': 'select', 'option': 'dynamic', 'custom': 'Country' }, 'customPropertiestext-6': { 'val': 'text-6', 'option': 'dynamic', 'custom': 'State \/ Region' } } }, 'zapier': { 'enable': true, 'webhookUrl': 'https:\/\/hooks.zapier.com\/hooks\/catch\/13479142\/b0ygrpo\/' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'firstName': { 'val': '', 'option': '' }, 'lastName': { 'val': '', 'option': '' }, 'status': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'postalCode': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'customProperties1': { 'val': '', 'option': '' }, 'customProperties2': { 'val': '', 'option': '' }, 'customProperties3': { 'val': '', 'option': '' }, 'customProperties4': { 'val': '', 'option': '' }, 'customProperties5': { 'val': '', 'option': '' } } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'name': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'company': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'street': { 'val': '', 'option': '' }, 'postal_code': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'fax': { 'val': '', 'option': '' }, 'comment': { 'val': '', 'option': '' }, 'ref': { 'val': '', 'option': '' }, 'url': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'dayOfCycle': { 'val': '', 'option': '' }, 'scoring': { 'val': '', 'option': '' } } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'activecampaign': { 'loading': '', 'enable': false, 'list': [], 'integrationElements': [] }, 'googleCalendar': { 'loading': '', 'enable': false, 'list': '', 'integrationElements': { 'starttime': '', 'endtime': '', 'summary': '', 'location': '', 'description': '', 'attendees': '' } }, 'googleSheet': { 'loading': '', 'enable': false, 'spreadsheetdestination': '', 'listFields': [] } }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href=\'\/account\/login\' title=\'login\'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'shortCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'popup': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'lightbox': '\u003cdiv class=\'globo-formbuilder\' data-id=\'\'\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-93583\'\u003e\n\u003cstyle\u003e\n.globo-form-id-93583 .globo-form-app{\n    max-width: 800px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-93583 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-93583 .globo-form-app .globo-description,\n.globo-form-id-93583 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-93583 .globo-form-app .globo-label,\n.globo-form-id-93583 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-93583 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-93583 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-93583 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-93583 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-93583 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-93583 .globo-form-app .footer{\n    text-align:center;\n}\n.globo-form-id-93583 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-93583 .globo-form-app .footer button.submit,\n.globo-form-id-93583 .globo-form-app .footer button.checkout,\n.globo-form-id-93583 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-93583 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-93583 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-93583 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-93583 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-93583 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-93583 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-93583 .globo-form-app .step.-completed .step__number,\n.globo-form-id-93583 .globo-form-app .line.-progress,\n.globo-form-id-93583 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-93583 .globo-form-app .checkmark__check,\n.globo-form-id-93583 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-93583 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-93583 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-93583 .flatpickr-day.selected, \n.globo-form-id-93583 .flatpickr-day.startRange, \n.globo-form-id-93583 .flatpickr-day.endRange, \n.globo-form-id-93583 .flatpickr-day.selected.inRange, \n.globo-form-id-93583 .flatpickr-day.startRange.inRange, \n.globo-form-id-93583 .flatpickr-day.endRange.inRange, \n.globo-form-id-93583 .flatpickr-day.selected:focus, \n.globo-form-id-93583 .flatpickr-day.startRange:focus, \n.globo-form-id-93583 .flatpickr-day.endRange:focus, \n.globo-form-id-93583 .flatpickr-day.selected:hover, \n.globo-form-id-93583 .flatpickr-day.startRange:hover, \n.globo-form-id-93583 .flatpickr-day.endRange:hover, \n.globo-form-id-93583 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-93583 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-93583 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-93583 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-93583 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-93583 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-93583 .globo-paragraph,\n.globo-form-id-93583 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/93583\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=93583\u003e\n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=93583\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'93583-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'93583-email\' name=\'email\' placeholder=\'Email\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'93583-text\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'First Name\'\u003eFirst Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'93583-text\' name=\'text\' placeholder=\'First Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'93583-text-2\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Last Name\'\u003eLast Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'93583-text-2\' name=\'text-2\' placeholder=\'Last Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message success\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eCancel Membership\u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[93583];



        window.Globo.FormBuilder.forms[104601] = { '104601': { 'header': { 'active': false, 'title': '', 'description': '\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e' }, 'elements': [{ 'id': 'group', 'type': 'group', 'label': 'Basic info', 'description': '', 'elements': [{ 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'text-3', 'type': 'text', 'label': 'School Name', 'placeholder': 'School Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'text-4', 'type': 'text', 'label': 'State', 'placeholder': 'State', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 100 }], 'add-elements': null, 'conditionalFieldForAllElements': false }, { 'id': 'group', 'type': 'group', 'label': 'Survey', 'description': '', 'elements': [{ 'id': 'heading', 'type': 'heading', 'heading': 'Submit your form for download student rights card directly!', 'caption': '', 'columnWidth': 100 }], 'add-elements': null, 'conditionalFieldForAllElements': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': false, 'submitAlignment': 'left' }, 'mail': { 'admin': null, 'customer': { 'enable': true, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003eProtect the Children\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission.\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, thank you for downloading our new Studetn Rights Card.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'default', 'width': 600, 'style': 'classic', 'mainColor': 'rgba(124,48,15,1)', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'none', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm', 'newTemplate': true }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'redirectToPage', 'message': '\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e', 'redirectUrl': 'https:\/\/15rgnif62l3ma81h-4280465.shopifypreview.com\/pages?preview_key=ea0144be5853aff6371d20495c2748ff', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'showMessage': false, 'messageRedirectToLogin': 'You already registered. Click \u003ca href=\'\/account\/login\'\u003ehere\u003c\/a\u003e to login', 'sendEmailInvite': false, 'acceptsMarketing': false, 'overwriteCustomerExisting': true, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': { 'text': 'additional.first_name', 'email': 'email', 'text-3': 'additional.text', 'text-4': 'additional.text_1' } }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyoemail': '', 'first_name': { 'val': '', 'option': '' }, 'last_name': { 'val': '', 'option': '' }, 'title': { 'val': '', 'option': '' }, 'organization': { 'val': '', 'option': '' }, 'phone_number': { 'val': '', 'option': '' }, 'address1': { 'val': '', 'option': '' }, 'address2': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'region': { 'val': '', 'option': '' }, 'zip': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'latitude': { 'val': '', 'option': '' }, 'longitude': { 'val': '', 'option': '' } } }, 'zapier': { 'enable': false, 'webhookUrl': '' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'firstName': { 'val': '', 'option': '' }, 'lastName': { 'val': '', 'option': '' }, 'status': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'postalCode': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'customProperties1': { 'val': '', 'option': '' }, 'customProperties2': { 'val': '', 'option': '' }, 'customProperties3': { 'val': '', 'option': '' }, 'customProperties4': { 'val': '', 'option': '' }, 'customProperties5': { 'val': '', 'option': '' } } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'name': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'company': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'street': { 'val': '', 'option': '' }, 'postal_code': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'fax': { 'val': '', 'option': '' }, 'comment': { 'val': '', 'option': '' }, 'ref': { 'val': '', 'option': '' }, 'url': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'dayOfCycle': { 'val': '', 'option': '' }, 'scoring': { 'val': '', 'option': '' } } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'activecampaign': { 'loading': '', 'enable': false, 'list': [], 'integrationElements': [] }, 'googleCalendar': { 'loading': '', 'enable': false, 'list': '', 'integrationElements': { 'starttime': '', 'endtime': '', 'summary': '', 'location': '', 'description': '', 'attendees': '' } }, 'googleSheet': { 'loading': '', 'enable': false, 'spreadsheetdestination': '', 'listFields': ['text-3', 'text-4', 'heading'], 'submissionIp': false } }, 'accountPage': { 'showAccountDetail': false, 'registrationPage': false, 'editAccountPage': false, 'header': 'Header', 'active': false, 'title': 'Account details', 'headerDescription': 'Fill out the form to change account information', 'afterUpdate': 'Message after update', 'message': '\u003ch5\u003eAccount edited successfully!\u003c\/h5\u003e', 'footer': 'Footer', 'updateText': 'Update', 'footerDescription': '' }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href='\/account\/login' title='login'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'104601\'\u003e\u003c\/div\u003e', 'shortCode': '{formbuilder:104601}', 'popup': '\u003cbutton class=\'globo-formbuilder-open\' data-id=\'104601\'\u003eOpen form\u003c\/button\u003e', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'104601\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'104601\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': 'index', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1', 'setCookieHours': '1', 'setCookieWeeks': '1' }, 'isStepByStepForm': true, 'html': '\n\u003cdiv class=\'globo-form default-form globo-form-id-104601\'\u003e\n\u003cstyle\u003e\n.globo-form-id-104601 .globo-form-app{\n    max-width: 600px;\n    width: -webkit-fill-available;\n    \n    \n}\n\n.globo-form-id-104601 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-104601 .globo-form-app .globo-description,\n.globo-form-id-104601 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-104601 .globo-form-app .globo-label,\n.globo-form-id-104601 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-104601 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-104601 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-104601 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-104601 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-104601 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-104601 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-104601 .globo-form-app .footer button{\n    border:1px solid rgba(124,48,15,1);\n    \n}\n.globo-form-id-104601 .globo-form-app .footer button.submit,\n.globo-form-id-104601 .globo-form-app .footer button.checkout,\n.globo-form-id-104601 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(124,48,15,1);\n    color : #ffffff;\n}\n.globo-form-id-104601 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-104601 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-104601 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-104601 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(124,48,15,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-104601 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(124,48,15,1);\n    background: radial-gradient(rgba(124,48,15,1) 40%, #fff 45%);\n}\n.globo-form-id-104601 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(124,48,15,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-104601 .globo-form-app .step.-completed .step__number,\n.globo-form-id-104601 .globo-form-app .line.-progress,\n.globo-form-id-104601 .globo-form-app .line.-start{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-104601 .globo-form-app .checkmark__check,\n.globo-form-id-104601 .globo-form-app .checkmark__circle{\n    stroke: rgba(124,48,15,1);\n}\n.globo-form-id-104601 .floating-button{\n    background-color: rgba(124,48,15,1);\n}\n.globo-form-id-104601 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(124,48,15,1);\n}\n.globo-form-id-104601 .flatpickr-day.selected, \n.globo-form-id-104601 .flatpickr-day.startRange, \n.globo-form-id-104601 .flatpickr-day.endRange, \n.globo-form-id-104601 .flatpickr-day.selected.inRange, \n.globo-form-id-104601 .flatpickr-day.startRange.inRange, \n.globo-form-id-104601 .flatpickr-day.endRange.inRange, \n.globo-form-id-104601 .flatpickr-day.selected:focus, \n.globo-form-id-104601 .flatpickr-day.startRange:focus, \n.globo-form-id-104601 .flatpickr-day.endRange:focus, \n.globo-form-id-104601 .flatpickr-day.selected:hover, \n.globo-form-id-104601 .flatpickr-day.startRange:hover, \n.globo-form-id-104601 .flatpickr-day.endRange:hover, \n.globo-form-id-104601 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-104601 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-104601 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-104601 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-104601 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-104601 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(124,48,15,1);\n    border-color: rgba(124,48,15,1);\n}\n.globo-form-id-104601 .globo-paragraph,\n.globo-form-id-104601 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app default-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/104601\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=104601\u003e\n        \n            \n        \n        \n            \u003cdiv class=\'globo-formbuilder-wizard\' data-id=104601\u003e\n                \u003cdiv class=\'wizard__content\'\u003e\n                    \u003cheader class=\'wizard__header\'\u003e\n                        \u003cdiv class=\'wizard__steps\'\u003e\n                        \u003cnav class=\'steps hidden\'\u003e\n                            \n                                \n                                \n                                \n                                \u003cdiv class=\'step last \'  data-step=\'0\'\u003e\n                                    \u003cdiv class=\'step__content\'\u003e\n                                        \u003cp class=\'step__number\'\u003e\u003c\/p\u003e\n                                        \u003csvg class=\'checkmark\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 52 52\'\u003e\n                                            \u003ccircle class=\'checkmark__circle\' cx=\'26\' cy=\'26\' r=\'25\' fill=\'none\'\/\u003e\n                                            \u003cpath class=\'checkmark__check\' fill=\'none\' d=\'M14.1 27.2l7.1 7.2 16.7-16.8\'\/\u003e\n                                        \u003c\/svg\u003e\n                                        \u003cdiv class=\'lines\'\u003e\n                                            \n                                                \u003cdiv class=\'line -start\'\u003e\u003c\/div\u003e\n                                            \n                                            \u003cdiv class=\'line -background\'\u003e\n                                            \u003c\/div\u003e\n                                            \u003cdiv class=\'line -progress\'\u003e\n                                            \u003c\/div\u003e\n                                        \u003c\/div\u003e  \n                                    \u003c\/div\u003e\n                                \u003c\/div\u003e\n                            \n                                \n                                \n                                \n                                \u003cdiv class=\'step last \'  data-step=\'1\'\u003e\n                                    \u003cdiv class=\'step__content\'\u003e\n                                        \u003cp class=\'step__number\'\u003e\u003c\/p\u003e\n                                        \u003csvg class=\'checkmark\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 52 52\'\u003e\n                                            \u003ccircle class=\'checkmark__circle\' cx=\'26\' cy=\'26\' r=\'25\' fill=\'none\'\/\u003e\n                                            \u003cpath class=\'checkmark__check\' fill=\'none\' d=\'M14.1 27.2l7.1 7.2 16.7-16.8\'\/\u003e\n                                        \u003c\/svg\u003e\n                                        \u003cdiv class=\'lines\'\u003e\n                                            \n                                            \u003cdiv class=\'line -background\'\u003e\n                                            \u003c\/div\u003e\n                                            \u003cdiv class=\'line -progress\'\u003e\n                                            \u003c\/div\u003e\n                                        \u003c\/div\u003e  \n                                    \u003c\/div\u003e\n                                \u003c\/div\u003e\n                            \n                        \u003c\/nav\u003e\n                        \u003c\/div\u003e\n                    \u003c\/header\u003e\n                    \u003cdiv class=\'panels\'\u003e\n                        \n                        \n                        \n                        \n                        \u003cdiv class=\'panel \' data-id=104601  data-step=\'0\'\u003e\n                            \n                                \n                                    \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'104601-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'104601-email\' name=\'email\' placeholder=\'Email\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                                \n                                    \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'104601-text-3\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'School Name\'\u003eSchool Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'104601-text-3\' name=\'text-3\' placeholder=\'School Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                                \n                                    \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'104601-text-4\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'State\'\u003eState\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'104601-text-4\' name=\'text-4\' placeholder=\'State\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                                \n                            \n                            \n                        \u003c\/div\u003e\n                        \n                        \n                        \n                        \n                        \u003cdiv class=\'panel \' data-id=104601  data-step=\'1\'\u003e\n                            \n                                \n                                    \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003ch3 class=\'heading-title globo-heading\'\u003eSubmit your form for download student rights card directly!\u003c\/h3\u003e\n    \u003cp class=\'heading-caption\'\u003e\u003c\/p\u003e\n\u003c\/div\u003e\n\n\n                                \n                            \n                            \n                                \n                            \n                        \u003c\/div\u003e\n                        \n                    \u003c\/div\u003e\n                    \n                    \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                        \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                        \u003c\/div\u003e\n                    \u003c\/div\u003e\n                    \n                        \n                        \u003cdiv class=\'message success\'\u003e\n                            \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n                            \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                                \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                            \u003c\/div\u003e\n                        \u003c\/div\u003e\n                        \n                    \n                    \u003cdiv class=\'footer wizard__footer\'\u003e\n                        \n                            \n                        \n                        \u003cbutton type=\'button\' class=\'action previous hidden classic-button\'\u003ePrevious\u003c\/button\u003e\n                        \u003cbutton type=\'button\' class=\'action next submit classic-button\' data-submitting-text=\'\' data-submit-text='\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eSubmit' data-next-text=\'Next\' \u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003eNext\u003c\/button\u003e\n                        \n                        \u003ch1 class=\'wizard__congrats-message\'\u003e\u003c\/h1\u003e\n                    \u003c\/div\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eThanks for getting in touch!\u0026nbsp;\u003c\/h4\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eWe appreciate you contacting us. One of our colleagues will get back in touch with you soon!\u003c\/p\u003e\u003cp\u003e\u003cbr\u003e\u003c\/p\u003e\u003cp\u003eHave a great day!\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n' } }[104601];



        window.Globo.FormBuilder.forms[113238] = { '113238': { 'header': { 'active': false, 'title': 'Contact us', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Your Name', 'placeholder': 'Your Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'text-2', 'type': 'text', 'label': 'Subject', 'placeholder': 'Subject', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'checkbox', 'type': 'checkbox', 'label': 'Checkbox', 'options': 'My message pertains to Religious Reproductive Rights.', 'defaultOptions': '', 'description': '', 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inlineOption': 100, 'columnWidth': 50 }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Message', 'placeholder': 'Message', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'columnWidth': 100, 'conditionalField': false, 'onlyShowIf': false, 'checkbox': false }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': false, 'submitAlignment': 'left' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'boxed', 'width': '600', 'style': 'classic', 'mainColor': 'rgba(208,2,27,1)', 'headingColor': 'rgba(0,0,0,1)', 'labelColor': 'rgba(0,0,0,1)', 'descriptionColor': '#6c757d', 'optionColor': 'rgba(0,0,0,1)', 'paragraphColor': 'rgba(0,0,0,1)', 'paragraphBackground': 'rgba(0,0,0,1)', 'background': 'color', 'backgroundColor': 'rgba(255,255,255,1)', 'backgroundImage': 'https:\/\/cdn.shopify.com\/s\/files\/1\/0428\/0465\/files\/RRRbackground_430x.jpg?v=1686313544', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm', 'newTemplate': true }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'redirectToPage', 'message': '\u003ch4 style=\'text-align: justify;\'\u003eThank you for Contacting Us!\u003c\/h4\u003e\n\u003cp style=\'text-align: justify;\'\u003eWe will respond soon!\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e', 'redirectUrl': 'https:\/\/thesatanictemple.com\/pages\/rrr-thankyou', 'enableGa': false, 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'showMessage': false, 'messageRedirectToLogin': 'You already registered. Click \u003ca href=\'\/account\/login\'\u003ehere\u003c\/a\u003e to login', 'sendEmailInvite': false, 'sendEmailInviteWhenExist': false, 'acceptsMarketing': false, 'overwriteCustomerExisting': true, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': { 'text': 'additional.your_name', 'email': 'email', 'text-2': 'additional.text', 'checkbox': 'additional.checkbox', 'textarea': 'additional.message' } }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyoemail': '', 'first_name': { 'val': '', 'option': '' }, 'last_name': { 'val': '', 'option': '' }, 'title': { 'val': '', 'option': '' }, 'organization': { 'val': '', 'option': '' }, 'phone_number': { 'val': '', 'option': '' }, 'address1': { 'val': '', 'option': '' }, 'address2': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'region': { 'val': '', 'option': '' }, 'zip': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'latitude': { 'val': '', 'option': '' }, 'longitude': { 'val': '', 'option': '' } } }, 'zapier': { 'enable': false, 'webhookUrl': '' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'firstName': { 'val': '', 'option': '' }, 'lastName': { 'val': '', 'option': '' }, 'status': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'postalCode': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'customProperties1': { 'val': '', 'option': '' }, 'customProperties2': { 'val': '', 'option': '' }, 'customProperties3': { 'val': '', 'option': '' }, 'customProperties4': { 'val': '', 'option': '' }, 'customProperties5': { 'val': '', 'option': '' } } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'name': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'company': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'street': { 'val': '', 'option': '' }, 'postal_code': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'fax': { 'val': '', 'option': '' }, 'comment': { 'val': '', 'option': '' }, 'ref': { 'val': '', 'option': '' }, 'url': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'dayOfCycle': { 'val': '', 'option': '' }, 'scoring': { 'val': '', 'option': '' } } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'activecampaign': { 'loading': '', 'enable': false, 'list': [], 'integrationElements': [] }, 'googleCalendar': { 'loading': '', 'enable': false, 'list': '', 'integrationElements': { 'starttime': '', 'endtime': '', 'summary': '', 'location': '', 'description': '', 'attendees': '' } }, 'googleSheet': { 'loading': '', 'enable': false, 'spreadsheetdestination': '', 'listFields': ['checkbox', 'text-2'], 'submissionIp': false } }, 'accountPage': { 'showAccountDetail': false, 'registrationPage': false, 'editAccountPage': false, 'header': 'Header', 'active': false, 'title': 'Account details', 'headerDescription': 'Fill out the form to change account information', 'afterUpdate': 'Message after update', 'message': '\u003ch5\u003eAccount edited successfully!\u003c\/h5\u003e', 'footer': 'Footer', 'updateText': 'Update', 'footerDescription': '' }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href='\/account\/login' title='login'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'113238\'\u003e\u003c\/div\u003e', 'shortCode': '{formbuilder:113238}', 'popup': '\u003cbutton class=\'globo-formbuilder-open\' data-id=\'113238\'\u003eOpen form\u003c\/button\u003e', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'113238\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'113238\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': '83852132486', 'selectPositionOnPage': 'top', 'selectTime': 'forever', 'setCookie': '1', 'setCookieHours': '1', 'setCookieWeeks': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form boxed-form globo-form-id-113238\'\u003e\n\u003cstyle\u003e\n.globo-form-id-113238 .globo-form-app{\n    max-width: 600px;\n    width: -webkit-fill-available;\n    \n    background-color: rgba(255,255,255,1);\n    \n    \n}\n\n.globo-form-id-113238 .globo-form-app .globo-heading{\n    color: rgba(0,0,0,1)\n}\n.globo-form-id-113238 .globo-form-app .globo-description,\n.globo-form-id-113238 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-113238 .globo-form-app .globo-label,\n.globo-form-id-113238 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-113238 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: rgba(0,0,0,1);\n    text-align: left !important;\n}\n.globo-form-id-113238 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-113238 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-113238 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-113238 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: rgba(0,0,0,1)\n}\n.globo-form-id-113238 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-113238 .globo-form-app .footer button{\n    border:1px solid rgba(208,2,27,1);\n    \n}\n.globo-form-id-113238 .globo-form-app .footer button.submit,\n.globo-form-id-113238 .globo-form-app .footer button.checkout,\n.globo-form-id-113238 .globo-form-app .footer button.action.loading .spinner{\n    background-color: rgba(208,2,27,1);\n    color : #ffffff;\n}\n.globo-form-id-113238 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(208,2,27,1)\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-113238 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(208,2,27,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-113238 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-113238 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'rgba(208,2,27,1)\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-113238 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: rgba(208,2,27,1);\n    background: radial-gradient(rgba(208,2,27,1) 40%, #fff 45%);\n}\n.globo-form-id-113238 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: rgba(208,2,27,1);\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: rgba(208,2,27,1);\n}\n.globo-form-id-113238 .globo-form-app .step.-completed .step__number,\n.globo-form-id-113238 .globo-form-app .line.-progress,\n.globo-form-id-113238 .globo-form-app .line.-start{\n    background-color: rgba(208,2,27,1);\n}\n.globo-form-id-113238 .globo-form-app .checkmark__check,\n.globo-form-id-113238 .globo-form-app .checkmark__circle{\n    stroke: rgba(208,2,27,1);\n}\n.globo-form-id-113238 .floating-button{\n    background-color: rgba(208,2,27,1);\n}\n.globo-form-id-113238 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : rgba(208,2,27,1);\n}\n.globo-form-id-113238 .flatpickr-day.selected, \n.globo-form-id-113238 .flatpickr-day.startRange, \n.globo-form-id-113238 .flatpickr-day.endRange, \n.globo-form-id-113238 .flatpickr-day.selected.inRange, \n.globo-form-id-113238 .flatpickr-day.startRange.inRange, \n.globo-form-id-113238 .flatpickr-day.endRange.inRange, \n.globo-form-id-113238 .flatpickr-day.selected:focus, \n.globo-form-id-113238 .flatpickr-day.startRange:focus, \n.globo-form-id-113238 .flatpickr-day.endRange:focus, \n.globo-form-id-113238 .flatpickr-day.selected:hover, \n.globo-form-id-113238 .flatpickr-day.startRange:hover, \n.globo-form-id-113238 .flatpickr-day.endRange:hover, \n.globo-form-id-113238 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-113238 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-113238 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-113238 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-113238 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-113238 .flatpickr-day.endRange.nextMonthDay {\n    background: rgba(208,2,27,1);\n    border-color: rgba(208,2,27,1);\n}\n.globo-form-id-113238 .globo-paragraph,\n.globo-form-id-113238 .globo-paragraph * {\n    background: rgba(0,0,0,1) !important;\n    color: rgba(0,0,0,1) !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app boxed-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/113238\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=113238\u003e\n        \n            \n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=113238\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'113238-text\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Your Name\'\u003eYour Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'113238-text\' name=\'text\' placeholder=\'Your Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'113238-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'113238-email\' name=\'email\' placeholder=\'Email\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'113238-text-2\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Subject\'\u003eSubject\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'113238-text-2\' name=\'text-2\' placeholder=\'Subject\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\'  data-default-value=\'\\\'\u003e\n    \u003clabel class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Checkbox\'\u003eCheckbox\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \n    \n    \u003cul class=\'flex-wrap\'\u003e\n        \n            \n            \n                \n            \n            \u003cli class=\'globo-list-control option-1-column\'\u003e\n                \u003cdiv class=\'checkbox-wrapper\'\u003e\n                    \u003cinput class=\'checkbox-input\'  id=\'113238-checkbox-My message pertains to Religious Reproductive Rights.-\' type=\'checkbox\' data-type=\'checkbox\' name=\'checkbox[]\' presence value=\'My message pertains to Religious Reproductive Rights.\'  \u003e\n                    \u003clabel class=\'checkbox-label globo-option\' for=\'113238-checkbox-My message pertains to Religious Reproductive Rights.-\'\u003eMy message pertains to Religious Reproductive Rights.\u003c\/label\u003e\n                \u003c\/div\u003e\n            \u003c\/li\u003e\n        \n    \u003c\/ul\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'113238-textarea\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Message\'\u003eMessage\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'113238-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Message\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n                \n                \u003cdiv class=\'message success\'\u003e\n                    \u003cdiv class=\'content\'\u003e\u003ch4 style=\'text-align: justify;\'\u003eThank you for Contacting Us!\u003c\/h4\u003e\n\u003cp style=\'text-align: justify;\'\u003eWe will respond soon!\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e\u003c\/div\u003e\n                    \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                        \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                    \u003c\/div\u003e\n                \u003c\/div\u003e\n                \n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                    \n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003e\n                        \n                            Submit\n                        \n                    \u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4 style=\'text-align: justify;\'\u003eThank you for Contacting Us!\u003c\/h4\u003e\n\u003cp style=\'text-align: justify;\'\u003eWe will respond soon!\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp style=\'text-align: justify;\'\u003e\u0026nbsp;\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n', 'initialData': { 'heights': { 'desktop': 559 } } } }[113238];



        window.Globo.FormBuilder.forms[114328] = { '114328': { 'header': { 'active': false, 'title': '', 'description': '\u003cp\u003eLeave your message and we'll get back to you shortly.\u003c\/p\u003e' }, 'elements': [{ 'id': 'text', 'type': 'text', 'label': 'Your Name', 'placeholder': 'Your Name', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'email', 'type': 'email', 'label': 'Email', 'placeholder': 'Email', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'inputIcon': '', 'columnWidth': 50 }, { 'id': 'textarea', 'type': 'textarea', 'label': 'Message', 'placeholder': 'Message', 'description': '', 'limitCharacters': false, 'characters': 100, 'hideLabel': false, 'keepPositionLabel': false, 'required': true, 'ifHideLabel': false, 'columnWidth': 100 }], 'add-elements': null, 'footer': { 'description': '', 'previousText': 'Previous', 'nextText': 'Next', 'submitText': 'Submit', 'resetButton': false, 'resetButtonText': 'Reset', 'submitFullWidth': false, 'submitAlignment': 'left' }, 'mail': { 'admin': null, 'customer': { 'enable': false, 'emailType': 'elementEmail', 'selectEmail': 'onlyEmail', 'emailId': 'email', 'emailConditional': false, 'note': 'You can use variables which will help you create a dynamic content', 'subject': 'Thanks for submitting', 'content': '\u003ctable class=\'header row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; margin: 40px 0 20px;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'header__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 559px; text-align: left; border-spacing: 0px; border-collapse: collapse; margin: 0px auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; width: 544.219px;\'\u003e\n\u003ctable class=\'row\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'shop-name__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch1 class=\'shop-name__text\' style=\'font-weight: normal; font-size: 30px; color: #333; margin: 0;\'\u003e\u003ca class=\'shop_name\' target=\'_blank\' rel=\'noopener\'\u003eShop\u003c\/a\u003e\u003c\/h1\u003e\n\u003c\/td\u003e\n\u003ctd class=\'order-number__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; font-size: 14px; color: #999;\' align=\'right\'\u003e\u0026nbsp;\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row content\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'content__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding-bottom: 40px;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch2 class=\'quote-heading\' style=\'font-weight: normal; font-size: 24px; margin: 0 0 10px;\'\u003eThanks for your submission\u003c\/h2\u003e\n\u003cp class=\'quote-heading-message\'\u003eHi, we are getting your submission. We will get back to you shortly.\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row section\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'section__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 40px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003ch3 class=\'more-information\'\u003eMore information\u003c\/h3\u003e\n\u003cp\u003e{{data}}\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003ctable class=\'row footer\' style=\'width: 100%; border-spacing: 0; border-collapse: collapse; border-top-width: 1px; border-top-color: #e5e5e5; border-top-style: solid;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd class=\'footer__cell\' style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif; padding: 35px 0;\'\u003e\u003ccenter\u003e\n\u003ctable class=\'container\' style=\'width: 560px; text-align: left; border-spacing: 0; border-collapse: collapse; margin: 0 auto;\'\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'contact\' style=\'text-align: center;\'\u003eIf you have any questions, reply to this email or contact us at \u003ca href=\'mailto:info@thesatanictemple.com\'\u003einfo@thesatanictemple.com\u003c\/a\u003e\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\'font-family: -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\'\u003e\n\u003cp class=\'disclaimer__subtext\' style=\'color: #999; line-height: 150%; font-size: 14px; margin: 0; text-align: center;\'\u003eClick \u003ca href=\'[UNSUBSCRIBEURL]\'\u003ehere\u003c\/a\u003e to unsubscribe\u003c\/p\u003e\n\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e\n\u003c\/center\u003e\u003c\/td\u003e\n\u003c\/tr\u003e\n\u003c\/tbody\u003e\n\u003c\/table\u003e', 'islimitWidth': false, 'maxWidth': '600' } }, 'appearance': { 'layout': 'boxed', 'width': 600, 'style': 'classic', 'mainColor': '#EB1256', 'headingColor': '#000', 'labelColor': '#000', 'descriptionColor': '#6c757d', 'optionColor': '#000', 'paragraphColor': '#000', 'paragraphBackground': '#fff', 'background': 'color', 'backgroundColor': '#FFF', 'backgroundImage': '', 'backgroundImageAlignment': 'middle', 'floatingIcon': '\u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'envelope\' class=\'svg-inline--fa fa-envelope fa-w-16\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 512 512\'\u003e\u003cpath fill=\'currentColor\' d=\'M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e', 'floatingText': '', 'displayOnAllPage': false, 'position': 'bottom right', 'formType': 'normalForm', 'newTemplate': true }, 'reCaptcha': { 'enable': false, 'note': 'Please make sure that you have set Google reCaptcha v2 Site key and Secret key in \u003ca href=\'\/admin\/settings\'\u003eSettings\u003c\/a\u003e' }, 'errorMessage': { 'required': 'Please fill in field', 'invalid': 'Invalid', 'invalidName': 'Invalid name', 'invalidEmail': 'Invalid email', 'invalidURL': 'Invalid URL', 'invalidPhone': 'Invalid phone', 'invalidNumber': 'Invalid number', 'invalidPassword': 'Invalid password', 'confirmPasswordNotMatch': 'Confirmed password doesn't match', 'customerAlreadyExists': 'Customer already exists', 'fileSizeLimit': 'File size limit exceeded', 'fileNotAllowed': 'File extension not allowed', 'requiredCaptcha': 'Please, enter the captcha', 'requiredProducts': 'Please select product', 'limitQuantity': 'The number of products left in stock has been exceeded', 'shopifyInvalidPhone': 'phone - Enter a valid phone number to use this delivery method', 'shopifyPhoneHasAlready': 'phone - Phone has already been taken', 'shopifyInvalidProvice': 'addresses.province - is not valid', 'otherError': 'Something went wrong, please try again' }, 'afterSubmit': { 'action': 'clearForm', 'message': '\u003ch4\u003eWe will get in touch with you soon.\u003c\/h4\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp\u003e\u003cbr\u003e\u003cbr\u003e\u003c\/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e', 'redirectUrl': '', 'enableGa': false, 'gaEventName': 'globo_form_submit', 'gaEventCategory': 'Form Builder by Globo', 'gaEventAction': 'Submit', 'gaEventLabel': 'Contact us form', 'enableFpx': false, 'fpxTrackerName': '' }, 'integration': { 'shopify': { 'createAccount': false, 'ifExist': 'returnError', 'showMessage': false, 'messageRedirectToLogin': 'You already registered. Click \u003ca href=\'\/account\/login\'\u003ehere\u003c\/a\u003e to login', 'sendEmailInvite': false, 'sendEmailInviteWhenExist': false, 'acceptsMarketing': false, 'overwriteCustomerExisting': true, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Shopify customer data', 'integrationElements': { 'text': 'additional.your_name', 'email': 'email', 'textarea': 'additional.message' } }, 'mailChimp': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Mailchimp subscriber data', 'integrationElements': [] }, 'klaviyo': { 'loading': '', 'enable': false, 'list': false, 'note': 'Learn \u003ca href=\'https:\/\/www.google.com\/\' target=\'_blank\'\u003ehow to connect\u003c\/a\u003e form elements to Klaviyo subscriber data', 'integrationElements': { 'klaviyoemail': '', 'first_name': { 'val': '', 'option': '' }, 'last_name': { 'val': '', 'option': '' }, 'title': { 'val': '', 'option': '' }, 'organization': { 'val': '', 'option': '' }, 'phone_number': { 'val': '', 'option': '' }, 'address1': { 'val': '', 'option': '' }, 'address2': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'region': { 'val': '', 'option': '' }, 'zip': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'latitude': { 'val': '', 'option': '' }, 'longitude': { 'val': '', 'option': '' } } }, 'zapier': { 'enable': false, 'webhookUrl': '' }, 'hubspot': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'omnisend': { 'loading': '', 'enable': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'firstName': { 'val': '', 'option': '' }, 'lastName': { 'val': '', 'option': '' }, 'status': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'postalCode': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'customProperties1': { 'val': '', 'option': '' }, 'customProperties2': { 'val': '', 'option': '' }, 'customProperties3': { 'val': '', 'option': '' }, 'customProperties4': { 'val': '', 'option': '' }, 'customProperties5': { 'val': '', 'option': '' } } }, 'getresponse': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': { 'email': { 'val': '', 'option': '' }, 'name': { 'val': '', 'option': '' }, 'gender': { 'val': '', 'option': '' }, 'birthdate': { 'val': '', 'option': '' }, 'company': { 'val': '', 'option': '' }, 'city': { 'val': '', 'option': '' }, 'state': { 'val': '', 'option': '' }, 'street': { 'val': '', 'option': '' }, 'postal_code': { 'val': '', 'option': '' }, 'country': { 'val': '', 'option': '' }, 'phone': { 'val': '', 'option': '' }, 'fax': { 'val': '', 'option': '' }, 'comment': { 'val': '', 'option': '' }, 'ref': { 'val': '', 'option': '' }, 'url': { 'val': '', 'option': '' }, 'tags': { 'val': '', 'option': '' }, 'dayOfCycle': { 'val': '', 'option': '' }, 'scoring': { 'val': '', 'option': '' } } }, 'sendinblue': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'campaignmonitor': { 'loading': '', 'enable': false, 'list': false, 'integrationElements': [] }, 'activecampaign': { 'loading': '', 'enable': false, 'list': [], 'integrationElements': [] }, 'googleCalendar': { 'loading': '', 'enable': false, 'list': '', 'integrationElements': { 'starttime': '', 'endtime': '', 'summary': '', 'location': '', 'description': '', 'attendees': '' } }, 'googleSheet': { 'loading': '', 'enable': false, 'spreadsheetdestination': '', 'listFields': [], 'submissionIp': false } }, 'accountPage': { 'showAccountDetail': false, 'registrationPage': false, 'editAccountPage': false, 'header': 'Header', 'active': false, 'title': 'Account details', 'headerDescription': 'Fill out the form to change account information', 'afterUpdate': 'Message after update', 'message': '\u003ch5\u003eAccount edited successfully!\u003c\/h5\u003e', 'footer': 'Footer', 'updateText': 'Update', 'footerDescription': '' }, 'publish': { 'requiredLogin': false, 'requiredLoginMessage': 'Please \u003ca href='\/account\/login' title='login'\u003elogin\u003c\/a\u003e to continue', 'publishType': 'embedCode', 'embedCode': '\u003cdiv class=\'globo-formbuilder\' data-id=\'114328\'\u003e\u003c\/div\u003e', 'shortCode': '{formbuilder:114328}', 'popup': '\u003cbutton class=\'globo-formbuilder-open\' data-id=\'114328\'\u003eOpen form\u003c\/button\u003e', 'lightbox': '\u003cdiv class=\'globo-form-publish-modal lightbox hidden\' data-id=\'114328\'\u003e\u003cdiv class=\'globo-form-modal-content\'\u003e\u003cdiv class=\'globo-formbuilder\' data-id=\'114328\'\u003e\u003c\/div\u003e\u003c\/div\u003e\u003c\/div\u003e', 'enableAddShortCode': false, 'selectPage': '84574240902', 'selectPositionOnPage': 'bottom', 'selectTime': 'forever', 'setCookie': '1', 'setCookieHours': '1', 'setCookieWeeks': '1' }, 'isStepByStepForm': false, 'html': '\n\u003cdiv class=\'globo-form boxed-form globo-form-id-114328\'\u003e\n\u003cstyle\u003e\n.globo-form-id-114328 .globo-form-app{\n    max-width: 600px;\n    width: -webkit-fill-available;\n    \n    background-color: #FFF;\n    \n    \n}\n\n.globo-form-id-114328 .globo-form-app .globo-heading{\n    color: #000\n}\n.globo-form-id-114328 .globo-form-app .globo-description,\n.globo-form-id-114328 .globo-form-app .header .globo-description{\n    color: #6c757d\n}\n.globo-form-id-114328 .globo-form-app .globo-label,\n.globo-form-id-114328 .globo-form-app .globo-form-control label.globo-label,\n.globo-form-id-114328 .globo-form-app .globo-form-control label.globo-label span.label-content{\n    color: #000;\n    text-align: left !important;\n}\n.globo-form-id-114328 .globo-form-app .globo-label.globo-position-label{\n    height: 20px !important;\n}\n.globo-form-id-114328 .globo-form-app .globo-form-control .help-text.globo-description{\n    color: #6c757d\n}\n.globo-form-id-114328 .globo-form-app .globo-form-control .checkbox-wrapper .globo-option,\n.globo-form-id-114328 .globo-form-app .globo-form-control .radio-wrapper .globo-option\n{\n    color: #000\n}\n.globo-form-id-114328 .globo-form-app .footer{\n    text-align:left;\n}\n.globo-form-id-114328 .globo-form-app .footer button{\n    border:1px solid #EB1256;\n    \n}\n.globo-form-id-114328 .globo-form-app .footer button.submit,\n.globo-form-id-114328 .globo-form-app .footer button.checkout,\n.globo-form-id-114328 .globo-form-app .footer button.action.loading .spinner{\n    background-color: #EB1256;\n    color : #ffffff;\n}\n.globo-form-id-114328 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'far\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'%23EB1256\' d=\'M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-114328 .globo-form-app .globo-form-control .star-rating\u003efieldset\u003einput:checked ~ label:before {\n    content: url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'%23EB1256\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e');\n}\n.globo-form-id-114328 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover:before,\n.globo-form-id-114328 .globo-form-app .globo-form-control .star-rating\u003efieldset:not(:checked)\u003elabel:hover ~ label:before{\n    content : url('data:image\/svg+xml; utf8, \u003csvg aria-hidden=\'true\' focusable=\'false\' data-prefix=\'fas\' data-icon=\'star\' class=\'svg-inline--fa fa-star fa-w-18\' role=\'img\' xmlns=\'http:\/\/www.w3.org\/2000\/svg\' viewBox=\'0 0 576 512\'\u003e\u003cpath fill=\'%23EB1256\' d=\'M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\'\u003e\u003c\/path\u003e\u003c\/svg\u003e')\n}\n.globo-form-id-114328 .globo-form-app .globo-form-control .radio-wrapper .radio-input:checked ~ .radio-label:after {\n    background: #EB1256;\n    background: radial-gradient(#EB1256 40%, #fff 45%);\n}\n.globo-form-id-114328 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input:checked ~ .checkbox-label:before {\n    border-color: #EB1256;\n    box-shadow: 0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);\n    background-color: #EB1256;\n}\n.globo-form-id-114328 .globo-form-app .step.-completed .step__number,\n.globo-form-id-114328 .globo-form-app .line.-progress,\n.globo-form-id-114328 .globo-form-app .line.-start{\n    background-color: #EB1256;\n}\n.globo-form-id-114328 .globo-form-app .checkmark__check,\n.globo-form-id-114328 .globo-form-app .checkmark__circle{\n    stroke: #EB1256;\n}\n.globo-form-id-114328 .floating-button{\n    background-color: #EB1256;\n}\n.globo-form-id-114328 .globo-form-app .globo-form-control .checkbox-wrapper .checkbox-input ~ .checkbox-label:before,\n.globo-form-app .globo-form-control .radio-wrapper .radio-input ~ .radio-label:after{\n    border-color : #EB1256;\n}\n.globo-form-id-114328 .flatpickr-day.selected, \n.globo-form-id-114328 .flatpickr-day.startRange, \n.globo-form-id-114328 .flatpickr-day.endRange, \n.globo-form-id-114328 .flatpickr-day.selected.inRange, \n.globo-form-id-114328 .flatpickr-day.startRange.inRange, \n.globo-form-id-114328 .flatpickr-day.endRange.inRange, \n.globo-form-id-114328 .flatpickr-day.selected:focus, \n.globo-form-id-114328 .flatpickr-day.startRange:focus, \n.globo-form-id-114328 .flatpickr-day.endRange:focus, \n.globo-form-id-114328 .flatpickr-day.selected:hover, \n.globo-form-id-114328 .flatpickr-day.startRange:hover, \n.globo-form-id-114328 .flatpickr-day.endRange:hover, \n.globo-form-id-114328 .flatpickr-day.selected.prevMonthDay, \n.globo-form-id-114328 .flatpickr-day.startRange.prevMonthDay, \n.globo-form-id-114328 .flatpickr-day.endRange.prevMonthDay, \n.globo-form-id-114328 .flatpickr-day.selected.nextMonthDay, \n.globo-form-id-114328 .flatpickr-day.startRange.nextMonthDay, \n.globo-form-id-114328 .flatpickr-day.endRange.nextMonthDay {\n    background: #EB1256;\n    border-color: #EB1256;\n}\n.globo-form-id-114328 .globo-paragraph,\n.globo-form-id-114328 .globo-paragraph * {\n    background: #fff !important;\n    color: #000 !important;\n    width: 100%!important;\n}\n\u003c\/style\u003e\n\u003cdiv class=\'globo-form-app boxed-layout\'\u003e\n    \u003cdiv class=\'header dismiss hidden\' onclick=\'Globo.FormBuilder.closeModalForm(this)\'\u003e\n        \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n    \u003c\/div\u003e\n    \u003cform class=\'g-container\' novalidate action=\'\/api\/front\/form\/114328\/send\' method=\'POST\' enctype=\'multipart\/form-data\' data-id=114328\u003e\n        \n            \n        \n        \n            \u003cdiv class=\'content flex-wrap block-container\' data-id=114328\u003e\n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'114328-text\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Your Name\'\u003eYour Name\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'text\' class=\'classic-input\' id=\'114328-text\' name=\'text\' placeholder=\'Your Name\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-2-column\' \u003e\n    \u003clabel for=\'114328-email\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Email\'\u003eEmail\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003cdiv class=\'globo-form-input\'\u003e\n        \n        \u003cinput type=\'text\'  data-type=\'email\' class=\'classic-input\' id=\'114328-email\' name=\'email\' placeholder=\'Email\' presence  \u003e\n    \u003c\/div\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                    \n                        \n\n\n\n\n\n\n\n\n\n\u003cdiv class=\'globo-form-control layout-1-column\' \u003e\n    \u003clabel for=\'114328-textarea\' class=\'classic-label globo-label \'\u003e\u003cspan class=\'label-content\' data-label=\'Message\'\u003eMessage\u003c\/span\u003e\u003cspan class=\'text-danger text-smaller\'\u003e *\u003c\/span\u003e\u003c\/label\u003e\n    \u003ctextarea id=\'114328-textarea\'  data-type=\'textarea\' class=\'classic-input\' rows=\'3\' name=\'textarea\' placeholder=\'Message\' presence  \u003e\u003c\/textarea\u003e\n    \n    \u003csmall class=\'messages\'\u003e\u003c\/small\u003e\n\u003c\/div\u003e\n\n\n                    \n                \n                \n            \u003c\/div\u003e\n            \n            \u003cdiv class=\'message error\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \u003cdiv class=\'message warning\' data-other-error=\'Something went wrong, please try again\'\u003e\n                \u003cdiv class=\'content\'\u003e\u003c\/div\u003e\n                \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                    \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                \u003c\/div\u003e\n            \u003c\/div\u003e\n            \n                \n                \u003cdiv class=\'message success\'\u003e\n                    \u003cdiv class=\'content\'\u003e\u003ch4\u003eWe will get in touch with you soon.\u003c\/h4\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp\u003e\u003cbr\u003e\u003cbr\u003e\u003c\/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e\u003c\/div\u003e\n                    \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n                        \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n                    \u003c\/div\u003e\n                \u003c\/div\u003e\n                \n            \n            \u003cdiv class=\'footer\'\u003e\n                \n                    \n                \n                \n                    \u003cbutton class=\'action submit classic-button\'\u003e\u003cspan class=\'spinner\'\u003e\u003c\/span\u003e\n                        \n                            Submit\n                        \n                    \u003c\/button\u003e\n                    \n                \n            \u003c\/div\u003e\n        \n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[id]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[email]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'customer[name]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[title]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'page[href]\'\u003e\n        \u003cinput type=\'hidden\' value=\'\' name=\'_keyLabel\'\u003e\n    \u003c\/form\u003e\n    \n    \u003cdiv class=\'message success\'\u003e\n        \u003cdiv class=\'content\'\u003e\u003ch4\u003eWe will get in touch with you soon.\u003c\/h4\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp\u003e\u003cbr\u003e\u003cbr\u003e\u003c\/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e\n\u003cp\u003e\u0026nbsp;\u003c\/p\u003e\u003c\/div\u003e\n        \u003cdiv class=\'dismiss\' onclick=\'Globo.FormBuilder.dismiss(this)\'\u003e\n            \u003csvg width=20 height=20 viewBox=\'0 0 20 20\' class=\'\' focusable=\'false\' aria-hidden=\'true\'\u003e\u003cpath d=\'M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\' fill-rule=\'evenodd\'\u003e\u003c\/path\u003e\u003c\/svg\u003e\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n    \n\u003c\/div\u003e\n\n\u003c\/div\u003e\n', 'initialData': { 'heights': { 'desktop': 329 } } } }[114328];


        window.Globo.FormBuilder.url = window.Globo.FormBuilder.shop.url;
        window.Globo.FormBuilder.themeOs20 = true;
        window.Globo.FormBuilder.searchProductByJson = true; Globo.FormBuilder.page = {
            title: `The Satanic Temple - Contact`,
            href: window.location.href,
            type: 'page'
        };


    </script>

    <style>
        .globo-formbuilder[data-id='113238'],
        .globo-formbuilder[data-id='MTEzMjM4'] {
            display: block;
            height: 559px;
            margin: 30px auto;
        }

        .globo-formbuilder[data-id='114328'],
        .globo-formbuilder[data-id='MTE0MzI4'] {
            display: block;
            height: 329px;
            margin: 30px auto;
        }
    </style>


    <!-- END app app block --><!-- BEGIN app block: shopify://apps/klaviyo-email-marketing-sms/blocks/klaviyo-onsite-embed/2632fe16-c075-4321-a88b-50b567f42507 -->












    <script async='' src='https://static.klaviyo.com/onsite/js/klaviyo.js?company_id=VLExP9'></script>
    <script>!function () { if (!window.klaviyo) { window._klOnsite = window._klOnsite || []; try { window.klaviyo = new Proxy({}, { get: function (n, i) { return 'push' === i ? function () { var n; (n = window._klOnsite).push.apply(n, arguments) } : function () { for (var n = arguments.length, o = new Array(n), w = 0; w < n; w++)o[w] = arguments[w]; var t = 'function' == typeof o[o.length - 1] ? o.pop() : void 0, e = new Promise((function (n) { window._klOnsite.push([i].concat(o, [function (i) { t && t(i), n(i) }])) })); return e } } }) } catch (n) { window.klaviyo = window.klaviyo || [], window.klaviyo.push = function () { var n; (n = window._klOnsite).push.apply(n, arguments) } } } }();</script>





    <!-- END app app block -->
    <script
        src='https://cdn.shopify.com/extensions/98c5b53f-cd04-4bf1-87df-3a0a6e46e156/powerful-form-builder-41/assets/globo.formbuilder.index.js'
        type='text/javascript' defer='defer'></script>
    <link href='https://monorail-edge.shopifysvc.com' rel='dns-prefetch'>
    <script>(function () { if ('sendBeacon' in navigator && 'performance' in window) { var session_token = document.cookie.match(/_shopify_s=([^;]*)/); function handle_abandonment_event(e) { var entries = performance.getEntries().filter(function (entry) { return /monorail-edge.shopifysvc.com/.test(entry.name); }); if (!window.abandonment_tracked && entries.length === 0) { window.abandonment_tracked = true; var currentMs = Date.now(); var navigation_start = performance.timing.navigationStart; var payload = { shop_id: 4280465, url: window.location.href, navigation_start, duration: currentMs - navigation_start, session_token: session_token && session_token.length === 2 ? session_token[1] : '', page_type: 'page' }; window.navigator.sendBeacon('https://monorail-edge.shopifysvc.com/v1/produce', JSON.stringify({ schema_id: 'online_store_buyer_site_abandonment/1.1', payload: payload, metadata: { event_created_at_ms: currentMs, event_sent_at_ms: currentMs } })); } } window.addEventListener('pagehide', handle_abandonment_event); } }());</script>
    <script
        id='web-pixels-manager-setup'>(function e(e, n, a, t, o, r, i) { var s = null !== e, l = ('function' == typeof BigInt && BigInt.toString().indexOf('[native code]') ? 'modern' : 'legacy').substring(0, 1), c = t.substring(0, 1); if (s) { window.Shopify = window.Shopify || {}; var d = window.Shopify; d.analytics = d.analytics || {}; var u = d.analytics; u.replayQueue = [], u.publish = function (e, n, a) { u.replayQueue.push([e, n, a]) }; try { self.performance.mark('wpm:start') } catch (e) { } } var p, f, y, h, v, m, w, g, b, _ = [a, '/wpm', '/', c, r, l, '.js'].join(''); f = (p = { src: _, async: !0, onload: function () { if (e) { var a = window.webPixelsManager.init(e); null == n || n(a); var t = window.Shopify.analytics; t.replayQueue.forEach((function (e) { var n = e[0], t = e[1], o = e[2]; a.publishCustomEvent(n, t, o) })), t.replayQueue = [], t.publish = a.publishCustomEvent, t.visitor = a.visitor } }, onerror: function () { var n = (null == e ? void 0 : e.storefrontBaseUrl) ? e.storefrontBaseUrl.replace(/\/$/, '') : self.location.origin, a = ''.concat(n, '/.well-known/shopify/monorail/unstable/produce_batch'), t = JSON.stringify({ metadata: { event_sent_at_ms: (new Date).getTime() }, events: [{ schema_id: 'web_pixels_manager_load/2.0', payload: { version: o || 'latest', page_url: self.location.href, status: 'failed', error_msg: ''.concat(_, ' has failed to load') }, metadata: { event_created_at_ms: (new Date).getTime() } }] }); try { if (self.navigator.sendBeacon.bind(self.navigator)(a, t)) return !0 } catch (e) { } var r = new XMLHttpRequest; try { return r.open('POST', a, !0), r.setRequestHeader('Content-Type', 'text/plain'), r.send(t), !0 } catch (e) { console && console.warn && console.warn('[Web Pixels Manager] Got an unhandled error while logging a load error.') } return !1 } }).src, y = p.async, h = void 0 === y || y, v = p.onload, m = p.onerror, w = document.createElement('script'), g = document.head, b = document.body, w.async = h, w.src = f, v && w.addEventListener('load', v), m && w.addEventListener('error', m), g ? g.appendChild(w) : b ? b.appendChild(w) : console.error('Did not find a head or body element to append the script') })({ shopId: 4280465, storefrontBaseUrl: 'https://thesatanictemple.com', cdnBaseUrl: 'https://thesatanictemple.com/cdn', surface: 'storefront-renderer', enabledBetaFlags: ['web_pixels_async_pixel_refactor', 'web_pixels_manager_performance_improvement'], webPixelsConfigList: [{ 'id': 'shopify-app-pixel', 'configuration': '{}', 'eventPayloadVersion': 'v1', 'runtimeContext': 'STRICT', 'scriptVersion': '0570', 'apiClientId': 'shopify-pixel', 'type': 'APP' }, { 'id': 'shopify-custom-pixel', 'eventPayloadVersion': 'v1', 'runtimeContext': 'LAX', 'scriptVersion': '0570', 'apiClientId': 'shopify-pixel', 'type': 'CUSTOM' }], initData: { 'cart': null, 'checkout': null, 'customer': null, 'productVariants': [] }, }, function pageEvents(webPixelsManagerAPI) { webPixelsManagerAPI.publish('page_viewed'); }, 'https://thesatanictemple.com/cdn', 'browser', '0.0.412', '80cd6a5fw8efabb83pbabe92ddm0cb690ee', ['web_pixels_async_pixel_refactor', 'web_pixels_manager_performance_improvement']);</script>
    <script async='' src='https://thesatanictemple.com/cdn/wpm/b80cd6a5fw8efabb83pbabe92ddm0cb690eem.js'></script>
    <script>var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-168429396-1']); _gaq.push(['_addDevId', 'o5cUG']); _gaq.push(['_setAllowLinker', true]); _gaq.push(['_setDomainName', 'none']); _gaq.push(['_setCustomVar']); _gaq.push(['_trackPageview']);</script>
    <script>window.ShopifyAnalytics = window.ShopifyAnalytics || {};
        window.ShopifyAnalytics.meta = window.ShopifyAnalytics.meta || {};
        window.ShopifyAnalytics.meta.currency = 'USD';
        var meta = { 'page': { 'pageType': 'page', 'resourceType': 'page', 'resourceId': 240382034 } };
        for (var attr in meta) {
            window.ShopifyAnalytics.meta[attr] = meta[attr];
        }</script>
    <script>window.ShopifyAnalytics.merchantGoogleAnalytics = function () {

        };
    </script>
    <script class='analytics'>(function () {
            var customDocumentWrite = function (content) {
                var jquery = null;

                if (window.jQuery) {
                    jquery = window.jQuery;
                } else if (window.Checkout && window.Checkout.$) {
                    jquery = window.Checkout.$;
                }

                if (jquery) {
                    jquery('body').append(content);
                }
            };

            var hasLoggedConversion = function (token) {
                if (token) {
                    return document.cookie.indexOf('loggedConversion=' + token) !== -1;
                }
                return false;
            }

            var setCookieIfConversion = function (token) {
                if (token) {
                    var twoMonthsFromNow = new Date(Date.now());
                    twoMonthsFromNow.setMonth(twoMonthsFromNow.getMonth() + 2);

                    document.cookie = 'loggedConversion=' + token + '; expires=' + twoMonthsFromNow;
                }
            }

            var trekkie = window.ShopifyAnalytics.lib = window.trekkie = window.trekkie || [];
            if (trekkie.integrations) {
                return;
            }
            trekkie.methods = [
                'identify',
                'page',
                'ready',
                'track',
                'trackForm',
                'trackLink'
            ];
            trekkie.factory = function (method) {
                return function () {
                    var args = Array.prototype.slice.call(arguments);
                    args.unshift(method);
                    trekkie.push(args);
                    return trekkie;
                };
            };
            for (var i = 0; i < trekkie.methods.length; i++) {
                var key = trekkie.methods[i];
                trekkie[key] = trekkie.factory(key);
            }
            trekkie.load = function (config) {
                trekkie.config = config || {};
                trekkie.config.initialDocumentCookie = document.cookie;
                var first = document.getElementsByTagName('script')[0];
                var script = document.createElement('script');
                script.type = 'text/javascript';
                script.onerror = function (e) {
                    var scriptFallback = document.createElement('script');
                    scriptFallback.type = 'text/javascript';
                    scriptFallback.onerror = function (error) {
                        var Monorail = {
                            produce: function produce(monorailDomain, schemaId, payload) {
                                var currentMs = new Date().getTime();
                                var event = {
                                    schema_id: schemaId,
                                    payload: payload,
                                    metadata: {
                                        event_created_at_ms: currentMs,
                                        event_sent_at_ms: currentMs
                                    }
                                };
                                return Monorail.sendRequest('https://' + monorailDomain + '/v1/produce', JSON.stringify(event));
                            },
                            sendRequest: function sendRequest(endpointUrl, payload) {
                                // Try the sendBeacon API
                                if (window && window.navigator && typeof window.navigator.sendBeacon === 'function' && typeof window.Blob === 'function' && !Monorail.isIos12()) {
                                    var blobData = new window.Blob([payload], {
                                        type: 'text/plain'
                                    });

                                    if (window.navigator.sendBeacon(endpointUrl, blobData)) {
                                        return true;
                                    } // sendBeacon was not successful

                                } // XHR beacon

                                var xhr = new XMLHttpRequest();

                                try {
                                    xhr.open('POST', endpointUrl);
                                    xhr.setRequestHeader('Content-Type', 'text/plain');
                                    xhr.send(payload);
                                } catch (e) {
                                    console.log(e);
                                }

                                return false;
                            },
                            isIos12: function isIos12() {
                                return window.navigator.userAgent.lastIndexOf('iPhone; CPU iPhone OS 12_') !== -1 || window.navigator.userAgent.lastIndexOf('iPad; CPU OS 12_') !== -1;
                            }
                        };
                        Monorail.produce('monorail-edge.shopifysvc.com',
                            'trekkie_storefront_load_errors/1.1',
                            {
                                shop_id: 4280465,
                                theme_id: 123771060358,
                                app_name: 'storefront',
                                context_url: window.location.href,
                                source_url: 'https://thesatanictemple.com/cdn/s/trekkie.storefront.7a4225caf9379fe42103e492053220a7195df1ae.min.js'
                            });

                    };
                    scriptFallback.async = true;
                    scriptFallback.src = 'https://thesatanictemple.com/cdn/s/trekkie.storefront.7a4225caf9379fe42103e492053220a7195df1ae.min.js';
                    first.parentNode.insertBefore(scriptFallback, first);
                };
                script.async = true;
                script.src = 'https://thesatanictemple.com/cdn/s/trekkie.storefront.7a4225caf9379fe42103e492053220a7195df1ae.min.js';
                first.parentNode.insertBefore(script, first);
            };
            trekkie.load(
                { 'Trekkie': { 'appName': 'storefront', 'development': false, 'defaultAttributes': { 'shopId': 4280465, 'isMerchantRequest': true, 'themeId': 123771060358, 'themeCityHash': '15968519097005646506', 'contentLanguage': 'en', 'currency': 'USD' }, 'isServerSideCookieWritingEnabled': true, 'monorailRegion': 'shop_domain' }, 'Facebook Pixel': { 'pixelIds': ['242258393750463'], 'agent': 'plshopify1.2' }, 'Pinterest Pixel': { 'pixelId': '2612852780373' }, 'Google Gtag Pixel': { 'conversionId': 'G-X7S1ZNXFZQ', 'eventLabels': [{ 'type': 'purchase', 'action_label': 'G-X7S1ZNXFZQ' }, { 'type': 'page_view', 'action_label': 'G-X7S1ZNXFZQ' }, { 'type': 'view_item', 'action_label': 'G-X7S1ZNXFZQ' }, { 'type': 'search', 'action_label': 'G-X7S1ZNXFZQ' }, { 'type': 'add_to_cart', 'action_label': 'G-X7S1ZNXFZQ' }, { 'type': 'begin_checkout', 'action_label': 'G-X7S1ZNXFZQ' }, { 'type': 'add_payment_info', 'action_label': 'G-X7S1ZNXFZQ' }], 'targetCountry': 'US' }, 'Session Attribution': {}, 'S2S': { 'facebookCapiEnabled': true, 'facebookAppPixelId': '242258393750463', 'source': 'trekkie-storefront-renderer' } }
            );

            var loaded = false;
            trekkie.ready(function () {
                if (loaded) return;
                loaded = true;

                window.ShopifyAnalytics.lib = window.trekkie;


                var originalDocumentWrite = document.write;
                document.write = customDocumentWrite;
                try { window.ShopifyAnalytics.merchantGoogleAnalytics.call(this); } catch (error) { };
                document.write = originalDocumentWrite;

                window.ShopifyAnalytics.lib.page(null, { 'pageType': 'page', 'resourceType': 'page', 'resourceId': 240382034 });

                var match = window.location.pathname.match(/checkouts\/(.+)\/(thank_you|post_purchase)/)
                var token = match ? match[1] : undefined;
                if (!hasLoggedConversion(token)) {
                    setCookieIfConversion(token);

                }
            });


            var eventsListenerScript = document.createElement('script');
            eventsListenerScript.async = true;
            eventsListenerScript.src = 'https://thesatanictemple.com/cdn/shopifycloud/shopify/assets/shop_events_listener-a7c63dba65ccddc484f77541dc8ca437e60e1e9e297fe1c3faebf6523a0ede9b.js';
            document.getElementsByTagName('head')[0].appendChild(eventsListenerScript);

        })();</script>
    <script async=''
        src='https://thesatanictemple.com/cdn/shopifycloud/shopify/assets/shop_events_listener-a7c63dba65ccddc484f77541dc8ca437e60e1e9e297fe1c3faebf6523a0ede9b.js'></script>
    <script class='boomerang'>
        (function () {
            if (window.BOOMR && (window.BOOMR.version || window.BOOMR.snippetExecuted)) {
                return;
            }
            window.BOOMR = window.BOOMR || {};
            window.BOOMR.snippetStart = new Date().getTime();
            window.BOOMR.snippetExecuted = true;
            window.BOOMR.snippetVersion = 12;
            window.BOOMR.application = 'storefront-renderer';
            window.BOOMR.themeName = 'Retina';
            window.BOOMR.themeVersion = '7.1.0';
            window.BOOMR.shopId = 4280465;
            window.BOOMR.themeId = 123771060358;
            window.BOOMR.renderRegion = 'gcp-us-central1';
            window.BOOMR.url =
                'https://thesatanictemple.com/cdn/shopifycloud/boomerang/shopify-boomerang-1.0.0.min.js';
            var where = document.currentScript || document.getElementsByTagName('script')[0];
            var parentNode = where.parentNode;
            var promoted = false;
            var LOADER_TIMEOUT = 3000;
            function promote() {
                if (promoted) {
                    return;
                }
                var script = document.createElement('script');
                script.id = 'boomr-scr-as';
                script.src = window.BOOMR.url;
                script.async = true;
                parentNode.appendChild(script);
                promoted = true;
            }
            function iframeLoader(wasFallback) {
                promoted = true;
                var dom, bootstrap, iframe, iframeStyle;
                var doc = document;
                var win = window;
                window.BOOMR.snippetMethod = wasFallback ? 'if' : 'i';
                bootstrap = function (parent, scriptId) {
                    var script = doc.createElement('script');
                    script.id = scriptId || 'boomr-if-as';
                    script.src = window.BOOMR.url;
                    BOOMR_lstart = new Date().getTime();
                    parent = parent || doc.body;
                    parent.appendChild(script);
                };
                if (!window.addEventListener && window.attachEvent && navigator.userAgent.match(/MSIE [67]./)) {
                    window.BOOMR.snippetMethod = 's';
                    bootstrap(parentNode, 'boomr-async');
                    return;
                }
                iframe = document.createElement('IFRAME');
                iframe.src = 'about:blank';
                iframe.title = '';
                iframe.role = 'presentation';
                iframe.loading = 'eager';
                iframeStyle = (iframe.frameElement || iframe).style;
                iframeStyle.width = 0;
                iframeStyle.height = 0;
                iframeStyle.border = 0;
                iframeStyle.display = 'none';
                parentNode.appendChild(iframe);
                try {
                    win = iframe.contentWindow;
                    doc = win.document.open();
                } catch (e) {
                    dom = document.domain;
                    iframe.src = 'javascript:var d=document.open();d.domain='' + dom + '';void(0);';
                    win = iframe.contentWindow;
                    doc = win.document.open();
                }
                if (dom) {
                    doc._boomrl = function () {
                        this.domain = dom;
                        bootstrap();
                    };
                    doc.write('<body onload='document._boomrl();'>');
                } else {
                    win._boomrl = function () {
                        bootstrap();
                    };
                    if (win.addEventListener) {
                        win.addEventListener('load', win._boomrl, false);
                    } else if (win.attachEvent) {
                        win.attachEvent('onload', win._boomrl);
                    }
                }
                doc.close();
            }
            var link = document.createElement('link');
            if (link.relList &&
                typeof link.relList.supports === 'function' &&
                link.relList.supports('preload') &&
                ('as' in link)) {
                window.BOOMR.snippetMethod = 'p';
                link.href = window.BOOMR.url;
                link.rel = 'preload';
                link.as = 'script';
                link.addEventListener('load', promote);
                link.addEventListener('error', function () {
                    iframeLoader(true);
                });
                setTimeout(function () {
                    if (!promoted) {
                        iframeLoader(true);
                    }
                }, LOADER_TIMEOUT);
                BOOMR_lstart = new Date().getTime();
                parentNode.appendChild(link);
            } else {
                iframeLoader(false);
            }
            function boomerangSaveLoadTime(e) {
                window.BOOMR_onload = (e && e.timeStamp) || new Date().getTime();
            }
            if (window.addEventListener) {
                window.addEventListener('load', boomerangSaveLoadTime, false);
            } else if (window.attachEvent) {
                window.attachEvent('onload', boomerangSaveLoadTime);
            }
            if (document.addEventListener) {
                document.addEventListener('onBoomerangLoaded', function (e) {
                    e.detail.BOOMR.init({
                        ResourceTiming: {
                            enabled: true,
                            trackedResourceTypes: ['script', \"img\", 'css']
                        },
                    });
                    e.detail.BOOMR.t_end = new Date().getTime();
                });
            } else if (document.attachEvent) {
                document.attachEvent('onpropertychange', function (e) {
                    if (!e) e = event;
                    if (e.propertyName === 'onBoomerangLoaded') {
                        e.detail.BOOMR.init({
                            ResourceTiming: {
                                enabled: true,
                                trackedResourceTypes: ['script', \"img\", 'css']
                            },
                        });
                        e.detail.BOOMR.t_end = new Date().getTime();
                    }
                });
            }
        })();</script>
    <link href='https://thesatanictemple.com/cdn/shopifycloud/boomerang/shopify-boomerang-1.0.0.min.js' rel='preload'
        as='script'>
    <script src='//stats.g.doubleclick.net/dc.js'></script>
    <link rel='stylesheet' type='text/css' href='//a.klaviyo.com/media/css/public/klaviyo_subscribe.css'>
    <script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/jquery.form/3.32/jquery.form.min.js'></script>
    <link rel='stylesheet' type='text/css'
        href='https://cdn.shopify.com/extensions/98c5b53f-cd04-4bf1-87df-3a0a6e46e156/powerful-form-builder-41/assets/globo.formbuilder.chunk.main-styles.3dabc574dda4.css'>
    <script id='boomr-scr-as'
        src='https://thesatanictemple.com/cdn/shopifycloud/boomerang/shopify-boomerang-1.0.0.min.js' async=''></script>
    <script type='text/javascript' async=''
        src=' https://static-tracking.klaviyo.com/onsite/js/fender_analytics.89f34df06656c3dc9d28.js?cb=1'
        crossorigin='anonymous'></script>
    <script type='text/javascript' async=''
        src=' https://static-tracking.klaviyo.com/onsite/js/static.500134348b1f0969ffe3.js?cb=1'
        crossorigin='anonymous'></script>
    <script type='text/javascript' async=''
        src='https://static.klaviyo.com/onsite/js/runtime.04fc31de852277dbf5c6.js?cb=1'
        crossorigin='anonymous'></script>
    <script type='text/javascript' async=''
        src='https://static.klaviyo.com/onsite/js/sharedUtils.481c86ceb0604beda8d1.js?cb=1'
        crossorigin='anonymous'></script>
    <script type='module' defer=''
        src='https://thesatanictemple.com/cdn/shopifycloud/consent-tracking-api/v0.1/consent-tracking-api.js'></script>
    <link rel='dns-prefetch preconnect' href='h' crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='script'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/runtime.latest.en.d8c86c9f705ddba2d0f4.js'
        crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='script'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/568.latest.en.9485cba652f34ad14bb5.js'
        crossorigin=''>
    <script type='text/javascript'
        src='https://productreviews.shopifycdn.com/assets/v4/spr-0e683603bfa450170bff33e7fbad64e7dfe9585e1caeb951bbe283e5a2306523.js'></script>
    <link type='text/css' rel='stylesheet' media='screen'
        href='https://productreviews.shopifycdn.com/assets/v4/spr-07102fd76ff4bc22a3e0c32f0cca9ee51c77c34bbc4bdac79abb48f698de10dd.css'>
    <script defer='' src='https://upsell-app.logbase.io/lb-upsell-components/lb-upsell-components.esm.js'
        type='module'></script>
    <link rel='prefetch' fetchpriority='low' as='script'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/608.latest.en.53e6a31e2bca0dbc25ee.js'
        crossorigin=''>
    <style>
        .rc_theme--avenue .rc-container,
        .rc_theme--avenue .rc-container label {
            font-size: 15px
        }

        .rc_theme--avenue .rc-radio__input:before {
            display: none
        }

        .rc_theme--avenue .rc-selling-plans__dropdown {
            background: #fff;
            min-width: 204px;
            font-size: 15px;
            border: 1px solid #ccc
        }

        .rc_theme--pacific .rc-selling-plans__dropdown {
            appearance: auto
        }

        .rc_theme--envy .rc-option {
            padding: 10px
        }

        .rc_theme--envy .rc-option input[type=radio] {
            display: none
        }

        .rc_theme--envy .rc-selling-plans__dropdown {
            padding: 10px
        }

        .rc_theme--vantage .rc-selling-plans {
            margin-bottom: 40px
        }

        .rc_theme--vantage .rc-selling-plans__dropdown {
            padding: 10px 28px 10px 18px
        }

        .rc_theme--california .rc-radio__label:after {
            display: none
        }

        .rc_theme--reach .site-main {
            z-index: auto
        }

        div.rc_popup {
            display: block;
            padding: 8px;
            white-space: nowrap
        }

        div.rc_block__type--active+div.rc_popup {
            margin-top: 8px
        }

        .rc_popup_label_wrapper {
            background: rgba(0, 0, 0, 0);
            border: 0;
            outline: 0
        }

        .rc_popup_label_wrapper:focus {
            outline: .2rem solid var(--rc-active-color)
        }

        div.rc_popup__hover,
        a.rc_popup__hover {
            display: inline-flex;
            align-items: center;
            position: relative;
            padding-bottom: 12px;
            cursor: pointer
        }

        div.rc_popup__block {
            display: none;
            position: absolute;
            top: 100%;
            cursor: default;
            left: 0;
            text-align: left;
            white-space: initial
        }

        div.rc_popup__block.active {
            display: block
        }

        div.rc_popup__hover:hover .rc_popup__block,
        div.rc_popup__block:hover {
            display: block
        }

        div.rc_popup__hover--mobile div.rc_popup__block:hover {
            display: none
        }

        div.rc_popup__block {
            width: 300px;
            padding: 0
        }

        div.rc_popup__close {
            display: block;
            width: 40px;
            height: 40px;
            position: absolute;
            top: 0;
            right: 0;
            color: #fff;
            font-size: 23px;
            text-align: center;
            line-height: 40px;
            z-index: 300;
            cursor: pointer;
            font-family: arial
        }

        div.rc_popup__block__content a {
            text-decoration: none
        }

        #rc_login {
            display: block;
            width: 100%;
            text-align: center;
            margin: 20px auto
        }
    </style>
    <style>
        .rc_popup__hover a[data-v-7bc675e0] {
            text-decoration: none
        }

        .rc_popup__hover[data-v-7bc675e0]:after {
            display: none;
            content: '';
            width: 1px;
            border: 10px solid rgba(0, 0, 0, 0);
            position: absolute;
            top: 18px;
            border-bottom-color: var(--backgroundColor)
        }

        .rc_popup__hover[data-v-7bc675e0]:hover:after {
            display: block
        }

        .rc_popup__block[data-v-7bc675e0]:before {
            border-bottom-color: var(--backgroundColor)
        }

        .rc_popup__block__content[data-v-7bc675e0] {
            padding-bottom: 8px
        }

        .rc_popup__block[data-v-7bc675e0] {
            font-size: 12px;
            padding: 12px;
            z-index: 1000
        }

        .rc_popup__label[data-v-7bc675e0] {
            padding-left: 8px
        }

        .rc_popup__block__footer[data-v-7bc675e0] {
            display: flex;
            justify-content: flex-end
        }

        .reload-icon[data-v-7bc675e0] {
            height: 16px;
            width: 16px;
            color: var(--rc-icon-color)
        }

        .tooltip-badge[data-v-7bc675e0] {
            font-size: 12px;
            display: inline-flex;
            justify-content: center;
            align-items: center;
            background-color: #fff;
            border-radius: 50px;
            padding: 4px 12px
        }

        .tooltip-badge .powered-by[data-v-7bc675e0] {
            color: #191d48;
            font-weight: 400;
            padding-right: 4px
        }

        .tooltip-badge svg[data-v-7bc675e0] {
            color: #191d48;
            width: 5em
        }
    </style>
    <style>
        .rc-selling-plans__label[data-v-b26123c2] {
            cursor: initial
        }
    </style>
    <style>
        .rc-selling-plans__label[data-v-7965ef98] {
            cursor: initial
        }
    </style>
    <style>
        .rc-template__legacy-radio .rc-radio {
            display: block;
            white-space: nowrap;
            padding: 8px
        }

        .rc-template__legacy-radio .rc-radio+.rc-radio {
            padding-top: 0
        }

        .rc-template__legacy-radio .rc-radio.rc-option__subsave {
            padding-bottom: 0
        }

        .rc-template__legacy-radio .rc-radio__input,
        .rc-template__legacy-radio .rc-radio__label {
            display: inline;
            vertical-align: middle
        }

        .rc-template__legacy-radio .rc_widget__option__selector+.rc-selling-plans {
            padding-left: 30px;
            padding-bottom: 8px
        }
    </style>
    <style>
        .rc-checkbox {
            display: inline-flex;
            align-items: center;
            vertical-align: top;
            cursor: pointer;
            margin-bottom: 0
        }

        .rc-checkbox__input {
            width: 16px
        }

        .rc-checkbox__input:focus {
            outline: 0
        }

        .rc-checkbox__label {
            margin-inline-start: 8px;
            line-height: 2
        }
    </style>
    <style>
        .rc-radio {
            display: inline-flex;
            align-items: center;
            vertical-align: top;
            cursor: pointer;
            margin-bottom: 0
        }

        .rc-radio__input {
            width: 16px
        }

        .rc-radio__input:focus {
            outline: 0
        }

        .rc-radio__label {
            margin-left: 8px;
            line-height: 2
        }
    </style>
    <style>
        .rc-template__button-group .rc-radio {
            border: 1px solid #ccc;
            border-radius: 10px;
            padding: 12px 20px;
            text-align: center;
            width: 50%;
            max-width: 200px
        }

        .rc-template__button-group .rc-radio.rc-option--active {
            box-shadow: 0px 0px 0px 1px #ccc
        }

        .rc-template__button-group .rc-radio:first-child {
            margin-right: 4px;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0
        }

        .rc-template__button-group .rc-radio:nth-child(2) {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0
        }

        .rc-template__button-group .rc-radio .rc-radio__input {
            border: 0px;
            clip: rect(0px, 0px, 0px, 0px);
            height: 1px;
            width: 1px;
            margin: -1px;
            padding: 0px;
            overflow: hidden;
            white-space: nowrap;
            position: absolute
        }

        .rc-template__button-group .rc-radio .rc-radio__input:focus-visible+.rc-radio__label {
            outline: .2rem solid var(--rc-active-color);
            outline-offset: .3rem
        }

        .rc-template__button-group .rc-radio .rc-radio__label {
            margin-left: 0;
            line-height: 1;
            width: 100%
        }

        .rc-template__button-group .rc-radio .rc-option__price {
            display: block;
            font-weight: bold;
            font-size: 20px;
            margin-top: 8px
        }

        .rc-template__button-group .rc-radio-group__options {
            display: flex
        }

        .rc-template__button-group .rc-radio-group__options+.rc-selling-plans {
            margin-top: 12px
        }
    </style>
    <style>
        .rc-template__checkbox {
            padding: 0 8px
        }

        .rc-template__checkbox .rc-option__text,
        .rc-template__checkbox .rc-option__discount {
            font-weight: bold
        }

        .rc-widget .rc-template__checkbox .rc-option__discount {
            padding-right: 0
        }
    </style>
    <style>
        .rc-template__radio-group .rc-radio-group__options {
            overflow: hidden
        }

        .rc-template__radio-group .rc-radio {
            display: flex;
            padding: 8px 20px
        }

        .rc-template__radio-group .rc-radio:not(:first-child) {
            border-top: 1px solid #ccc
        }

        .rc-template__radio-group .rc-radio .rc-radio__input {
            min-height: 0
        }

        .rc-template__radio-group .rc-radio.rc-option__subsave .rc-radio__label {
            font-weight: bold
        }

        .rc-template__radio-group .rc-radio .rc-radio__label {
            display: flex
        }

        .rc-template__radio-group .rc-radio .rc-radio__label .rc-option__text {
            order: 2
        }

        .rc-template__radio-group .rc-radio .rc-radio__label .rc-option__discount {
            order: 3
        }

        .rc-template__radio-group .rc-radio .rc-radio__label .rc-option__price {
            order: 1;
            font-weight: bold;
            margin-right: 16px
        }

        .rc-template__radio-group .rc-radio-group__options {
            border: 1px solid #ccc;
            border-radius: 10px
        }

        .rc-template__radio-group .rc-radio-group__options+.rc-selling-plans {
            margin-top: 16px;
            font-weight: bold
        }
    </style>
    <style>
        .rc-container {
            margin-bottom: .5em
        }

        .rc-widget {
            color: var(--rc-color)
        }

        .rc-widget .rc-option--active {
            color: var(--rc-active-color);
            background-color: var(--rc-active-bg)
        }

        .rc-widget .rc-option__text,
        .rc-widget .rc-option__discount {
            padding-right: 4px
        }

        .rc-widget label {
            color: inherit
        }
    </style>
    <style>
        :root {
            --rc-color: #040404;
            --rc-active-bg: #efefef;
            --rc-active-color: #000000
        }

        .visually-hidden {
            border: 0px;
            clip: rect(0px, 0px, 0px, 0px);
            height: 1px;
            width: 1px;
            margin: -1px;
            padding: 0px;
            overflow: hidden;
            white-space: nowrap;
            position: absolute
        }
    </style>
    <script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js'></script>
    <link rel='prefetch' fetchpriority='low' as='script'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/758.latest.en.4c208d48ab93e82a760e.js'
        crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='script'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/app.latest.en.97e31079127a78865d9a.js'
        crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='script'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/Information.latest.en.faad9d6f6ff532e66a1c.js'
        crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='style'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/568.latest.en.909df351ad87f7f9fcc9.css'
        crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='style'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/app.latest.en.f5aea76e2b1cba6520da.css'
        crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='style'
        href='https://cdn.shopify.com/shopifycloud/checkout-web/assets/739.latest.en.cb2d2fb5c673c1375a48.css'
        crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='image'
        href='https://cdn.shopify.com/s/files/1/0428/0465/files/TSTStars_x320.jpg?v=1613536384' crossorigin=''>
    <link rel='prefetch' fetchpriority='low' as='image'
        href='https://cdn.shopify.com/s/files/1/0428/0465/files/The_Satanic_Temple_ad1b12a8-5ba2-41be-b21c-27060ec8003f_2000x.jpg?v=1613536837'
        crossorigin=''>
    <style type='text/css' id='lb-upsell-enhancements-css'>
        .lb-upsell-prevent-scroll {
            overflow: hidden !important
        }

        .lb-upsell-variants-select {
            padding-right: 25px !important
        }

        .ppa-add-checkbox-input,
        .ppa-prod-checkbox-left,
        .ppa-prod-checkbox-left-grid {
            height: 16px !important;
            width: 16px !important
        }

        .ppcse-spinner {
            margin: 0 !important
        }

        .ppcse-close {
            font-weight: 250 !important;
            color: #5f5f5f !important
        }

        .ppcse-modal-prod-price {
            font-size: 18px !important;
            margin: 0 0 16px !important;
            padding: 0 !important
        }

        .ppcse-modal-prod-price b {
            font-weight: initial !important
        }

        .ppcse-modal-prod-title {
            margin: 0 0 16px !important;
            padding: 0 !important;
            font-size: 21px !important
        }

        .ppcse-modal-form-label,
        .stepper-label {
            font-weight: 400 !important;
            font-size: 13px !important;
            margin-bottom: 0 !important
        }

        .lb-upsell-modal-form-label {
            margin-bottom: 4px !important
        }

        .ppcse-modal-prod-desc iframe,
        .ppcse-modal-prod-desc img,
        select.ppcse-modal-form-control {
            width: 100% !important
        }

        .ppcse-modal-cart-btn {
            margin-bottom: 20px !important;
            line-height: normal !important;
            cursor: pointer !important
        }

        .ppcse-modal-prod-img {
            padding-right: 15px !important;
            padding-left: 15px !important
        }

        .lb-upsell-modal-container,
        .lb-upsell-modal-wrap,
        .ppcse-modal-wrap {
            z-index: 2147483647 !important
        }

        .lb-upsell-modal-bg,
        .ppcse-modal-bg {
            z-index: 2147483646 !important
        }

        .ppcse-img-lt {
            margin-right: 0 !important;
            margin-bottom: 0 !important
        }

        .ppcse-tot-container {
            padding-right: 0 !important
        }

        .ppcse-m {
            overflow: hidden
        }

        .ppa-prod-img {
            height: 100px !important;
            width: 100px !important
        }

        .ppa-add-btn-cont-grid,
        .ppa-add-checkbox-cont-grid {
            margin-top: auto !important
        }

        .ppa-add-checkbox-cont-grid {
            padding-top: 6px
        }

        .ppa-prod-container-grid-margin {
            margin-bottom: 15px !important
        }

        .ppa-add-checkbox-spinner {
            margin: 3px 0 !important
        }

        .lb-upsell-ppa-spinner-list-checkbox-left {
            margin: 3px 10px 3px 3px !important
        }

        .ppa-prod-container {
            min-height: 100px !important
        }

        .lb-upsell-modal-product-secondary:focus,
        .lb-upsell-modal-product-secondary:hover {
            background: var(--lb-upsell-puf-skip-btn-bg-color, #efefef) !important;
            color: var(--lb-upsell-puf-skip-btn-text-color, #000) !important
        }

        .lb-upsell-modal-product-details-variants select,
        .stepper-container-minus,
        .stepper-container-plus {
            border-color: #bbb !important
        }

        .stepper-container-input {
            border-left: 0 !important;
            border-right: 0px !important;
            border-color: #bbb !important
        }

        .lb-upsell-modal-offer-name {
            padding: 14px !important;
            font-weight: 700 !important
        }

        .ppcse-compare-at-price {
            display: inline !important
        }

        .lb-upsell-ppa-carousel {
            margin-right: 5px !important
        }

        .lb-upsell-modal-product-details-title {
            font-size: large !important;
            padding-top: 0 !important
        }

        .lb-upsell-modal-offer-name {
            text-align: center !important
        }

        .lb-upsell-modal-timer-container {
            width: 96% !important;
            border-radius: 4px !important
        }

        .lb-upsell-modal-product-img {
            border: 1px solid #f5f5f5 !important
        }

        .lb-upsell-modal-product-details-variants select {
            width: 100% !important
        }

        .ppcse-tot-container-tot {
            padding-top: 0 !important
        }

        @media only screen and (max-width:768px) {

            .ppa-add-to-cart-btn,
            .ppcs-variants-form-select {
                width: 100px !important
            }
        }
    </style>
</head>


<body>
    <div class='globo-form boxed-form globo-form-id-57897'>

        <div class='globo-form-app boxed-layout'>
            <div class='header dismiss hidden' onclick='Globo.FormBuilder.closeModalForm(this)'>
                <svg viewBox='0 0 20 20' class='' focusable=\"false\" aria-hidden=\"true\">
                    <path
                        d='M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z'
                        fill-rule='evenodd'></path>
                </svg>
            </div>
            <form class='g-container' novalidate='' action='https://form.globosoftware.net//api/front/form/57897/send'
                method='POST' enctype='multipart/form-data' data-id='57897'>

                <div class='header'>
                    <h3 class='title globo-heading'>Contact us</h3>

                    <div class='description globo-description'>Leave your message and we'll get back to you shortly.
                    </div>

                </div>


                <div class='content flex-wrap block-container' data-id='57897'>












                    <div class='globo-form-control layout-2-column'>
                        <label for='57897-text' class='classic-label globo-label '><span class='label-content'
                                data-label='Your Name'>Your Name</span><span class='text-danger text-smaller'>
                                *</span></label>
                        <div class='globo-form-input'>

                            <input type='text' data-type='text' class='classic-input' id='57897-text' name='text'
                                placeholder='Your Name' presence=''>
                        </div>

                        <small class='messages'></small>
                    </div>















                    <div class='globo-form-control layout-2-column'>
                        <label for='57897-email' class='classic-label globo-label '><span class='label-content'
                                data-label='Your Email'>Your Email</span><span class='text-danger text-smaller'>
                                *</span></label>
                        <div class='globo-form-input'>

                            <input type='text' data-type='email' class='classic-input' id='57897-email' name='email'
                                placeholder='Your Email' presence=''>
                        </div>

                        <small class='messages'></small>
                    </div>

                    <div class='globo-form-control layout-1-column' data-default-value='\'>
                        <label class='classic-label globo-label '><span class='label-content' data-label=''></span><span
                                class='text-danger text-smaller'> *</span></label>


                        <ul class='flex-wrap'>





                            <li class='globo-list-control option-1-column'>
                                <div class='checkbox-wrapper'>
                                    <input class='checkbox-input'
                                        id='57897-checkbox-I have read FAQ. We will not reply to questions that are answered in the FAQ.-'
                                        type='checkbox' data-type='checkbox' name='checkbox[]' presence=''
                                        value='I have read FAQ. We will not reply to questions that are answered in the FAQ.'>
                                    <label class='checkbox-label globo-option'
                                        for='57897-checkbox-I have read FAQ. We will not reply to questions that are answered in the FAQ.-'>I
                                        have read FAQ. We will not reply to questions that are answered in the
                                        FAQ.</label>
                                </div>
                            </li>

                        </ul>

                        <small class='messages'></small>
                    </div>
















                    <div class='globo-form-control layout-1-column' data-default-value='\'>
                        <label class='classic-label globo-label '><span class='label-content' data-label=''></span><span
                                class='text-danger text-smaller'> *</span></label>


                        <ul class='flex-wrap'>





                            <li class='globo-list-control option-1-column'>
                                <div class='checkbox-wrapper'>
                                    <input class='checkbox-input'
                                        id='57897-checkbox-2-I reviewed the Find a Congregation page.-' type='checkbox'
                                        data-type='checkbox' name='checkbox-2[]' presence=''
                                        value='I reviewed the Find a Congregation page.'>
                                    <label class='checkbox-label globo-option'
                                        for='57897-checkbox-2-I reviewed the Find a Congregation page.-'>I reviewed the
                                        Find a Congregation page.</label>
                                </div>
                            </li>

                        </ul>

                        <small class='messages'></small>
                    </div>
















                    <div class='globo-form-control layout-1-column' data-default-value='\'>
                        <label class='classic-label globo-label '><span class='label-content' data-label=''></span><span
                                class='text-danger text-smaller'> *</span></label>


                        <ul class='flex-wrap'>





                            <li class='globo-list-control option-1-column'>
                                <div class='checkbox-wrapper'>
                                    <input class='checkbox-input'
                                        id='57897-checkbox-3-I don't want to start a congregation .-' type='checkbox'
                                        data-type='checkbox' name='checkbox-3[]' presence=''
                                        value='I don't want to start a congregation .'>
                                    <label class='checkbox-label globo-option'
                                        for='57897-checkbox-3-I don't want to start a congregation .-'>I don't want to
                                        start a congregation .</label>
                                </div>
                            </li>

                        </ul>

                        <small class='messages'></small>
                    </div>
















                    <div class='globo-form-control layout-1-column' data-default-value='\'>
                        <label class='classic-label globo-label '><span class='label-content' data-label=''></span><span
                                class='text-danger text-smaller'> *</span></label>


                        <ul class='flex-wrap'>





                            <li class='globo-list-control option-1-column'>
                                <div class='checkbox-wrapper'>
                                    <input class='checkbox-input'
                                        id='57897-checkbox-4-I am not writing about selling my soul.-' type='checkbox'
                                        data-type='checkbox' name='checkbox-4[]' presence=''
                                        value='I am not writing about selling my soul.'>
                                    <label class='checkbox-label globo-option'
                                        for='57897-checkbox-4-I am not writing about selling my soul.-'>I am not writing
                                        about selling my soul.</label>
                                </div>
                            </li>

                        </ul>

                        <small class='messages'></small>
                    </div>
















                    <div class='globo-form-control layout-1-column' data-default-value='\'>
                        <label class='classic-label globo-label '><span class='label-content' data-label=''></span><span
                                class='text-danger text-smaller'> *</span></label>


                        <ul class='flex-wrap'>





                            <li class='globo-list-control option-1-column'>
                                <div class='checkbox-wrapper'>
                                    <input class='checkbox-input'
                                        id='57897-checkbox-5-My question is not related to the shop or an order that was placed. For questions involving the TST Shop please use our shop contact form.-'
                                        type='checkbox' data-type='checkbox' name='checkbox-5[]' presence=''
                                        value='My question is not related to the shop or an order that was placed. For questions involving the TST Shop please use our shop contact form.'>
                                    <label class='checkbox-label globo-option'
                                        for='57897-checkbox-5-My question is not related to the shop or an order that was placed. For questions involving the TST Shop please use our shop contact form.-'>My
                                        question is not related to the shop or an order that was placed. For questions
                                        involving the TST Shop please use our shop contact form.</label>
                                </div>
                            </li>

                        </ul>

                        <small class='messages'></small>
                    </div>















                    <div class='globo-form-control layout-1-column'>
                        <label for='57897-text-2' class='classic-label globo-label '><span class='label-content'
                                data-label='Subject'>Subject</span><span class='text-danger text-smaller'>
                                *</span></label>
                        <div class='globo-form-input'>

                            <input type='text' data-type='text' class='classic-input' id='57897-text-2' name='text-2'
                                placeholder='Subject' presence=''>
                        </div>

                        <small class='messages'></small>
                    </div>















                    <div class='globo-form-control layout-1-column'>
                        <label for='57897-textarea' class='classic-label globo-label '><span class='label-content'
                                data-label='Message'>Message</span><span class='text-danger text-smaller'>
                                *</span></label>
                        <textarea id='57897-textarea' data-type='textarea' class='classic-input' rows='3'
                            name='textarea' placeholder='Message' presence=''></textarea>

                        <small class='messages'></small>
                    </div>















                    <div class='globo-form-control layout-1-column'>
                        <label for='57897-file' class='classic-label globo-label '><span class='label-content'
                                data-label=''></span><span></span></label>
                        <div class='globo-form-input'>

                            <input type='file' data-type='file' class='classic-input' id='57897-file' name='file'
                                placeholder='' data-allowed-extensions='jpg,jpeg,png,pdf,csv'>
                        </div>

                        <small class='messages'></small>
                    </div>





                </div>

                <div class='message error' data-other-error='Something went wrong, please try again'>
                    <div class='content'></div>
                    <div class='dismiss' onclick='Globo.FormBuilder.dismiss(this)'>
                        <svg viewBox='0 0 20 20' class='' focusable=\"false\" aria-hidden=\"true\">
                            <path
                                d='M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z'
                                fill-rule='evenodd'></path>
                        </svg>
                    </div>
                </div>
                <div class='message warning' data-other-error='Something went wrong, please try again'>
                    <div class='content'></div>
                    <div class='dismiss' onclick='Globo.FormBuilder.dismiss(this)'>
                        <svg viewBox='0 0 20 20' class='' focusable=\"false\" aria-hidden=\"true\">
                            <path
                                d='M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z'
                                fill-rule='evenodd'></path>
                        </svg>
                    </div>
                </div>

                <div class='message success'>
                    <div class='content'>
                        <h4>Thanks for getting in touch! We will contact you shortly.&nbsp;Hail Satan!</h4>
                    </div>
                    <div class='dismiss' onclick='Globo.FormBuilder.dismiss(this)'>
                        <svg viewBox='0 0 20 20' class='' focusable=\"false\" aria-hidden=\"true\">
                            <path
                                d='M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z'
                                fill-rule='evenodd'></path>
                        </svg>
                    </div>
                </div>

                <div class='footer'>


                    <button class='action submit classic-button'><span class='spinner'></span>Send</button>


                </div>

                <input type='hidden' value='' name='customer[id]'>
                <input type='hidden' value='' name='customer[email]'>
                <input type='hidden' value='' name='customer[name]'>
                <input type='hidden' value='The Satanic Temple - Contact' name='page[title]'>
                <input type='hidden' value='https://thesatanictemple.com/pages/contact' name='page[href]'>
                <input type='hidden'
                    value='{&quot;text&quot;:&quot;Your Name&quot;,&quot;email&quot;:&quot;Your Email&quot;,&quot;checkbox&quot;:&quot;&quot;,&quot;checkbox-2&quot;:&quot;&quot;,&quot;checkbox-3&quot;:&quot;&quot;,&quot;checkbox-4&quot;:&quot;&quot;,&quot;checkbox-5&quot;:&quot;&quot;,&quot;text-2&quot;:&quot;Subject&quot;,&quot;textarea&quot;:&quot;Message&quot;,&quot;file&quot;:&quot;&quot;}'
                    name='_keyLabel'>
            </form>

            <div class='message success'>
                <div class='content'>
                    <h4>Thanks for getting in touch! We will contact you shortly.&nbsp;Hail Satan!</h4>
                </div>
                <div class='dismiss' onclick='Globo.FormBuilder.dismiss(this)'>
                    <svg viewBox='0 0 20 20' class='' focusable=\"false\" aria-hidden=\"true\">
                        <path
                            d='M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z'
                            fill-rule='evenodd'></path>
                    </svg>
                </div>
            </div>

        </div>
    </div>
</body></html>",
        "Link": "",
        "StyleProperties": {
          "AspectRatio": 1.0,
          "TitleTextColor": "#ffffff",
          "TitleTextFontName": "",
          "TitleTextFontSize": 18.0,
          "TitleTextFontWeight": "",
          "TitleTextNoOfLines": 4,
          "DescriptionTextColor": "#ffffff",
          "DescriptionTextFontName": "",
          "DescriptionTextFontSize": 14.0,
          "DescriptionTextFontWeight": "",
          "DescriptionTextNoOfLines": 4,
          "BackgroundColor": "#171717",
          "Alignment": "",
          "Margin": 8.0,
          "Padding": 8.0,
          "Radius": 15.0,
          "BackgroundMargin": 8.0,
          "BackgroundPadding": 8.0,
          "BackgroundRadius": 15.0,
          "ImageSrc": ""
        }
      }
    }
  ]
}